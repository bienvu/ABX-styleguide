.clearfix:before, .clearfix:after,
.avc-wrap:before,
.block-banner__image:before,
.block-product-icon__list:before,
.block-product-icon--type-1:before,
.block-social:before,
.block-testimonial__group:before,
.block-cartriges:before,
.block-specifications:before,
.block-distributor:before,
.block-distributor__group:before,
.block-location__grid:before,
.block-positions form:before,
.block-two-images:before,
.box-grid:before,
.pager__items:before,
.block-subscribe__form__inner:before,
.block-product__grid-2col:before,
.block-product__grid-3col:before,
.block-video__wrap:before,
.rotors-content__boxs:before,
.rotor-row:before,
.rotor-row__prop:before,
.grid-media-event:before,
.block-presenter__content:before,
.block-related__grid:before,
.block-event__content:before,
.block-tabs-support__content:before,
.content-sidebar__list:before,
.block-sort-content__contents:before,
.block-exchange:before,
.block-exchange__rate:before,
.timeline-block__year:before,
.grid-two-cols__content:before,
.block-counter__numbers:before,
.block-panels-menu__body ul:before,
.main-menu:before,
.navigation-dropdown:before,
.nav-footer__menu:before,
.header:before,
.header__navigation:before,
.icon-list:before,
.avc-wrap:after,
.block-banner__image:after,
.block-product-icon__list:after,
.block-product-icon--type-1:after,
.block-social:after,
.block-testimonial__group:after,
.block-cartriges:after,
.block-specifications:after,
.block-distributor:after,
.block-distributor__group:after,
.block-location__grid:after,
.block-positions form:after,
.block-two-images:after,
.box-grid:after,
.pager__items:after,
.block-subscribe__form__inner:after,
.block-product__grid-2col:after,
.block-product__grid-3col:after,
.block-video__wrap:after,
.rotors-content__boxs:after,
.rotor-row:after,
.rotor-row__prop:after,
.grid-media-event:after,
.block-presenter__content:after,
.block-related__grid:after,
.block-event__content:after,
.block-tabs-support__content:after,
.content-sidebar__list:after,
.block-sort-content__contents:after,
.block-exchange:after,
.block-exchange__rate:after,
.timeline-block__year:after,
.grid-two-cols__content:after,
.block-counter__numbers:after,
.block-panels-menu__body ul:after,
.main-menu:after,
.navigation-dropdown:after,
.nav-footer__menu:after,
.header:after,
.header__navigation:after,
.icon-list:after {
  content: '';
  display: table; }

.clearfix:after,
.avc-wrap:after,
.block-banner__image:after,
.block-product-icon__list:after,
.block-product-icon--type-1:after,
.block-social:after,
.block-testimonial__group:after,
.block-cartriges:after,
.block-specifications:after,
.block-distributor:after,
.block-distributor__group:after,
.block-location__grid:after,
.block-positions form:after,
.block-two-images:after,
.box-grid:after,
.pager__items:after,
.block-subscribe__form__inner:after,
.block-product__grid-2col:after,
.block-product__grid-3col:after,
.block-video__wrap:after,
.rotors-content__boxs:after,
.rotor-row:after,
.rotor-row__prop:after,
.grid-media-event:after,
.block-presenter__content:after,
.block-related__grid:after,
.block-event__content:after,
.block-tabs-support__content:after,
.content-sidebar__list:after,
.block-sort-content__contents:after,
.block-exchange:after,
.block-exchange__rate:after,
.timeline-block__year:after,
.grid-two-cols__content:after,
.block-counter__numbers:after,
.block-panels-menu__body ul:after,
.main-menu:after,
.navigation-dropdown:after,
.nav-footer__menu:after,
.header:after,
.header__navigation:after,
.icon-list:after {
  clear: both; }

[class^='icon-']:before,
[class*=' icon-']:before,
.list--arrowed-links li a:before,
.right-arrow-link:before, .content-sidebar__list a:before,
.list--default-menu a:before,
.list--caret-right a:before,
.right-caret-link:before, .form-type-select, .block-event .tab-filter, .chosen-single b, .slick-arrow:before, .block-time-location__meta .date:before, .block-time-location__meta time:before, .block-time-location__location:before, .block-time-location__booth:before, .block-event__content__meta .time:before, .block-event__content__location:before, .block-location__local:before, .block-job__link:before, .box-social__date:before, .block-accordion__header:before, .expanded-menu-icon, .main-menu > li ul > li.expanded > a:after, .main-menu > li ul > li.expanded > a:before, .main-menu--right > li.expanded > a:before, .navigation-dropdown > li > a:after, .search-box .form-actions:before {
  font-family: 'abaxis';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-in:before {
  content: "\e92c"; }

.icon-check:before {
  content: "\e92b"; }

.icon-angle-left:before {
  content: '\e91f'; }

.icon-angle-double-left:before {
  content: '\e91d'; }

.icon-angle-double-right:before {
  content: '\e91e'; }

.icon-mail:before {
  content: '\e91c'; }

.icon-fax:before {
  content: '\e91b'; }

.icon-location:before, .block-location__local:before, .block-job__link:before, .block-time-location__location:before, .block-event__content__location:before {
  content: '\e91a'; }

.icon-arrow-drop-down:before, .navigation-dropdown > li > a:after, .header-dropdown .chosen-single b:before {
  content: '\e901'; }

.icon-search:before, .search-box .form-actions:before {
  content: '\e900'; }

.icon-instagram:before {
  content: '\e907'; }

.icon-warning:before {
  content: '\e906'; }

.icon-arrow-left:before, .slick-prev:before {
  content: '\e905'; }

.icon-arrow-right:before, .slick-next:before {
  content: '\e904'; }

.icon-youtube:before {
  content: '\e903'; }

.icon-linkedin:before {
  content: '\e902'; }

.icon-caret-right:before, .content-sidebar__list a:hover:before, .content-sidebar__list a.active:before,
.list--default-menu a:hover:before,
.list--default-menu a.active:before,
.list--caret-right a:before {
  content: '\e908'; }

.icon-twitter:before, .box-social--twitter .box-social__date:before {
  content: '\f099'; }

.icon-facebook:before, .box-social--facebook .box-social__date:before {
  content: '\f09a'; }

.icon-facebook-f:before {
  content: '\f09a'; }

.icon-google-plus:before {
  content: '\f0d5'; }

.icon-angle-right:before,
.list--arrowed-links li a:before,
.right-arrow-link:before, .main-menu > li ul > li.expanded > a:after, .main-menu--right > li.expanded > a:before {
  content: '\f105'; }

.icon-angle-down:before, .form-type-select:before, .block-event .tab-filter:before, .block-accordion__header:before, .expanded-menu-icon:before, .main-menu > li ul > li.expanded > a:before {
  content: '\f107'; }

.icon-paw:before {
  content: '\e909'; }

.icon-cow:before {
  content: '\e90a'; }

.icon-horseshoe:before {
  content: '\e90b'; }

.icon-rabbit:before {
  content: '\e90c'; }

.icon-microscope:before {
  content: '\e90d'; }

.icon-salamander:before {
  content: '\e90e'; }

.icon-gorilla:before {
  content: '\e90f'; }

.icon-cloud:before {
  content: '\e910'; }

.icon-heart:before {
  content: '\e911'; }

.icon-cross:before {
  content: '\e912'; }

.icon-hospital:before {
  content: '\e913'; }

.icon-aid-ribbon:before {
  content: '\e914'; }

.icon-house-cross:before {
  content: '\e915'; }

.icon-bear-cross:before {
  content: '\e916'; }

.icon-three-dots:before {
  content: '\e917'; }

.icon-building:before {
  content: '\e918'; }

.icon-link-external:before {
  content: '\e919'; }

.icon-lab:before, .block-time-location__booth:before {
  content: '\e920'; }

.icon-clock:before, .block-time-location__meta time:before, .block-event__content__meta .time:before {
  content: '\e921'; }

.icon-calendar:before, .block-time-location__meta .date:before {
  content: '\e922'; }

.icon-angle-up:before, .block-accordion__item.is-active .block-accordion__header:before {
  content: '\e923'; }

.icon-grid:before {
  content: '\e924'; }

.icon-list:before {
  content: '\e925'; }

.icon-triangle-up:before {
  content: '\e926'; }

.icon-bars:before {
  content: '\e927'; }

.icon-world:before {
  content: '\e928'; }

.icon-quotes-left:before {
  content: '\e929'; }

.icon-quotes-right:before {
  content: '\e92a'; }

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  border: 0;
  box-sizing: border-box;
  font-family: inherit;
  font-size: 100%;
  margin: 0;
  outline: 0 none;
  padding: 0;
  vertical-align: baseline; }

audio,
canvas,
video {
  display: inline-block; }

ol,
ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption,
th,
td {
  font-weight: normal;
  text-align: left;
  vertical-align: middle; }

q,
blockquote {
  quotes: none; }

q:before,
q:after,
blockquote:before,
blockquote:after {
  content: none; }

a img {
  border: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
main {
  display: block; }

img {
  font-size: 0;
  height: auto; }

iframe,
img,
object,
embed {
  max-width: 100%; }

input {
  box-sizing: border-box; }

@font-face {
  font-family: 'abaxis';
  src: url("../fonts/abaxis.woff") format("woff"), url("../fonts/abaxis.woff2") format("woff2"), url("../fonts/abaxis.eot?") format("eot"), url("../fonts/abaxis.ttf") format("truetype"), url('../fonts/abaxis.svg#str-replace(abaxis, " ", "_")') format("svg"); }

@font-face {
  font-family: 'gotham-bold';
  src: url("../fonts/gotham-bold.woff") format("woff"), url("../fonts/gotham-bold.eot?") format("eot"), url("../fonts/gotham-bold.ttf") format("truetype"), url('../fonts/gotham-bold.svg#str-replace(gotham-bold, " ", "_")') format("svg"); }

@font-face {
  font-family: 'gotham-medium';
  src: url("../fonts/gotham-medium.woff") format("woff"), url("../fonts/gotham-medium.eot?") format("eot"), url("../fonts/gotham-medium.ttf") format("truetype"), url('../fonts/gotham-medium.svg#str-replace(gotham-medium, " ", "_")') format("svg"); }

@font-face {
  font-family: 'gotham-light';
  src: url("../fonts/gotham-light.woff") format("woff"), url("../fonts/gotham-light.eot?") format("eot"), url("../fonts/gotham-light.ttf") format("truetype"), url('../fonts/gotham-light.svg#str-replace(gotham-light, " ", "_")') format("svg"); }

@font-face {
  font-family: 'gotham-thinitalic';
  src: url("../fonts/gotham-thinitalic.woff") format("woff"), url("../fonts/gotham-thinitalic.eot?") format("eot"), url("../fonts/gotham-thinitalic.ttf") format("truetype"), url('../fonts/gotham-thinitalic.svg#str-replace(gotham-thinitalic, " ", "_")') format("svg"); }

@font-face {
  font-family: 'gotham-book';
  src: url("../fonts/gotham-book.woff") format("woff"), url("../fonts/gotham-book.eot?") format("eot"), url("../fonts/gotham-book.ttf") format("truetype"), url('../fonts/gotham-book.svg#str-replace(gotham-book, " ", "_")') format("svg"); }

.container {
  max-width: 100%;
  margin-left: 0.875rem;
  margin-right: 0.875rem; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 48em) {
    .container {
      max-width: 100%;
      margin-left: 1.25rem;
      margin-right: 1.25rem; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 60em) {
    .container {
      max-width: 57.5rem;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 73.75em) {
    .container {
      max-width: 73.75rem;
      margin-left: auto;
      margin-right: auto; }
      .container:after {
        content: " ";
        display: block;
        clear: both; } }

.container-narrow {
  max-width: 100%;
  margin-left: 0.875rem;
  margin-right: 0.875rem; }
  .container-narrow:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 48em) {
    .container-narrow {
      max-width: 100%;
      margin-left: 11.98466%;
      margin-right: 11.98466%; }
      .container-narrow:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 60em) {
    .container-narrow {
      max-width: 44.375rem;
      margin-left: auto;
      margin-right: auto; }
      .container-narrow:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 73.75em) {
    .container-narrow {
      max-width: 36.25rem;
      margin-left: auto;
      margin-right: auto; }
      .container-narrow:after {
        content: " ";
        display: block;
        clear: both; } }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-weight: normal;
  margin-bottom: 0.9375rem; }

h1 {
  font-size: 1.625rem; }
  @media (min-width: 48em) {
    h1 {
      font-size: 2.5rem; } }
  @media (min-width: 73.75em) {
    h1 {
      font-size: 2rem; } }

h2 {
  font-size: 1.5rem; }

h3 {
  font-size: 0.75rem; }
  @media (min-width: 48em) {
    h3 {
      font-size: 1.125rem; } }

h4 {
  font-size: 1rem; }

h5 {
  font-size: 0.875rem; }

h6 {
  font-size: 0.75rem; }

a {
  color: #0082c0;
  text-decoration: none; }
  a:hover {
    color: #0093da; }
  a img {
    display: block; }


.link-red {
  color: #d6083b !important; }
  
  .link-red:hover,
  .link-red:focus {
    color: #ef0942 !important; }


.link-blue {
  color: #0082c0 !important; }
  
  .link-blue:hover,
  .link-blue:focus {
    color: #0093da !important; }


.list--arrowed-links li a,
.right-arrow-link {
  color: #626567;
  font-size: 0.875rem;
  text-decoration: none; }
  
  .list--arrowed-links li a:before,
  .right-arrow-link:before {
    margin-right: 0.3125rem; }

.content-sidebar__list a,
.list--default-menu a,
.list--caret-right a,
.right-caret-link {
  position: relative; }
  .content-sidebar__list a:before,
  .list--default-menu a:before,
  .list--caret-right a:before,
  .right-caret-link:before {
    font-size: 0.875rem;
    left: -1.0625rem;
    line-height: 1.3;
    padding-top: 0.125rem;
    position: absolute; }
  .content-sidebar__list a:hover,
  .list--default-menu a:hover,
  .list--caret-right a:hover, .content-sidebar__list a.active,
  .list--default-menu a.active,
  .list--caret-right a.active,
  .right-caret-link:hover,
  .right-caret-link.active {
    color: #585d62; }

p {
  margin-bottom: 0.9375rem; }

ul {
  list-style-type: disc; }

ol {
  list-style-type: decimal; }

ul,
ol {
  list-style-position: outside;
  padding-left: 1.125rem; }
  ul li,
  ol li {
    margin-bottom: 0.625rem; }

.content-sidebar__list,
.list--default-menu {
  list-style: none;
  margin-left: 1.0625rem;
  padding-top: 0.8125rem; }
  .content-sidebar__list li,
  .list--default-menu li {
    margin-bottom: 1.75rem; }
  .content-sidebar__list a:hover, .content-sidebar__list a.active,
  .list--default-menu a:hover,
  .list--default-menu a.active {
    color: #585d62; }


.list--caret-right {
  list-style: none; }
  
  .list--caret-right li {
    margin-bottom: 1.0625rem; }
  
  .list--caret-right a {
    color: #fff;
    font-size: 0.9375rem;
    padding-left: 0.75rem;
    line-height: 1.4375rem; }
    
    .list--caret-right a:hover {
      color: #00aeef; }
    
    .list--caret-right a:before {
      font-size: 0.75rem;
      left: 0;
      bottom: 0.125rem; }


.list--arrowed-links {
  list-style-type: none;
  margin-bottom: 1.25rem; }
  
  .list--arrowed-links li {
    margin-bottom: 0.625rem; }

.block-job__body ul,
.list--dotted {
  list-style-type: none;
  margin: 1.0625rem 0rem 1.1875rem; }
  @media (min-width: 48em) {
    .block-job__body ul,
    .list--dotted {
      margin: 1.5625rem 0rem 3.25rem; } }
  .block-job__body ul li,
  .list--dotted li {
    line-height: 1.125rem;
    margin-bottom: 1.1875rem;
    padding-left: 0.9375rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-job__body ul li,
      .list--dotted li {
        line-height: 1.5625rem;
        padding-left: 1.9375rem;
        margin-bottom: 1.5625rem; } }
    .block-job__body ul li:before,
    .list--dotted li:before {
      background: #585d62;
      border-radius: 100%;
      content: '';
      height: 0.1875rem;
      left: 0rem;
      overflow: hidden;
      position: absolute;
      top: 0.375rem;
      width: 0.1875rem; }
      @media (min-width: 48em) {
        .block-job__body ul li:before,
        .list--dotted li:before {
          height: 0.25rem;
          width: 0.25rem;
          top: 0.625rem; } }


.list--flat {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  list-style: none;
  margin-bottom: 1.25rem;
  font-size: 0.9375rem; }
  
  .list--flat li {
    margin-bottom: 1.1875rem; }


.list--check {
  list-style: none;
  margin-bottom: 1.6875rem; }
  @media (min-width: 48em) {
    
    .list--check {
      margin-bottom: 2.3125rem; } }
  
  .list--check li {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    background: url("../images/icon-check-2.svg") 0 0 no-repeat;
    background-size: 1.125rem 1.125rem;
    font-size: 0.9375rem;
    line-height: 1.1875rem;
    margin-bottom: 0.6875rem;
    padding-left: 1.5rem; }
    @media (min-width: 48em) {
      
      .list--check li {
        padding-left: 1.875rem; } }


.list--lower-alpha {
  list-style-type: lower-alpha; }

sup {
  font-size: .6em;
  position: relative;
  top: -0.0625rem;
  vertical-align: top; }

sub {
  bottom: -0.25rem;
  font-size: .6em;
  position: relative;
  vertical-align: bottom; }


.section-title {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 1.5625rem;
  line-height: 2.25rem;
  margin-bottom: 0.3125rem;
  text-align: center; }
  @media (min-width: 48em) {
    
    .section-title {
      font-size: 3.125rem;
      line-height: 2.9375rem;
      margin-bottom: 0.625rem; } }


.section-description {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 0.9375rem;
  line-height: 1.125rem;
  margin-bottom: 1.625rem;
  text-align: center; }
  @media (min-width: 48em) {
    
    .section-description {
      font-size: 1.25rem;
      line-height: 1.875rem; } }


.title-border-bottom {
  border-bottom: 0.0625rem solid #ddd;
  font-size: 1.5rem;
  margin-bottom: 1.5rem;
  padding-bottom: 0.0625rem; }
  @media (min-width: 48em) {
    
    .title-border-bottom {
      font-size: 2.5rem;
      margin-bottom: 3.125rem;
      padding-bottom: 0.1875rem; } }


.block-title {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 1.5rem;
  margin-bottom: 1rem; }
  @media (min-width: 48em) {
    
    .block-title {
      font-size: 2.5rem;
      margin-bottom: 2.0625rem; } }
  
  .block-title--border-bottom {
    margin-bottom: 1.4375rem; }
    @media (min-width: 48em) {
      
      .block-title--border-bottom {
        padding-bottom: 0.8125rem;
        border-bottom: 0.0625rem solid #e4e5e6;
        margin-bottom: 3.6875rem; } }

.content-sidebar .node-title {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 1.875rem;
  margin-bottom: 1.25rem;
  line-height: 1.875rem; }
  @media (min-width: 48em) {
    .content-sidebar .node-title {
      line-height: 2.5rem; } }

.more-info {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  color: #0082c0;
  display: inline-block; }
  @media (min-width: 73.75em) {
    .more-info {
      padding-top: 1.125rem; } }
  .more-info:hover {
    color: #0093da; }

.sidebar-title {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  font-size: 0.9375rem;
  margin-bottom: 1.8125rem; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .sidebar-title {
      margin-bottom: 1.5625rem; } }

.link-download {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  margin-bottom: 0.9375rem; }
  @media (min-width: 48em) {
    .link-download {
      margin-bottom: 0.625rem; } }
  .link-download .inner {
    border: 1px solid transparent;
    display: -ms-flexbox;
    display: flex;
    font-size: 0.75rem;
    margin-bottom: 0.9375rem;
    min-height: 3.75rem; }
    @media (min-width: 48em) {
      .link-download .inner {
        font-size: 1.125rem;
        min-height: 5.625rem; } }
    .link-download .inner:hover {
      border: 1px solid #56d1ff; }
  .link-download .files, .link-download .block-vetcom__left a .files-pdf, .block-vetcom__left a .link-download .files-pdf {
    background-color: #fff;
    width: 4.375rem; }
    @media (min-width: 48em) {
      .link-download .files, .link-download .block-vetcom__left a .files-pdf, .block-vetcom__left a .link-download .files-pdf {
        width: 6.375rem; } }
  .link-download .text {
    -ms-flex-align: center;
        align-items: center;
    background-color: #fbfcfc;
    display: -ms-flexbox;
    display: flex;
    padding-left: 2rem;
    width: 100%; }

input[type='submit'], button,
.btn {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  background-color: transparent;
  border: 1px solid transparent;
  border-color: #00aeef;
  color: #474b4f;
  display: inline-block;
  font-size: 0.9375rem;
  margin-bottom: 10px;
  padding: 0.625rem 1.5625rem;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  transition: .3s; }
  @media (min-width: 48em) {
    input[type='submit'], button,
    .btn {
      font-size: 0.8125rem; } }
  input[type='submit']:hover, button:hover,
  .btn:hover {
    color: #3b3e42;
    cursor: pointer;
    transition: .3s; }
  
  .btn--small {
    min-width: 9.25rem;
    padding: 0.6875rem 0.9375rem 0.5625rem; }
  
  .btn--medium {
    max-width: 18.25rem;
    padding: 0.625rem 0.875rem 0.625rem;
    width: 100%; }
    @media (min-width: 48em) {
      
      .btn--medium {
        max-width: inherit;
        min-width: 11.25rem;
        padding: 0.6875rem 1.0625rem 0.5625rem;
        width: auto; } }
  
  .btn--large {
    max-width: 18.25rem;
    padding: 0.75rem 0.5rem 0.5rem;
    width: 100%; }
    @media (min-width: 48em) {
      
      .btn--large {
        max-width: inherit;
        min-width: 11.25rem;
        padding: 1rem 1.25rem 0.875rem;
        width: auto; } }
  
  .btn--bg-red {
    background-color: #d6083b;
    border: 0;
    color: #fff; }
    
    .btn--bg-red:hover,
    .btn--bg-red:focus {
      background-color: #ef0942;
      color: #fff; }
  
  .btn--bg-blue {
    background-color: #0082c0;
    border: 0;
    color: #fff; }
    
    .btn--bg-blue:hover,
    .btn--bg-blue:focus {
      background-color: #0093da;
      color: #fff; }
  
  .btn--bg-blue-25 {
    background-color: #25c0dd;
    border: 0;
    color: #fff; }
    
    .btn--bg-blue-25:hover,
    .btn--bg-blue-25:focus {
      background-color: #3bc6e0;
      color: #fff; }
  
  .btn--bg-green {
    background-color: #77b800;
    border: 0;
    color: #fff; }
    
    .btn--bg-green:hover,
    .btn--bg-green:focus {
      background-color: #87d200;
      color: #fff; }
  
  .btn--bg-light-blue {
    background-color: #00aeef;
    border: 0;
    color: #fff; }
    
    .btn--bg-light-blue:hover,
    .btn--bg-light-blue:focus {
      background-color: #0093da;
      color: #fff; }
  
  .btn--border-blue {
    color: #474b4f;
    border-color: #00aeef; }
    
    .btn--border-blue:hover {
      color: #0082c0; }
  
  .btn--border-red {
    color: #474b4f;
    border-color: #d6083b; }
    
    .btn--border-red:hover {
      color: #d6083b; }

input {
  box-sizing: border-box;
  max-width: 100%; }
  input[type='submit'] {
    line-height: inherit;
    border-radius: 0; }

input:not([type="submit"]),
textarea {
  border: 1px solid #ddd;
  font-size: 0.9375rem;
  margin-bottom: 0.3125rem;
  outline: none;
  padding: 0.8125rem 0.9375rem 0.625rem; }
  input:not([type="submit"]).error,
  textarea.error {
    border: 1px solid #f00; }

.form-text,
textarea {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  border-radius: 0; }

input[disabled] {
  opacity: .7;
  cursor: not-allowed; }

input[type="text"],
textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-shadow: none; }

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  box-shadow: none;
  cursor: pointer; }

button:active, button:focus, button:hover {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  color: inherit;
  outline: 0;
  color: #0082c0; }

form label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.3125rem; }

form .label-hidden {
  left: -999em;
  position: absolute;
  visibility: hidden; }

form .webform-component-textarea .grippie {
  display: none; }

.grippie {
  display: none; }

fieldset .fieldset-legend {
  display: block;
  font-weight: bold;
  margin-bottom: 0.3125rem; }

fieldset > div {
  margin-bottom: 0.625rem; }

fieldset legend {
  background: #f3f3f3;
  border-radius: 0.3125rem;
  border: 1px solid #ddd;
  padding: 0.4375rem 0.9375rem; }
  fieldset legend .fieldset-legend {
    margin-bottom: -0.125rem; }
    fieldset legend .fieldset-legend .fieldset-title:before {
      right: 0; }

@media screen and (max-width: 47.9375em) {
  .form-type-select, .block-event .tab-filter {
    border: 1px solid #e4e5e6;
    position: relative; }
    .form-type-select:before, .block-event .tab-filter:before {
      color: #0082c0;
      font-size: 1.375rem;
      font-weight: bold;
      margin-top: -0.6875rem;
      pointer-events: none;
      position: absolute;
      right: 0.625rem;
      top: 50%;
      z-index: 3; } }

@media (min-width: 48em) {
  .form-type-select:before, .block-event .tab-filter:before {
    display: none; } }

@media screen and (max-width: 47.9375em) {
  .form-type-select select, .block-event .tab-filter select {
    font-family: 'gotham-book', Helvetica, Arial, sans-serif;
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background: none;
    border: 0;
    color: #585d62;
    font-size: 0.9375rem;
    outline: none;
    padding: 1rem 2.1875rem 0.8125rem 0.3125rem;
    text-transform: capitalize;
    width: 100%; } }

[class^='icon-']:before,
[class*=' icon-']:before,
.list--arrowed-links li a:before,
.right-arrow-link:before, .content-sidebar__list a:before,
.list--default-menu a:before,
.list--caret-right a:before,
.right-caret-link:before, .form-type-select, .block-event .tab-filter, .chosen-single b, .slick-arrow:before, .block-time-location__meta .date:before, .block-time-location__meta time:before, .block-time-location__location:before, .block-time-location__booth:before, .block-event__content__meta .time:before, .block-event__content__location:before, .block-location__local:before, .block-job__link:before, .box-social__date:before, .block-accordion__header:before, .expanded-menu-icon, .main-menu > li ul > li.expanded > a:after, .main-menu > li ul > li.expanded > a:before, .main-menu--right > li.expanded > a:before, .navigation-dropdown > li > a:after, .search-box .form-actions:before {
  font-family: 'abaxis';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-in:before {
  content: "\e92c"; }

.icon-check:before {
  content: "\e92b"; }

.icon-angle-left:before {
  content: '\e91f'; }

.icon-angle-double-left:before {
  content: '\e91d'; }

.icon-angle-double-right:before {
  content: '\e91e'; }

.icon-mail:before {
  content: '\e91c'; }

.icon-fax:before {
  content: '\e91b'; }

.icon-location:before, .block-location__local:before, .block-job__link:before, .block-time-location__location:before, .block-event__content__location:before {
  content: '\e91a'; }

.icon-arrow-drop-down:before, .navigation-dropdown > li > a:after, .header-dropdown .chosen-single b:before {
  content: '\e901'; }

.icon-search:before, .search-box .form-actions:before {
  content: '\e900'; }

.icon-instagram:before {
  content: '\e907'; }

.icon-warning:before {
  content: '\e906'; }

.icon-arrow-left:before, .slick-prev:before {
  content: '\e905'; }

.icon-arrow-right:before, .slick-next:before {
  content: '\e904'; }

.icon-youtube:before {
  content: '\e903'; }

.icon-linkedin:before {
  content: '\e902'; }

.icon-caret-right:before, .content-sidebar__list a:hover:before, .content-sidebar__list a.active:before,
.list--default-menu a:hover:before,
.list--default-menu a.active:before,
.list--caret-right a:before {
  content: '\e908'; }

.icon-twitter:before, .box-social--twitter .box-social__date:before {
  content: '\f099'; }

.icon-facebook:before, .box-social--facebook .box-social__date:before {
  content: '\f09a'; }

.icon-facebook-f:before {
  content: '\f09a'; }

.icon-google-plus:before {
  content: '\f0d5'; }

.icon-angle-right:before,
.list--arrowed-links li a:before,
.right-arrow-link:before, .main-menu > li ul > li.expanded > a:after, .main-menu--right > li.expanded > a:before {
  content: '\f105'; }

.icon-angle-down:before, .form-type-select:before, .block-event .tab-filter:before, .block-accordion__header:before, .expanded-menu-icon:before, .main-menu > li ul > li.expanded > a:before {
  content: '\f107'; }

.icon-paw:before {
  content: '\e909'; }

.icon-cow:before {
  content: '\e90a'; }

.icon-horseshoe:before {
  content: '\e90b'; }

.icon-rabbit:before {
  content: '\e90c'; }

.icon-microscope:before {
  content: '\e90d'; }

.icon-salamander:before {
  content: '\e90e'; }

.icon-gorilla:before {
  content: '\e90f'; }

.icon-cloud:before {
  content: '\e910'; }

.icon-heart:before {
  content: '\e911'; }

.icon-cross:before {
  content: '\e912'; }

.icon-hospital:before {
  content: '\e913'; }

.icon-aid-ribbon:before {
  content: '\e914'; }

.icon-house-cross:before {
  content: '\e915'; }

.icon-bear-cross:before {
  content: '\e916'; }

.icon-three-dots:before {
  content: '\e917'; }

.icon-building:before {
  content: '\e918'; }

.icon-link-external:before {
  content: '\e919'; }

.icon-lab:before, .block-time-location__booth:before {
  content: '\e920'; }

.icon-clock:before, .block-time-location__meta time:before, .block-event__content__meta .time:before {
  content: '\e921'; }

.icon-calendar:before, .block-time-location__meta .date:before {
  content: '\e922'; }

.icon-angle-up:before, .block-accordion__item.is-active .block-accordion__header:before {
  content: '\e923'; }

.icon-grid:before {
  content: '\e924'; }

.icon-list:before {
  content: '\e925'; }

.icon-triangle-up:before {
  content: '\e926'; }

.icon-bars:before {
  content: '\e927'; }

.icon-world:before {
  content: '\e928'; }

.icon-quotes-left:before {
  content: '\e929'; }

.icon-quotes-right:before {
  content: '\e92a'; }

.chosen-container {
  display: inline-block;
  font-size: 0.9375rem;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  vertical-align: middle;
  width: 100% !important; }
  .touch .chosen-container {
    display: none !important; }
  .chosen-container .chosen-drop {
    background: #fff;
    border: 0.0625rem solid #eaeff2;
    border-top: 0;
    box-sizing: border-box;
    left: -9999em;
    position: absolute;
    top: 100%;
    width: 100%;
    z-index: 1010; }
  .chosen-container.chosen-with-drop .chosen-drop {
    right: 0;
    left: inherit; }
  .chosen-container a {
    cursor: pointer; }

.chosen-results {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  margin: 0rem 0.125rem 0.125rem 0rem;
  max-height: 15rem;
  overflow-x: hidden;
  overflow-y: auto;
  padding: 0rem 0rem 0rem 0.125rem;
  position: relative;
  -webkit-overflow-scrolling: touch; }
  .chosen-results li {
    padding: 0.3125rem 0.375rem;
    line-height: 0.9375rem;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    display: none;
    list-style: none;
    margin: 0; }
    .touch .chosen-results li {
      padding: 0.75rem 0.375rem; }
    .chosen-results li.active-result {
      cursor: pointer;
      display: list-item; }
    .chosen-results li.disabled-result {
      color: #676767;
      cursor: default;
      display: list-item; }
    .chosen-results li.no-results {
      background: #f8f8f8;
      display: list-item; }
    .chosen-results li.group-result {
      cursor: default;
      display: list-item;
      font-weight: bold; }
    .chosen-results li.group-option {
      padding-left: 0.9375rem; }
    .chosen-results li em {
      font-style: normal;
      text-decoration: underline; }
    .chosen-results li:hover {
      color: #808080; }

.chosen-single {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  background-color: #fff;
  color: #585d62;
  display: block;
  padding: 0.9375rem 2.125rem 0.75rem 1rem;
  position: relative;
  text-decoration: none;
  white-space: nowrap;
  border: 0.0625rem solid #eaeff2;
  overflow: hidden; }
  .chosen-single:hover {
    color: #585d62; }
  .chosen-single div {
    width: 1.375rem;
    display: block;
    height: 100%;
    position: absolute;
    right: 0;
    top: 0; }
  .chosen-single b {
    display: block;
    height: 100%;
    width: 100%;
    font-size: 0.75rem;
    padding-top: 1rem;
    color: #0082c0; }
    @media (min-width: 48em) {
      .chosen-single b:before {
        content: '\f107'; } }
  .chosen-single span {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap; }

.chosen-default {
  color: #676767; }

.chosen-single-with-deselect span {
  margin-right: 2.375rem; }

.chosen-search {
  padding: 0.1875rem 0.25rem;
  margin: 0;
  position: relative;
  white-space: nowrap;
  z-index: 1010; }
  .chosen-search input {
    width: 100%; }

.chosen-drop {
  margin-top: -0.0625rem;
  background-clip: padding-box;
  min-width: 9.375rem;
  right: 0;
  left: inherit; }

.chosen-container-single-nosearch .chosen-search {
  left: -9999em;
  position: absolute; }

.chosen-container-active.chosen-with-drop .chosen-single div {
  background: transparent;
  border-left: 0; }

.chosen-container-active.chosen-with-drop .chosen-single b:after {
  content: ''; }

.chosen-container-active .chosen-choices {
  border: 0.0625rem solid #808080;
  box-shadow: 0 0 0.3125rem rgba(0, 0, 0, 0.3); }
  .chosen-container-active .chosen-choices .search-field input {
    color: #000 !important; }

.chosen-disabled {
  opacity: .5;
  cursor: default; }
  .chosen-disabled .chosen-single,
  .chosen-disabled .chosen-choices .search-choice .search-choice-close {
    cursor: default; }

.chosen--no-boder .chosen-single {
  border: 0;
  padding: 1rem 2.125rem 0.8125rem 1rem; }

.chosen--no-boder .chosen-container .chosen-drop {
  border: 0; }

@media screen and (max-width: 47.9375em) {
  .chosen--no-boder .form-type-select, .chosen--no-boder .block-event .tab-filter, .block-event .chosen--no-boder .tab-filter {
    border: 0;
    background-color: #fff; } }

@media screen and (max-width: 47.9375em) {
  .chosen--no-boder select {
    padding: 1.0625rem 2.1875rem 0.875rem 0.3125rem; } }

.chosen--has-bg .chosen-single {
  background-color: #f8f8f8;
  transition: .5s; }

.chosen--has-bg .chosen-drop {
  background-color: #f8f8f8; }

@media screen and (max-width: 47.9375em) {
  .chosen--has-bg .form-type-select, .chosen--has-bg .block-event .tab-filter, .block-event .chosen--has-bg .tab-filter {
    background-color: #f8f8f8; } }

@media screen and (max-width: 47.9375em) {
  .chosen--has-bg-blue {
    border: 1px solid #e4e5e6;
    position: relative; } }

@media screen and (max-width: 47.9375em) {
  .chosen--has-bg-blue select {
    padding: 1.0625rem 2.1875rem 0.875rem 0.625rem; } }

.chosen--has-bg-blue .chosen-single {
  background-color: #f2f7fa;
  border: 0;
  padding: 1rem 2.125rem 0.8125rem 1rem;
  transition: .5s; }

.chosen--has-bg-blue .chosen-container .chosen-drop {
  border: 0;
  background-color: #f2f7fa; }

@media screen and (max-width: 47.9375em) {
  .chosen--has-bg-blue .form-type-select, .chosen--has-bg-blue .block-event .tab-filter, .block-event .chosen--has-bg-blue .tab-filter {
    border: 0;
    background-color: #f2f7fa; } }

.slick-slider {
  box-sizing: border-box;
  display: block;
  position: relative; }

.slick-list {
  display: block;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: relative; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  transform: translate3d(0, 0, 0); }

.slick-track {
  display: block;
  left: 0;
  position: relative;
  top: 0; }
  .slick-track:before, .slick-track:after {
    content: '';
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow {
  background: #fff;
  border-radius: 100%;
  border: 0;
  color: #8e97a5;
  display: block;
  height: 4.5rem;
  margin: -2.25rem 0rem 0rem;
  overflow: hidden;
  padding: 0;
  position: absolute;
  text-indent: -999em;
  top: 50%;
  width: 4.5rem;
  z-index: 5;
  font-size: 0;
  min-width: inherit; }
  .slick-arrow:before {
    display: block;
    font-size: 1.25rem;
    line-height: 4.5rem;
    text-align: center;
    text-indent: 0;
    width: 100%; }
  .slick-arrow:active, .slick-arrow:focus, .slick-arrow:hover {
    color: #3c3d3b; }
  .slick-arrow.slick-hidden {
    display: none; }

.slick-prev {
  left: 1.0625rem; }

.slick-next {
  right: 1.0625rem; }

.slick-dots {
  margin-top: 0.8125rem;
  text-align: center;
  padding: 0; }
  @media (min-width: 48em) {
    .slick-dots {
      margin-top: 2.25rem; } }
  @media (min-width: 60em) {
    .slick-dots {
      margin-top: 3.0625rem; } }
  @media (min-width: 73.75em) {
    .slick-dots {
      margin-top: 2.625rem; } }
  .slick-dots button {
    background: #eaeff2;
    border-radius: 100%;
    border: 0;
    cursor: pointer;
    height: 0.5625rem;
    overflow: hidden;
    padding: 0;
    text-indent: -999em;
    width: 0.5625rem;
    min-width: inherit; }
    .slick-dots button:hover {
      background: #00aeef; }
    @media (min-width: 48em) {
      .slick-dots button {
        height: 1.125rem;
        width: 1.125rem; } }
  .slick-dots > li {
    display: inline-block;
    line-height: 0;
    margin: 0;
    padding: 0rem 0.75rem 0.3125rem; }
    @media (min-width: 48em) {
      .slick-dots > li {
        padding: 0rem 1.5rem 0.5625rem; } }
    @media (min-width: 73.75em) {
      .slick-dots > li {
        padding: 0rem 0.5625rem 0.5625rem; } }
    .slick-dots > li.slick-active button {
      background: #00aeef; }

.slick-dots-white .slick-dots button {
  background: rgba(255, 255, 255, 0.2); }
  .slick-dots-white .slick-dots button:hover {
    background: #fff; }

.slick-dots-white .slick-dots > li.slick-active button {
  background: #fff; }

.slick-dots-colors .slick-dots {
  margin-top: 2.8125rem; }
  @media (min-width: 73.75em) {
    .slick-dots-colors .slick-dots {
      margin-top: 3rem; } }
  @media screen and (max-width: 47.9375em) {
    .slick-dots-colors .slick-dots {
      margin-top: 2.25rem;
      padding: 0rem 0.4375rem; } }
  .slick-dots-colors .slick-dots button {
    height: 1.8125rem;
    overflow: inherit;
    position: relative;
    width: 1.8125rem; }
    @media (min-width: 48em) {
      .slick-dots-colors .slick-dots button {
        height: 1.125rem;
        width: 1.125rem; } }
    .slick-dots-colors .slick-dots button:before {
      border-radius: 100%;
      border-style: solid;
      border-width: 0.0625rem;
      bottom: -0.5rem;
      content: '';
      display: none;
      height: 2.75rem;
      left: -0.5rem;
      position: absolute;
      width: 2.75rem; }
      @media (min-width: 48em) {
        .slick-dots-colors .slick-dots button:before {
          bottom: -0.4375rem;
          height: 1.875rem;
          left: -0.4375rem;
          width: 1.875rem; } }
    .slick-dots-colors .slick-dots button:hover:before {
      display: block; }
  .slick-dots-colors .slick-dots > li {
    margin-bottom: 1.9375rem;
    padding: 0.5625rem 1rem; }
    @media (min-width: 48em) {
      .slick-dots-colors .slick-dots > li {
        margin-bottom: 0;
        padding: 0.5625rem 0.6875rem; } }

.left {
  float: left !important; }

.right {
  float: right !important; }

.bg-dark {
  background-color: #ededed; }

.bg-gray {
  background-color: #585d62; }

.bg-gray-f8 {
  background: #f8f8f8; }

.bg-blue {
  background-color: #0098aa; }

.bg-blue-ea {
  background-color: #eaeff2; }

.bg-blue-0052 {
  background-color: #00529b; }

.bg-blue-008f {
  background-color: #008faa; }

.bg-gray-dark {
  background-color: #e7e7e7; }

.bg-green {
  background-color: #08b479; }

.bg-green-00 {
  background-color: #007577; }

.bg-green-9e {
  background-color: #9ed89d; }

.bg-green-70 {
  background-color: #70700f; }

.bg-green-96 {
  background-color: #96d045; }

.bg-red-d3 {
  background-color: #d31044; }

.bg-white {
  background-color: #fff; }

.bg-purple {
  background: #71277a; }

.bg-orange {
  background: #fe942f; }

.bg-orange-d1 {
  background: #d15c00; }

.bg-pink {
  background: #e1aed0; }

.text-white {
  color: #fff; }

.text-blue {
  color: #0082c0; }

.text-red {
  color: #d6083b; }

.text-yellow-c6 {
  color: #c6d92d !important; }

.text-blue-53 {
  color: #538ba5; }

@media (min-width: 73.75em) {
  .no-margin-bottom {
    margin-bottom: 0; } }

@media (min-width: 73.75em) {
  .margin-large-bottom {
    margin-bottom: 3.125rem; } }

@media (min-width: 73.75em) {
  .margin-large-bottom {
    margin-bottom: 5.625rem; } }

@media (min-width: 48em) {
  .block-features-benefits__wrap, .tabs-support-header ul, .block-tabs-support__content,
  .padding-one-column {
    padding-left: 11.41304%;
    padding-right: 11.41304%; } }

@media (min-width: 73.75em) {
  .block-features-benefits__wrap, .tabs-support-header ul, .block-tabs-support__content,
  .padding-one-column {
    padding-left: 8.47458%;
    padding-right: 8.47458%; } }

@media (min-width: 48em) {
  .block-positions form,
  .padding-two-columns {
    padding-left: 11.41304%;
    padding-right: 11.41304%; } }

@media (min-width: 73.75em) {
  .block-positions form,
  .padding-two-columns {
    padding-left: 16.94915%;
    padding-right: 16.94915%; } }

@media (min-width: 48em) {
  .block-introduction__wrap,
  .padding-three-columns {
    padding-left: 20.1087%;
    padding-right: 20.1087%; } }

@media (min-width: 73.75em) {
  .block-introduction__wrap,
  .padding-three-columns {
    padding-left: 25.42373%;
    padding-right: 25.42373%; } }

.hidden {
  display: none !important; }

@media screen and (max-width: 47.9375em) {
  .hidden-on-mobile {
    display: none !important; } }

@media screen and (max-width: 73.6875em) {
  .hidden-on-mobileTabletOnly {
    display: none !important; } }

@media (min-width: 48em) {
  .hidden-on-tablet {
    display: none !important; } }

@media (min-width: 73.75em) {
  .hidden-on-destopOnly {
    display: none !important; } }

.is-active {
  display: block !important; }

.box-content:not(.box-content--has-image):after, .box-social:after {
  box-shadow: inset 0 0 1.875rem #333;
  content: '';
  left: 0;
  height: 100%;
  opacity: 0;
  position: absolute;
  top: 0;
  transition: opacity .3s ease-in;
  width: 100%; }

.box-content:not(.box-content--has-image):hover:after, .box-social:hover:after, .box-content:not(.box-content--has-image):focus:after, .box-social:focus:after {
  opacity: 1; }

.block-time-location__meta .date, .block-time-location__meta time, .block-time-location__location, .block-time-location__booth, .block-event__content__meta .time, .block-event__content__location {
  padding-left: 1.25rem;
  position: relative; }
  @media (min-width: 48em) {
    .block-time-location__meta .date, .block-time-location__meta time, .block-time-location__location, .block-time-location__booth, .block-event__content__meta .time, .block-event__content__location {
      padding-left: 1.875rem; } }
  .block-time-location__meta .date:before, .block-time-location__meta time:before, .block-time-location__location:before, .block-time-location__booth:before, .block-event__content__meta .time:before, .block-event__content__location:before {
    left: 0;
    margin-right: 0.5rem;
    position: absolute;
    top: 0; }

.block-switch-type ul li, .block-switch-type ul li i {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }

.files, .block-vetcom__left a .files-pdf {
  background-position: 50% 50%;
  background-repeat: no-repeat; }

.files-pdf {
  background-image: url("../images/PDFx1.png"); }
  @media (min--moz-device-pixel-ratio: 1.3), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    .files-pdf {
      background-image: url("../images/PDFx2.png");
      background-size: 1.75rem 1.8125rem; } }

.files-ppt {
  background-image: url("../images/PPTx1.png"); }
  @media (min--moz-device-pixel-ratio: 1.3), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    .files-ppt {
      background-image: url("../images/PPTx2.png");
      background-size: 1.75rem 1.8125rem; } }

.block-cta__image img, .block-banner__image img, .block-two-images__image img,
.img-cover {
  left: 50%;
  max-width: inherit;
  min-height: 100%;
  min-width: 100%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: -1; }


.dot {
  background-color: #00aeef;
  border-radius: 50%;
  display: inline-block;
  height: 0.25rem;
  width: 0.25rem; }

.title-demo {
  font-family: 'gotham-bold';
  font-size: 1.25rem;
  margin-bottom: 0.3125rem;
  margin-top: 2.5rem;
  text-align: center; }

.margin-top-none {
  margin-top: 0; }

.list-icon {
  list-style: none; }
  .list-icon li {
    display: -ms-flexbox;
    display: flex;
    float: left;
    width: 100%;
    -ms-flex-align: center;
        align-items: center; }
    @media (min-width: 48em) {
      .list-icon li {
        width: 33%; } }
    @media (min-width: 60em) {
      .list-icon li {
        width: 25%; } }
    .list-icon li i {
      min-width: 25px; }

.align-center {
  text-align: center; }

.align-left {
  text-align: center; }
  @media (min-width: 48em) {
    .align-left {
      text-align: left; } }

.align-right {
  text-align: center; }
  @media (min-width: 48em) {
    .align-right {
      text-align: right; } }

.bold {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif; }

.description-medium {
  max-width: 50rem;
  margin-left: auto;
  margin-right: auto; }

.margin-bottom {
  margin-bottom: 20px; }

.avc-wrap {
  margin-top: 3.125rem;
  min-height: 21.875rem;
  position: relative; }
  .avc-wrap:last-child {
    margin-bottom: 1.875rem; }
  .avc-wrap .avc-image {
    margin-bottom: 1.875rem;
    text-align: center;
    width: 100%; }
    @media (min-width: 48em) {
      .avc-wrap .avc-image {
        left: 0;
        position: absolute;
        top: 0;
        width: 15.625rem; } }
  @media (min-width: 48em) {
    .avc-wrap .avc-content {
      padding-left: 18.75rem; } }
  .avc-wrap .avc-content .avc-block-title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif; }
  .avc-wrap .avc-content .avc-body {
    font-size: 1.25rem; }

.tag-box {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  border: 0.0625rem solid #d2d2d2;
  color: #999;
  display: inline-block;
  margin-bottom: 0.625rem;
  margin-right: 0.5rem;
  height: 2.4375rem;
  float: left;
  padding: 0.5625rem 0.3125rem;
  text-align: center;
  vertical-align: top;
  min-width: 4.25rem; }
  @media screen and (max-width: 47.9375em) {
    .tag-box {
      margin-right: 1.875rem;
      min-width: 4.8125rem; }
      .tag-box:nth-child(3n) {
        margin-right: 0rem; } }

.style-media {
  margin-top: 1.375rem;
  margin-bottom: 0.875rem; }
  @media (min-width: 48em) {
    .style-media {
      margin-top: 2rem;
      margin-bottom: 1.5625rem; } }
  @media (min-width: 73.75em) {
    .style-media {
      margin-top: 2.875rem;
      margin-bottom: 3.25rem; } }
  .style-media .vidyard-video {
    margin-bottom: 0.5rem; }
    @media (min-width: 48em) {
      .style-media .vidyard-video {
        margin-bottom: 1.0625rem; } }
  .style-media img {
    width: 100%;
    margin-bottom: 0; }
  .style-media__caption {
    font-family: 'gotham-thinitalic', Helvetica, Arial, sans-serif;
    color: #a7b2bc;
    font-size: 0.6875rem;
    font-style: normal;
    line-height: 1rem;
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .style-media__caption {
        margin-top: 0.5rem;
        font-size: 0.8125rem;
        line-height: 1.25rem; } }
  @media (min-width: 73.75em) {
    .style-media--5-of-6 {
      width: 82.80899%; } }

.banner-caption {
  position: relative;
  text-align: center;
  margin-top: 0.25rem; }
  @media (min-width: 48em) {
    .banner-caption {
      max-width: 77.17391%;
      margin-top: 0; } }
  @media (min-width: 73.75em) {
    .banner-caption {
      max-width: 49.15254%; } }
  .banner-caption__title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 1.5625rem;
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .banner-caption__title {
        font-size: 2.1875rem; } }
    @media (min-width: 73.75em) {
      .banner-caption__title {
        font-size: 3.125rem; } }
  .banner-caption__description {
    font-size: 1rem;
    line-height: 1.125rem;
    padding-top: 0.625rem; }
    @media (min-width: 48em) {
      .banner-caption__description {
        font-family: 'gotham-light', Helvetica, Arial, sans-serif;
        font-size: 1.5625rem;
        line-height: 1.875rem;
        padding-top: 1.0625rem;
        position: relative; } }
    @media (min-width: 73.75em) {
      .banner-caption__description {
        margin-top: 1.875rem;
        padding-top: 2.5rem; }
        .banner-caption__description:before {
          border-top: 1px solid #fff;
          content: '';
          height: 0.0625rem;
          left: 50%;
          margin-left: -18.125rem;
          position: absolute;
          top: 0;
          width: 36.25rem; } }
  .banner-caption__logo img {
    width: 4.125rem; }
    @media (min-width: 48em) {
      .banner-caption__logo img {
        width: 8.25rem; } }
    @media (min-width: 73.75em) {
      .banner-caption__logo img {
        width: auto; } }
  .banner-caption__link {
    margin-top: 1.25rem; }
    @media (min-width: 73.75em) {
      .banner-caption__link {
        margin-top: 3.3125rem; } }
    .banner-caption__link .btn {
      margin-bottom: 0; }
  .banner-caption--bold-description .banner-caption__description {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    margin-top: 0.75rem;
    padding-top: 0.75rem;
    font-size: 0.875rem;
    border-top: 1px solid #fff; }
    @media (min-width: 48em) {
      .banner-caption--bold-description .banner-caption__description {
        font-size: 1rem;
        margin-top: 1.0625rem;
        padding: 1.0625rem 1.875rem 1.0625rem; } }
    @media (min-width: 73.75em) {
      .banner-caption--bold-description .banner-caption__description {
        border-top: 0;
        font-size: 1.5625rem;
        margin-top: 1.5625rem;
        padding-top: 2.1875rem; } }

.block-cta {
  position: relative;
  padding-bottom: 2.125rem;
  padding-top: 1.875rem; }
  @media (min-width: 48em) {
    .block-cta {
      padding-bottom: 4.375rem;
      padding-top: 3.125rem; } }
  @media (min-width: 73.75em) {
    .block-cta {
      padding-bottom: 7.6875rem;
      padding-top: 3.25rem; } }
  .block-cta__content {
    position: relative;
    z-index: 5;
    padding: 0;
    max-width: 73.75rem;
    margin-left: auto;
    margin-right: auto; }
    .block-cta__content:after {
      content: " ";
      display: block;
      clear: both; }
    .block-cta__content__inner {
      display: inline-block; }
      @media (min-width: 48em) {
        .block-cta__content__inner {
          padding: 0rem 2.5rem; } }
    .block-cta__content__title {
      font-size: 1.5625rem;
      margin-bottom: 1.5625rem; }
      @media (min-width: 48em) {
        .block-cta__content__title {
          font-size: 3.125rem;
          margin-bottom: 0.625rem; } }
    .block-cta__content__body {
      display: inline-block;
      font-size: 0.9375rem;
      line-height: 1.125rem;
      margin-bottom: 0.3125rem; }
      @media (min-width: 48em) {
        .block-cta__content__body {
          font-size: 1.25rem;
          line-height: 1.5;
          margin-bottom: 2.875rem; } }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-cta__content__body {
          margin-bottom: 1.5625rem; } }
  .block-cta__image {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 1; }
    .block-cta__image img {
      width: auto;
      height: 100%;
      max-width: inherit;
      min-height: inherit;
      min-width: inherit; }
      @media (min-width: 90em) {
        .block-cta__image img {
          width: 100%;
          height: auto; } }
  .block-cta--height-small {
    height: 31.25rem; }
    @media (min-width: 73.75em) {
      .block-cta--height-small {
        height: 31.875rem; } }
  .block-cta--height-large {
    height: 31.25rem; }
    @media (min-width: 73.75em) {
      .block-cta--height-large {
        height: 39.375rem; } }
    @media screen and (min-width: 90em) and (max-width: 110em) {
      .block-cta--height-large .block-cta__image img {
        height: 100%;
        width: auto; } }
  .block-cta--dark {
    color: #808080; }
  .block-cta--light {
    color: #fff; }
  .block-cta--position-left .block-cta__content {
    text-align: left; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--position-left .block-cta__content {
        text-align: center; } }
  .block-cta--position-center .block-cta__content {
    text-align: center; }
  .block-cta--position-right .block-cta__content {
    text-align: right; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--position-right .block-cta__content {
        text-align: center; } }
  .block-cta--align-left .block-cta__content__inner {
    text-align: left; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--align-left .block-cta__content__inner {
        text-align: center; } }
  .block-cta--align-center .block-cta__content__inner {
    text-align: center; }
  .block-cta--align-right .block-cta__content__inner {
    text-align: right; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--align-right .block-cta__content__inner {
        text-align: center; } }
  .block-cta--button-left .block-cta__content__link {
    text-align: left; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--button-left .block-cta__content__link {
        text-align: center; } }
  .block-cta--button-center .block-cta__content__link {
    text-align: center; }
  .block-cta--button-right .block-cta__content__link {
    text-align: right; }
    @media screen and (max-width: 47.9375em) {
      .block-cta--button-right .block-cta__content__link {
        text-align: center; } }
  .block-cta--width-large .block-cta__content__inner {
    padding: 0rem 0.625rem; }
    @media (min-width: 48em) {
      .block-cta--width-large .block-cta__content__inner {
        max-width: 85%; } }
    @media (min-width: 73.75em) {
      .block-cta--width-large .block-cta__content__inner {
        max-width: 69%;
        padding: 0; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .block-cta--width-large .block-cta__content__title {
      font-size: 2.1875rem; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .block-cta--width-large .block-cta__content__body {
      font-size: 0.9375rem;
      margin-bottom: 0.9375rem; } }
  .block-cta--width-small .block-cta__content__inner {
    padding: 0rem 0.625rem; }
    @media (min-width: 48em) {
      .block-cta--width-small .block-cta__content__inner {
        width: 60%; } }
    @media (min-width: 73.75em) {
      .block-cta--width-small .block-cta__content__inner {
        width: 50%; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-cta--width-small .block-cta__content__title {
      font-size: 2.1875rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-cta--width-small .block-cta__content__body {
      font-size: 0.9375rem;
      margin-bottom: 0.9375rem; } }
  .block-cta--with-image {
    -ms-flex-align: center;
        align-items: center;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    padding: 1.5rem 0rem 2.125rem 0rem;
    position: relative;
    overflow: hidden; }
  .block-cta--blue-bg {
    background: linear-gradient(0deg, #00a3ed 0%, #00b9f1 100%);
    overflow: hidden;
    position: relative; }
  .block-cta--red-bg {
    background-color: #b1002c;
    overflow: hidden;
    padding-top: 1.5625rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-cta--red-bg {
        padding-top: 3.125rem; } }
    @media (min-width: 73.75em) {
      .block-cta--red-bg {
        padding-top: 5.625rem; } }
  .block-cta--darkolivegreen-bg {
    background-color: #485335; }
    @media (min-width: 48em) {
      .block-cta--darkolivegreen-bg {
        background-image: url("../images/cta-hero-darkolivegreen.jpg"); } }

.block-banner {
  -ms-flex-align: center;
      align-items: center;
  color: #fff;
  display: -ms-flexbox;
  display: flex;
  height: 25rem;
  -ms-flex-pack: center;
      justify-content: center;
  overflow: hidden;
  padding: 0 0.625rem;
  position: relative;
  width: 100%;
  z-index: 1; }
  .block-banner__image img {
    width: 100%;
    height: auto;
    max-width: inherit;
    min-height: inherit;
    min-width: inherit; }
  .block-banner--dark-overlay {
    position: relative; }
    .block-banner--dark-overlay:before {
      background: rgba(0, 0, 0, 0.3);
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%; }
  .block-banner--height-small {
    height: 7.1875rem; }
    @media (min-width: 48em) {
      .block-banner--height-small {
        height: 12.5rem; } }
    @media (min-width: 60em) {
      .block-banner--height-small {
        height: 17.1875rem; } }
    .block-banner--height-small .block-banner__image img {
      width: 100%;
      height: auto; }
  .block-banner--height-medium {
    height: 10.9375rem; }
    @media (min-width: 48em) {
      .block-banner--height-medium {
        height: 17.8125rem; } }
    @media (min-width: 60em) {
      .block-banner--height-medium {
        height: 21.875rem; } }
    @media screen and (max-width: 29.9375em) {
      .block-banner--height-medium .block-banner__image img {
        height: 100%;
        width: auto; } }
  .block-banner--height-big {
    height: 15.625rem; }
    @media (min-width: 48em) {
      .block-banner--height-big {
        height: 17.8125rem; } }
    @media (min-width: 60em) {
      .block-banner--height-big {
        height: 22.1875rem; } }
    @media (min-width: 73.75em) {
      .block-banner--height-big {
        height: 35.9375rem; } }
    @media screen and (max-width: 47.9375em) {
      .block-banner--height-big .block-banner__image img {
        height: 115%;
        width: auto; } }
    @media (min-width: 73.75em) {
      .block-banner--height-big .block-banner__image img {
        width: auto;
        height: 100%; } }
    @media (min-width: 90em) {
      .block-banner--height-big .block-banner__image img {
        width: 110%;
        height: auto; } }

.block-product-icon {
  padding-bottom: 0.625rem;
  padding-top: 1.5rem; }
  @media (min-width: 48em) {
    .block-product-icon {
      padding-bottom: 2.0625rem;
      padding-top: 3.625rem; } }
  @media (min-width: 73.75em) {
    .block-product-icon {
      padding-bottom: 1.3125rem;
      padding-top: 4.5rem; } }
  .block-product-icon .section-description {
    margin-bottom: 1.875rem; }
    @media (min-width: 48em) {
      .block-product-icon .section-description {
        margin-bottom: 3.75rem; } }
    @media (min-width: 73.75em) {
      .block-product-icon .section-description {
        margin-bottom: 3.625rem; } }
  .block-product-icon__list {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: center;
        justify-content: center; }
  .block-product-icon__item {
    color: #fff;
    text-align: center;
    margin-bottom: 0.125rem;
    width: 25%;
    float: left; }
    @media (min-width: 48em) {
      .block-product-icon__item {
        width: calc(100% / 7);
        margin-bottom: 1.4375rem; } }
    .block-product-icon__item__icon {
      display: block;
      margin-bottom: 0.1875rem;
      font-size: 3rem; }
      @media (min-width: 48em) {
        .block-product-icon__item__icon {
          font-size: 4rem;
          margin-bottom: 1.25rem; } }
      .block-product-icon__item__icon:before {
        display: block; }
    .block-product-icon__item__title {
      -ms-flex-align: center;
          align-items: center;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: center;
          justify-content: center;
      line-height: 0.8125rem;
      margin: 0 auto 0.9375rem;
      max-width: 6.25rem;
      min-height: 2.1875rem;
      font-size: 0.75rem; }
      @media (min-width: 48em) {
        .block-product-icon__item__title {
          font-size: 0.9375rem;
          line-height: 1.25rem; } }
    .block-product-icon__item__body {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      font-size: 0.9375rem;
      margin-bottom: 0.625rem; }
    .block-product-icon__item:hover {
      color: #fff; }
  @media (min-width: 48em) {
    .block-product-icon--large .block-product-icon__item__icon {
      font-size: 5.375rem; } }
  .block-product-icon--large .block-product-icon__item__title {
    max-width: inherit;
    font-size: 0.9375rem;
    line-height: 1.25rem; }
    @media (min-width: 48em) {
      .block-product-icon--large .block-product-icon__item__title {
        padding: 0rem 0.9375rem; } }
    @media (min-width: 73.75em) {
      .block-product-icon--large .block-product-icon__item__title {
        font-size: 1.25rem;
        line-height: 1.9375rem;
        padding: 0rem 3.125rem; } }
  .block-product-icon--grid-full .block-product-icon__item {
    width: 25%;
    float: left;
    margin-bottom: 0.125rem; }
    @media (min-width: 48em) {
      .block-product-icon--grid-full .block-product-icon__item {
        width: calc(100% / 7);
        margin-bottom: 2.8125rem; } }
  @media (min-width: 73.75em) {
    .block-product-icon--grid-medium {
      padding-left: 10.9375rem;
      padding-right: 10.9375rem; } }
  .block-product-icon--grid-medium .block-product-icon__item {
    width: 50%;
    float: left;
    margin-bottom: 0.9375rem; }
    @media (min-width: 48em) {
      .block-product-icon--grid-medium .block-product-icon__item {
        width: 25%;
        margin-bottom: 2.8125rem; } }
  .block-product-icon--bg-blue {
    background: linear-gradient(to bottom, #0082c0 0%, #0072a9 100%);
    color: #fff; }
    .block-product-icon--bg-blue .block-product-icon__item {
      color: #fff; }
      .block-product-icon--bg-blue .block-product-icon__item:hover h3 {
        text-decoration: underline; }
  .block-product-icon--bg-dark {
    background-color: #585d62;
    color: #fff; }
    .block-product-icon--bg-dark .block-product-icon__item {
      color: #fff; }
      .block-product-icon--bg-dark .block-product-icon__item:hover h3 {
        text-decoration: underline; }
    @media (min-width: 73.75em) {
      .block-product-icon--bg-dark .section-title {
        margin-bottom: 8.375rem; } }
  .block-product-icon--type-1 .block-product-icon {
    margin-left: -0.4375rem; }
    .block-product-icon--type-1 .block-product-icon__item {
      color: #0082c0;
      display: inline-block;
      float: none;
      margin-right: 2.1875rem;
      vertical-align: top; }
      @media screen and (max-width: 47.9375em) {
        .block-product-icon--type-1 .block-product-icon__item {
          margin: 0rem 0rem 0rem -0.25rem;
          width: 50%; } }
      @media (min-width: 60em) {
        .block-product-icon--type-1 .block-product-icon__item {
          margin-right: 2.9375rem; } }
      .block-product-icon--type-1 .block-product-icon__item:hover {
        color: #0093da; }
        .block-product-icon--type-1 .block-product-icon__item:hover h3 {
          text-decoration: underline; }
      .block-product-icon--type-1 .block-product-icon__item__icon {
        margin-bottom: 0.75rem; }
        @media (min-width: 48em) {
          .block-product-icon--type-1 .block-product-icon__item__icon {
            margin-bottom: 1.1875rem; } }

.block-features {
  padding-bottom: 1.875rem; }
  @media (min-width: 48em) {
    .block-features {
      padding-bottom: 4.4375rem;
      padding-top: 6.0625rem; } }
  @media (min-width: 73.75em) {
    .block-features {
      padding-top: 7.125rem; } }
  .block-features .section-description {
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-features .section-description {
        margin-bottom: 6.3125rem; } }
    @media (min-width: 73.75em) {
      .block-features .section-description {
        margin-bottom: 5.3125rem; } }
  @media (min-width: 48em) {
    .block-features__list {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media (min-width: 73.75em) {
    .block-features__list {
      padding-left: 8.47458%;
      padding-right: 8.47458%; } }
  .block-features__item {
    padding-bottom: 1.875rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-features__item {
        width: 22.82609%; } }
    @media (min-width: 73.75em) {
      .block-features__item {
        width: 28.69507%; }
        .block-features__item:nth-child(2) {
          margin: 0 auto;
          width: 28.69507%; } }
    .block-features__item__image {
      margin-bottom: 0.4375rem; }
      @media screen and (max-width: 47.9375em) {
        .block-features__item__image {
          display: none; } }
    .block-features__item__title {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 1.25rem;
      margin-bottom: 0.4375rem; }
      @media screen and (max-width: 47.9375em) {
        .block-features__item__title {
          padding-top: 0.625rem; } }
    .block-features__item__body {
      font-size: 0.9375rem;
      line-height: 1.5625rem;
      margin-bottom: 0.625rem; }
    .block-features__item__description {
      color: #999;
      line-height: 1.25rem;
      margin-bottom: 0.875rem; }
      @media (min-width: 73.75em) {
        .block-features__item__description {
          padding: 0rem 1.875rem; } }
  .block-features--bg-white {
    padding-bottom: 1.3125rem;
    padding-top: 2.125rem; }
    @media (min-width: 48em) {
      .block-features--bg-white {
        padding-bottom: 4.4375rem;
        padding-top: 4.1875rem; } }
    @media (min-width: 73.75em) {
      .block-features--bg-white {
        padding-bottom: 5.25rem;
        padding-top: 6.75rem; } }
    @media (min-width: 48em) {
      .block-features--bg-white .section-title {
        margin-bottom: 1.25rem; } }
    .block-features--bg-white .section-description {
      margin: 0 auto 1.5625rem;
      line-height: 1.25rem; }
      @media (min-width: 48em) {
        .block-features--bg-white .section-description {
          line-height: 1.875rem;
          margin-bottom: 3.8125rem;
          padding: 0rem 3.125rem; } }
      @media (min-width: 73.75em) {
        .block-features--bg-white .section-description {
          padding: 0;
          width: 66.15044%;
          margin-bottom: 6.25rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-features--bg-white .block-features__list {
        padding: 0rem 0.625rem; } }
    .block-features--bg-white .block-features__item {
      background-color: #fff;
      text-align: left;
      padding-bottom: 1.5625rem;
      margin-bottom: 0.9375rem; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-features--bg-white .block-features__item {
          width: 31.52174%;
          float: left;
          margin-right: 2.71739%;
          margin-bottom: 0;
          margin-right: 3.6%;
          padding-bottom: 1.875rem; }
          .block-features--bg-white .block-features__item:nth-child(3n) {
            float: right;
            margin-right: 0; } }
      .block-features--bg-white .block-features__item__wrap {
        padding: 0rem 1.25rem; }
        @media (min-width: 60em) {
          .block-features--bg-white .block-features__item__wrap {
            padding: 0rem 2.5rem; } }
      .block-features--bg-white .block-features__item__image {
        margin-bottom: 0.8125rem; }
        @media (min-width: 48em) {
          .block-features--bg-white .block-features__item__image {
            margin-bottom: 1.75rem; }
            .block-features--bg-white .block-features__item__image img {
              width: 100%; } }
      .block-features--bg-white .block-features__item__title {
        font-size: 0.9375rem;
        margin-bottom: 0.375rem;
        text-transform: uppercase; }
        @media (min-width: 48em) {
          .block-features--bg-white .block-features__item__title {
            margin-bottom: 0.5625rem; } }
      .block-features--bg-white .block-features__item__description {
        color: #585d62;
        font-size: 0.9375rem;
        letter-spacing: -0.0125rem;
        margin-bottom: 1.25rem;
        padding: 0;
        line-height: 1.125rem; }
        @media (min-width: 48em) {
          .block-features--bg-white .block-features__item__description {
            line-height: 1.25rem;
            margin-bottom: 1.5625rem; } }
      .block-features--bg-white .block-features__item .btn {
        width: 100%; }

.block-features-benefits {
  background-color: #fbfcfc;
  font-size: 0.9375rem;
  padding-bottom: 1.1875rem;
  padding-top: 1.5rem; }
  @media (min-width: 48em) {
    .block-features-benefits {
      padding-top: 3.0625rem;
      padding-bottom: 2.9375rem; } }
  @media (min-width: 73.75em) {
    .block-features-benefits {
      padding-top: 10.5rem;
      padding-bottom: 7.375rem; } }
  .block-features-benefits__item {
    margin-bottom: 1.125rem; }
    @media (min-width: 48em) {
      .block-features-benefits__item {
        margin-bottom: 2.75rem; } }
    @media (min-width: 73.75em) {
      .block-features-benefits__item {
        -ms-flex-align: end;
            align-items: flex-end;
        border-bottom: 0.0625rem solid #e2e3e3;
        display: -ms-flexbox;
        display: flex;
        margin-bottom: 2.9375rem;
        padding-bottom: 0.75rem;
        -ms-flex-align: start;
            align-items: flex-start; } }
    .block-features-benefits__item__wrap-title {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      color: #00a29b;
      border-bottom: 0.0625rem solid #e2e3e3;
      margin-bottom: 0.75rem;
      padding-right: 0.9375rem;
      padding-bottom: 0.6875rem;
      padding-left: 2.5rem; }
      @media (min-width: 48em) {
        .block-features-benefits__item__wrap-title {
          margin-bottom: 1.75rem;
          padding-bottom: 0.8125rem; } }
      @media (min-width: 73.75em) {
        .block-features-benefits__item__wrap-title {
          width: 50.93209%;
          border: 0;
          padding-bottom: 0;
          margin-bottom: 0; } }
      @media screen and (max-width: 47.9375em) {
        .block-features-benefits__item__wrap-title {
          padding-left: 1.4375rem; } }
    .block-features-benefits__item__title {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      background: url("../images/icon-check.svg") no-repeat;
      background-position: left center;
      background-size: 1.25rem 1.25rem;
      font-size: 1.25rem;
      line-height: 1.25rem;
      margin-bottom: 0;
      margin-left: -2.5rem;
      padding-left: 2.5rem; }
      @media screen and (max-width: 47.9375em) {
        .block-features-benefits__item__title {
          background-size: 1rem;
          padding-left: 1.4375rem;
          margin-left: -1.4375rem; } }
    .block-features-benefits__item__description {
      font-family: 'gotham-thinitalic', Helvetica, Arial, sans-serif;
      font-weight: bold; }
    .block-features-benefits__item__content {
      line-height: 1.125rem; }
      @media (min-width: 73.75em) {
        .block-features-benefits__item__content {
          line-height: 1.25rem;
          width: 49.06791%; } }
  @media (min-width: 73.75em) {
    .block-features-benefits--sub-product {
      padding-top: 4.875rem;
      padding-bottom: 5.75rem; } }

.index-links {
  bottom: 1.25rem;
  color: #000;
  display: block;
  font-size: 1rem;
  left: 1.25rem;
  position: fixed;
  z-index: 2000; }
  .index-links label {
    background-color: rgba(174, 201, 222, 0.75);
    border-radius: 20px;
    box-shadow: 0 1px 10px #808080;
    cursor: pointer;
    padding: 0.3125rem 0.625rem;
    transition: border-radius .4s;
    -webkit-user-select: none;
       -moz-user-select: none;
        -ms-user-select: none;
            user-select: none; }
  .index-links nav {
    background-color: rgba(174, 201, 222, 0.75);
    border-radius: 20px 20px 20px 0;
    bottom: 1.625rem;
    max-height: 0;
    min-height: 0;
    overflow: hidden;
    padding: 0rem 0.625rem;
    position: absolute;
    transition: max-height .15s ease-out; }
  .index-links a {
    color: #000;
    display: block;
    padding: 0.3125rem 0rem;
    white-space: nowrap; }
    .index-links a:hover {
      text-decoration: underline; }
  .index-links #index-link {
    display: none; }
    .index-links #index-link:checked ~ nav {
      max-height: 50rem;
      transition: max-height .5s ease-in; }
    .index-links #index-link:checked ~ label {
      border-radius: 0 0 20px 20px;
      border-top: 1px solid #000;
      transition: border-radius .1s; }

.block-social {
  list-style: none;
  text-align: center; }
  @media (min-width: 48em) {
    .block-social {
      text-align: left; } }
  .block-social__item {
    display: inline-block;
    margin: 0rem 0.9375rem 1.25rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-social__item {
        margin-bottom: 1.5625rem;
        margin-right: 1.375rem;
        margin-left: 0; } }
    @media (min-width: 73.75em) {
      .block-social__item {
        margin-right: 1.25rem;
        margin-left: 0; } }
  .block-social__link {
    background-color: #fff;
    border-radius: 50%;
    cursor: pointer;
    display: block;
    height: 2.8125rem;
    overflow: hidden;
    text-decoration: none;
    text-indent: -999em;
    transition: .5s;
    width: 2.875rem; }
    .block-social__link:before {
      color: #0082c0;
      text-indent: 0;
      transition: .5s;
      font-size: 1rem;
      -ms-flex-align: center;
          align-items: center;
      display: -ms-flexbox;
      display: flex;
      height: 2.8125rem;
      -ms-flex-pack: center;
          justify-content: center;
      width: 2.875rem; }
    .block-social__link:hover {
      background-color: #0082c0; }
      .block-social__link:hover:before {
        color: #fff; }

.block-testimonial {
  padding: 2.125rem 0rem 1.5rem; }
  @media (min-width: 48em) {
    .block-testimonial {
      padding-bottom: 3.5625rem;
      padding-top: 3.375rem; } }
  @media (min-width: 73.75em) {
    .block-testimonial {
      padding-bottom: 3.75rem;
      padding-top: 8.625rem; } }
  .block-testimonial .section-description {
    margin-bottom: 1.125rem; }
    @media (min-width: 48em) {
      .block-testimonial .section-description {
        margin-bottom: 3.3125rem; } }
    @media (min-width: 73.75em) {
      .block-testimonial .section-description {
        margin-bottom: 4.375rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-testimonial .slick-dots {
      margin-top: 1.375rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-testimonial__slide {
      padding-left: 0;
      padding-right: 0; } }
  .block-testimonial__group {
    font-family: 'gotham-light', Helvetica, Arial, sans-serif;
    margin-top: 1.6875rem; }
  .block-testimonial__content {
    padding: 3.0625rem 1rem 2.25rem; }
    @media (min-width: 48em) {
      .block-testimonial__content {
        float: left;
        padding: 2.9375rem 4rem 0.625rem;
        width: 70%; } }
    @media (min-width: 60em) {
      .block-testimonial__content {
        padding: 3.625rem 5rem 0.625rem;
        width: 71.5%; } }
    @media (min-width: 73.75em) {
      .block-testimonial__content {
        padding: 4rem 6.25rem 0.625rem; } }
  .block-testimonial__image {
    margin: -1.5625rem auto 0;
    padding: 0rem 0.25rem;
    width: 47.60274%; }
    @media (min-width: 48em) {
      .block-testimonial__image {
        float: right;
        margin: 0;
        padding: 0;
        width: 30%; } }
    @media (min-width: 60em) {
      .block-testimonial__image {
        width: 28.5%; } }
    .block-testimonial__image img {
      width: 100%; }
  .block-testimonial__body {
    color: #585d62;
    font-size: 0.9375rem;
    line-height: 1rem;
    margin-bottom: 0.875rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-testimonial__body {
        line-height: 1.5625rem;
        margin-bottom: 0.9375rem; } }
    @media (min-width: 60em) {
      .block-testimonial__body {
        font-size: 1rem;
        line-height: 1.875rem;
        margin-bottom: 2.6875rem; } }
    .block-testimonial__body:before {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      content: '\201C';
      font-size: 3.125rem;
      left: -0.1875rem;
      padding-top: 0.1875rem;
      position: absolute;
      top: -1.5rem; }
      @media (min-width: 48em) {
        .block-testimonial__body:before {
          font-size: 2.8125rem;
          left: -3.375rem;
          top: auto; } }
      @media (min-width: 60em) {
        .block-testimonial__body:before {
          font-size: 3.4375rem;
          left: -4.25rem; } }
  .block-testimonial__author {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    color: #585d62;
    font-size: 0.6875rem;
    margin-bottom: 0.125rem; }
    @media (min-width: 48em) {
      .block-testimonial__author {
        font-size: 0.9375rem; } }
  .block-testimonial__description {
    color: #9a9a9a;
    font-size: 0.5625rem;
    margin-bottom: 0rem; }
    @media (min-width: 48em) {
      .block-testimonial__description {
        font-size: 0.8125rem; } }

.block-guide {
  padding-bottom: 1.6875rem;
  padding-top: 2.125rem; }
  @media (min-width: 48em) {
    .block-guide {
      padding-bottom: 2.9375rem;
      padding-top: 4.1875rem; } }
  @media (min-width: 73.75em) {
    .block-guide {
      padding-bottom: 4.8125rem;
      padding-top: 4.9375rem; } }
  @media (min-width: 48em) {
    .block-guide .section-title {
      margin-bottom: 1.3125rem; } }
  @media dessktop {
    .block-guide .section-title {
      margin-bottom: 0.625rem; } }
  @media (min-width: 48em) {
    .block-guide .section-description {
      margin-bottom: 4.125rem; } }
  @media (min-width: 48em) {
    .block-guide__contents {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between;
      margin: 0 auto; } }
  @media (min-width: 60em) {
    .block-guide__contents {
      padding-left: 6.84783%;
      padding-right: 6.84783%; } }
  @media (min-width: 73.75em) {
    .block-guide__contents {
      width: 66.10169%;
      padding: 0; } }
  .block-guide__contents__item {
    margin: 0 auto 3.375rem auto;
    position: relative;
    text-align: center;
    width: 47.60274%; }
    @media (min-width: 48em) {
      .block-guide__contents__item {
        margin: 0;
        width: 23.63434%; } }
    .block-guide__contents__item:last-of-type {
      margin-bottom: 0; }
    .block-guide__contents__item:not(:last-child):before, .block-guide__contents__item:not(:last-child):after {
      border-bottom: 0.0625rem solid #9f9f9f;
      content: '';
      height: 0.125rem;
      position: absolute;
      width: 1.0625rem; }
      @media (min-width: 48em) {
        .block-guide__contents__item:not(:last-child):before, .block-guide__contents__item:not(:last-child):after {
          border-bottom-width: 0.125rem;
          width: 2.25rem; } }
    .block-guide__contents__item:not(:last-child):before {
      right: 50%;
      bottom: -1.5625rem;
      transform: rotate(45deg); }
      @media (min-width: 48em) {
        .block-guide__contents__item:not(:last-child):before {
          bottom: inherit;
          right: -5rem;
          top: 4.6875rem; } }
    .block-guide__contents__item:not(:last-child):after {
      bottom: -1.5625rem;
      margin-right: -0.6875rem;
      right: 50%;
      transform: rotate(-45deg);
      width: 1.125rem; }
      @media (min-width: 48em) {
        .block-guide__contents__item:not(:last-child):after {
          bottom: inherit;
          margin: 0;
          right: -4.9375rem;
          top: 6.25rem;
          width: 2.3125rem; } }
    .block-guide__contents__item img {
      margin-bottom: 0.25rem;
      padding: 0rem 1.5625rem; }
      @media (min-width: 48em) {
        .block-guide__contents__item img {
          margin-bottom: 2.0625rem;
          padding: 0; } }
  .block-guide__body {
    display: block;
    text-align: center;
    width: 100%; }
    .block-guide__body__title {
      color: #0082c0;
      font-size: 1.25rem; }
  .block-guide__label {
    font-size: 0.9375rem;
    margin-bottom: 0.25rem;
    display: block; }
  .block-guide__links {
    text-align: center;
    margin-top: 2.5rem; }
    @media (min-width: 48em) {
      .block-guide__links {
        margin-top: 4.75rem; } }
    .block-guide__links a {
      margin-bottom: 1.25rem; }
      @media (min-width: 48em) {
        .block-guide__links a {
          margin: 0 1.09375rem; } }
  .block-guide--color-red .block-guide__body__title {
    color: #d6083b; }

.block-cartriges {
  padding-bottom: 2.5rem;
  padding-top: 4.6875rem; }
  .block-cartriges__title {
    font-size: 2.5rem;
    margin-bottom: 3.125rem;
    text-align: center; }
  .block-cartriges__item {
    margin-bottom: 1.25rem; }
    @media (min-width: 60em) {
      .block-cartriges__item {
        width: 66.10169%; } }
    @media (min-width: 80em) {
      .block-cartriges__item {
        padding: 0 2.54237%; } }
    .block-cartriges__item__image {
      margin-bottom: 0.9375rem; }
      @media (min-width: 60em) {
        .block-cartriges__item__image {
          width: 49.15254%;
          float: left;
          margin-right: 1.69492%; } }
      @media (min-width: 80em) {
        .block-cartriges__item__image {
          padding: 0 6.77966%; } }
    @media (min-width: 60em) {
      .block-cartriges__item__content {
        width: 49.15254%;
        float: right;
        margin-right: 0;
        padding-left: 1.25rem;
        padding-top: 0.625rem; } }
    .block-cartriges__item__title {
      font-size: 1.25rem;
      margin-bottom: 0.4375rem; }
    .block-cartriges__item__body {
      color: #626567;
      font-size: 0.875rem;
      margin-bottom: 1.5625rem; }
    .block-cartriges__item__link a {
      color: #000;
      text-decoration: none; }
      .block-cartriges__item__link a:hover {
        color: #0093da; }

.block-specifications {
  color: #585d62;
  overflow: hidden;
  position: relative; }
  @media (min-width: 48em) {
    .block-specifications:after, .block-specifications:before {
      content: '';
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      width: 50%;
      z-index: -1; }
    .block-specifications:before {
      background-color: #f8f8f8;
      left: 0; }
    .block-specifications:after {
      background-color: #eaeff2;
      right: 0; } }
  .block-specifications__left, .block-specifications__right {
    margin: 0rem -1.25rem;
    padding: 0rem 1.25rem; }
    @media (min-width: 48em) {
      .block-specifications__left, .block-specifications__right {
        margin: 0; } }
  .block-specifications__left {
    background-color: #f8f8f8;
    display: -ms-flexbox;
    display: flex;
    padding-top: 1.5rem; }
    @media (min-width: 48em) {
      .block-specifications__left {
        display: block;
        float: left;
        padding: 7.0625rem 1.3125rem 0rem 0.25rem;
        width: 22.82609%; } }
    @media (min-width: 73.75em) {
      .block-specifications__left {
        width: 25.42373%;
        padding: 8.125rem 0rem 0rem 0rem; } }
  .block-specifications__right {
    background-color: #eaeff2;
    padding-bottom: 0.0625rem;
    padding-top: 2rem; }
    @media screen and (max-width: 47.9375em) {
      .block-specifications__right {
        min-height: auto !important; } }
    @media (min-width: 48em) {
      .block-specifications__right {
        width: 77.17391%;
        float: left;
        padding: 7.0625rem 0rem 1.4375rem 1.5rem; } }
    @media (min-width: 73.75em) {
      .block-specifications__right {
        width: 74.57627%;
        padding: 7rem 0rem 6.6875rem 0rem; } }
  .block-specifications__image {
    float: left;
    margin-bottom: 1.1875rem;
    padding: 0rem 1.3125rem 0rem 0.4375rem;
    width: 47.60274%; }
    @media (min-width: 48em) {
      .block-specifications__image {
        float: none;
        margin-bottom: 2.375rem;
        padding: 0;
        width: auto; } }
    @media (min-width: 73.75em) {
      .block-specifications__image {
        margin-bottom: 3.3125rem; } }
  .block-specifications .list-properties {
    float: left;
    font-size: 0.9375rem;
    list-style: none;
    padding: 1.0625rem 0rem 0rem 0.4375rem;
    width: 47.60274%; }
    @media (min-width: 48em) {
      .block-specifications .list-properties {
        float: none;
        padding: 0rem 0rem 0rem 1.5625rem;
        width: auto; } }
    @media (min-width: 73.75em) {
      .block-specifications .list-properties {
        padding: 0rem 0rem 0rem 2.5625rem; } }
    .block-specifications .list-properties li {
      margin-bottom: 1.0625rem; }
      .block-specifications .list-properties li p {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
        display: block;
        line-height: 1rem;
        margin-bottom: 0; }
        @media (min-width: 48em) {
          .block-specifications .list-properties li p {
            line-height: 1.4; } }
  @media (min-width: 73.75em) {
    .block-specifications__list {
      padding-left: 11.34173%; } }
  .block-specifications .section-title {
    margin-bottom: 1.4375rem;
    text-align: left; }
    @media (min-width: 48em) {
      .block-specifications .section-title {
        font-size: 3.125rem;
        margin-bottom: 3.5625rem; } }
    @media (min-width: 73.75em) {
      .block-specifications .section-title {
        margin-bottom: 3.625rem;
        padding-left: 11.34173%; } }
  .block-specifications__item {
    border-bottom: 0.0625rem solid #d6d9dc;
    margin-bottom: 0.9375rem;
    padding-bottom: 0.9375rem; }
    @media screen and (max-width: 47.9375em) {
      .block-specifications__item:last-of-type {
        border: 0; } }
    @media (min-width: 48em) {
      .block-specifications__item {
        display: -ms-flexbox;
        display: flex;
        margin-bottom: 1.6875rem;
        padding-bottom: 0.25rem; } }
    .block-specifications__item__title {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      font-size: 0.9375rem;
      margin-bottom: 0.4375rem; }
      @media (min-width: 48em) {
        .block-specifications__item__title {
          font-size: 0.8125rem;
          margin-bottom: 0;
          width: 37.20736%; } }
    .block-specifications__item__description {
      color: #7a7a7a;
      font-size: 0.75rem;
      padding-left: 0.25rem; }
      @media (min-width: 48em) {
        .block-specifications__item__description {
          font-size: 0.8125rem;
          width: 62.79264%; } }

.block-slideshow {
  position: relative; }
  .block-slideshow .banner-caption {
    color: #fff;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 1; }
    @media screen and (max-width: 47.9375em) {
      .block-slideshow .banner-caption {
        padding: 0rem 0.625rem;
        width: 100%; } }
  .block-slideshow .slick-dots {
    bottom: 0.375rem;
    left: 0;
    margin: 0;
    position: absolute;
    width: 100%;
    z-index: 3; }
    @media (min-width: 48em) {
      .block-slideshow .slick-dots {
        bottom: 0.625rem; } }
    @media (min-width: 73.75em) {
      .block-slideshow .slick-dots {
        bottom: 2.5625rem; } }

.block-distributor {
  background-image: url("../images/bg-distributor.jpg");
  background-position: top center;
  background-size: cover;
  padding-bottom: 2.25rem;
  padding-top: 2.1875rem;
  position: relative;
  text-align: center; }
  @media (min-width: 48em) {
    .block-distributor {
      padding-bottom: 5.125rem;
      padding-top: 4.9375rem;
      text-align: left; } }
  @media (min-width: 73.75em) {
    .block-distributor {
      padding-bottom: 4.375rem; } }
  .block-distributor__title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    color: #585d62;
    font-size: 1.875rem;
    line-height: 1.875rem;
    margin-bottom: 0.5625rem; }
    @media (min-width: 48em) {
      .block-distributor__title {
        line-height: 2.5rem;
        margin-bottom: 1.0625rem; } }
  .block-distributor__content-left {
    font-size: 1.25rem;
    line-height: 1.5rem;
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-distributor__content-left {
        line-height: 1.875rem;
        margin-bottom: 3.8125rem; } }
  .block-distributor .form-type-select, .block-distributor .block-event .tab-filter, .block-event .block-distributor .tab-filter {
    margin-bottom: 0.5625rem; }
    @media (min-width: 48em) {
      .block-distributor .form-type-select, .block-distributor .block-event .tab-filter, .block-event .block-distributor .tab-filter {
        margin-bottom: 1.0625rem; } }
  .block-distributor__link-right {
    margin-top: 1.5625rem; }
    @media (min-width: 48em) {
      .block-distributor__link-right {
        margin-top: 2.3125rem; } }
  @media (min-width: 48em) {
    .block-distributor__left, .block-distributor__right {
      padding-bottom: 2.5rem;
      padding-top: 2.0625rem; } }
  .block-distributor__left {
    margin-bottom: 3rem; }
    @media (min-width: 48em) {
      .block-distributor__left {
        width: 48.6413%;
        float: left;
        margin-right: 2.71739%;
        margin-bottom: 0; } }
    @media (min-width: 73.75em) {
      .block-distributor__left {
        padding-left: 8.47458%;
        padding-right: 8.47458%;
        width: 49.15254%;
        float: left;
        margin-right: 1.69492%; } }
  @media screen and (max-width: 47.9375em) {
    .block-distributor__right .form-type-select, .block-distributor__right .block-event .tab-filter, .block-event .block-distributor__right .tab-filter {
      text-align: left; } }
  @media (min-width: 48em) {
    .block-distributor__right {
      width: 48.6413%;
      float: right;
      margin-right: 0;
      border-left: 0.0625rem solid #ccc;
      padding-left: 8.69565%; } }
  @media (min-width: 73.75em) {
    .block-distributor__right {
      padding-left: 8.47458%;
      padding-right: 8.47458%;
      width: 49.15254%;
      float: right;
      margin-right: 0; } }
  .block-distributor__right .block-distributor__title {
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-distributor__right .block-distributor__title {
        margin-bottom: 1.5625rem; } }

.block-contact-info {
  font-size: 0.9375rem;
  padding-bottom: 8.75rem;
  padding-top: 3.75rem; }
  .block-contact-info__fax, .block-contact-info__phone, .block-contact-info__email {
    margin-bottom: 0; }
    .block-contact-info__fax i, .block-contact-info__phone i, .block-contact-info__email i {
      font-size: 1.0625rem;
      margin-right: 0.375rem;
      position: relative;
      top: 0.25rem; }
      @media (min-width: 48em) {
        .block-contact-info__fax i, .block-contact-info__phone i, .block-contact-info__email i {
          font-size: 1.3125rem;
          margin-right: 1.1875rem; } }
  .block-contact-info__title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 1.25rem; }
    @media screen and (max-width: 47.9375em) {
      .block-contact-info__title {
        margin-bottom: 0.1875rem; } }
  .block-contact-info__body {
    line-height: 1.5625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-contact-info__body {
        font-size: 1.125rem;
        line-height: 1.125rem;
        margin-bottom: 0.5rem; } }
  .block-contact-info__link {
    margin-top: 1.625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-contact-info__link {
        text-align: center; } }
  .block-contact-info__item {
    margin-bottom: 1rem; }
    @media (min-width: 48em) {
      .block-contact-info__item {
        margin-bottom: 1.25rem; } }
  .block-contact-info__grid-2-cols {
    background-color: #fff;
    padding: 1.0625rem 1.5rem; }
    @media (min-width: 48em) {
      .block-contact-info__grid-2-cols {
        padding: 2.5625rem 3.125rem;
        width: 48.82943%;
        float: left; }
        .block-contact-info__grid-2-cols:nth-child(2n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .block-contact-info__grid-2-cols:nth-child(2n + 2) {
          margin-left: 51.17057%;
          margin-right: -100%;
          clear: none; } }
  .block-contact-info__grid-3-cols {
    background-color: #fff;
    padding: 1.0625rem 1.625rem; }
    @media (min-width: 48em) {
      .block-contact-info__grid-3-cols {
        width: 49.15254%;
        float: left;
        padding: 1.875rem 1.25rem; }
        .block-contact-info__grid-3-cols:nth-child(2n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .block-contact-info__grid-3-cols:nth-child(2n + 2) {
          margin-left: 50.84746%;
          margin-right: -100%;
          clear: none; } }
    @media (min-width: 60em) {
      .block-contact-info__grid-3-cols {
        padding: 2.5625rem 3.125rem; } }
    @media (min-width: 73.75em) {
      .block-contact-info__grid-3-cols {
        width: 32.20339%;
        float: left; }
        .block-contact-info__grid-3-cols:nth-child(3n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .block-contact-info__grid-3-cols:nth-child(3n + 2) {
          margin-left: 33.89831%;
          margin-right: -100%;
          clear: none; }
        .block-contact-info__grid-3-cols:nth-child(3n + 3) {
          margin-left: 67.79661%;
          margin-right: -100%;
          clear: none; } }
  .block-contact-info--has-border .block-contact-info__title {
    padding-bottom: 1.25rem;
    border-bottom: 1px solid #ddd;
    font-size: 0.9375rem; }
    @media screen and (max-width: 47.9375em) {
      .block-contact-info--has-border .block-contact-info__title {
        margin-bottom: 0.625rem; } }
  .block-contact-info--has-description {
    padding-top: 1.9375rem;
    padding-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .block-contact-info--has-description {
        padding-top: 4.4375rem;
        padding-bottom: 3.25rem; } }
    .block-contact-info--has-description .section-description {
      margin-bottom: 2.4375rem; }
      @media screen and (max-width: 47.9375em) {
        .block-contact-info--has-description .section-description {
          font-size: 1.25rem;
          line-height: 1.5rem;
          margin-bottom: 1.8125rem; } }
    @media (min-width: 48em) {
      .block-contact-info--has-description .block-contact-info__wrap {
        padding-left: 11.41304%;
        padding-right: 11.41304%; } }
    @media (min-width: 73.75em) {
      .block-contact-info--has-description .block-contact-info__wrap {
        padding-left: 16.94915%;
        padding-right: 16.94915%; } }
    .block-contact-info--has-description .block-contact-info__title {
      margin-bottom: 0.3125rem; }
  .block-contact-info--wide {
    background: none;
    padding-bottom: 0; }
    @media (min-width: 73.75em) {
      .block-contact-info--wide {
        padding: 0rem 0rem 0rem 2.5625rem; } }
    .block-contact-info--wide .block-contact-info__title {
      margin-bottom: 0.25rem; }
      @media (min-width: 48em) {
        .block-contact-info--wide .block-contact-info__title {
          margin-bottom: 0.3125rem; } }
    .block-contact-info--wide .block-contact-info__body {
      line-height: 1.25rem; }
      @media screen and (max-width: 47.9375em) {
        .block-contact-info--wide .block-contact-info__body {
          font-size: 0.9375rem;
          margin-bottom: 0.0625rem; } }
      @media (min-width: 48em) {
        .block-contact-info--wide .block-contact-info__body {
          line-height: 1.625rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-contact-info--wide .block-contact-info__item__wrap {
        float: left;
        width: 41.32311%; }
        .block-contact-info--wide .block-contact-info__item__wrap:nth-child(3) {
          float: right; } }
    .block-contact-info--wide .no-body {
      margin-bottom: 1.5rem; }
      @media (min-width: 48em) {
        .block-contact-info--wide .no-body {
          float: right;
          width: 41.32311%;
          margin-bottom: 2.4375rem; } }
      @media (min-width: 73.75em) {
        .block-contact-info--wide .no-body {
          float: none;
          margin-bottom: 4.3125rem;
          width: auto; } }
      .block-contact-info--wide .no-body .block-contact-info__title {
        margin-bottom: 0.3125rem; }
        @media (min-width: 48em) {
          .block-contact-info--wide .no-body .block-contact-info__title {
            margin-bottom: 0.1875rem; } }
    .block-contact-info--wide .no-title {
      margin-bottom: 1.5rem; }
      @media (min-width: 48em) {
        .block-contact-info--wide .no-title {
          margin-bottom: 4.875rem; } }
  .block-contact-info--invest {
    padding: 1.8125rem 0rem 1.25rem; }
    @media (min-width: 48em) {
      .block-contact-info--invest {
        padding: 5rem 0rem;
        padding-left: 11.41304%;
        padding-right: 11.41304%; } }
    @media (min-width: 73.75em) {
      .block-contact-info--invest {
        padding: 5rem 0rem; } }
    .block-contact-info--invest .block-contact-info__grid-3-cols {
      padding-bottom: 1.0625rem; }
      @media (min-width: 48em) {
        .block-contact-info--invest .block-contact-info__grid-3-cols {
          min-height: 15.625rem;
          padding-bottom: 2.375rem; } }
    .block-contact-info--invest .block-contact-info__body {
      margin-bottom: 1.0625rem; }

.block-location {
  padding: 1.6875rem 0rem 0.625rem; }
  @media screen and (max-width: 47.9375em) {
    .block-location {
      font-family: 'gotham-book', Helvetica, Arial, sans-serif; } }
  @media (min-width: 48em) {
    .block-location {
      padding: 3.125rem 0rem 1.375rem; } }
  @media (min-width: 73.75em) {
    .block-location {
      padding: 3.75rem 0rem 2.5rem; } }
  .block-location__title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    color: #474b4f;
    font-size: 1rem;
    line-height: 1.5rem;
    margin-bottom: 0;
    width: 100%; }
    @media (min-width: 48em) {
      .block-location__title {
        font-size: 1.25rem;
        line-height: 1.5625rem; } }
  .block-location__body {
    font-size: 0.9375rem;
    line-height: 1.125rem;
    max-height: 6.5625rem;
    overflow: hidden; }
    @media (min-width: 48em) {
      .block-location__body {
        line-height: 1.5625rem; } }
    .block-location__body p {
      margin-bottom: 0; }
  .block-location__local {
    color: #676767;
    cursor: pointer;
    font-size: 0.75rem;
    margin-left: -0.3125rem;
    margin-top: 0.5625rem;
    position: relative;
    z-index: 3; }
    @media (min-width: 48em) {
      .block-location__local {
        font-size: 0.8125rem;
        margin-left: 0;
        margin-top: 0; } }
    .block-location__local:before {
      margin-right: 0.3125rem; }
      @media (min-width: 48em) {
        .block-location__local:before {
          margin-right: 0.5rem; } }
    .block-location__local b:after {
      border-style: solid;
      border-width: 0.0625rem 0 0;
      content: '';
      display: inline-block;
      margin: 0rem 0.25rem;
      position: relative;
      top: -0.1875rem;
      width: 0.625rem; }
    .block-location__local span {
      margin-right: 1.25rem; }
      @media (min-width: 48em) {
        .block-location__local span {
          margin-right: 1.5625rem; } }
      .block-location__local span:last-of-type {
        margin-right: 0; }
  .block-location__link {
    height: 100%;
    left: 0;
    overflow: hidden;
    position: absolute;
    text-indent: -999em;
    top: 0;
    width: 100%;
    z-index: 2; }
  .block-location__content {
    font-family: 'gotham-book', Helvetica, Arial, sans-serif;
    padding: 0.625rem 0.75rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-location__content {
        padding: 2.0625rem 1.25rem 1.8125rem; } }
    @media (min-width: 73.75em) {
      .block-location__content {
        padding: 2.0625rem 2.4375rem 1.8125rem; } }
    .block-location__content:hover, .block-location__content.active {
      background: #00aeef;
      color: #fff; }
      .block-location__content:hover .block-location__title, .block-location__content.active .block-location__title {
        color: #fff; }
      .block-location__content:hover .block-location__local, .block-location__content.active .block-location__local {
        color: #fff; }
        .block-location__content:hover .block-location__local a, .block-location__content.active .block-location__local a {
          color: #fff; }
          .block-location__content:hover .block-location__local a:hover, .block-location__content.active .block-location__local a:hover {
            opacity: .8; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-location__grid {
      padding-left: 11.41304%;
      padding-right: 11.41304%; } }
  .block-location__grid__item {
    -ms-flex-align: center;
        align-items: center;
    background: #fff;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 0.9375rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-location__grid__item {
        height: 7.8125rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-location__grid__item {
        width: 48.65772%;
        float: left;
        margin-right: 2.68456%;
        margin-bottom: 1.875rem; }
        .block-location__grid__item:nth-child(2n) {
          float: right;
          margin-right: 0; }
        .block-location__grid__item:nth-child(2n + 1) {
          clear: both; } }
    @media (min-width: 73.75em) {
      .block-location__grid__item {
        width: 32.20339%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: 1.875rem; }
        .block-location__grid__item:nth-child(3n) {
          float: right;
          margin-right: 0; }
        .block-location__grid__item:nth-child(3n + 1) {
          clear: both; } }

.block-positions {
  margin: 1.5625rem 0rem 0.625rem; }
  @media (min-width: 48em) {
    .block-positions {
      margin: 3.125rem 0rem 2.3125rem; } }
  @media (min-width: 73.75em) {
    .block-positions {
      margin: 3.625rem 0rem 2.6875rem; } }
  .block-positions .form-type-select, .block-positions .block-event .tab-filter, .block-event .block-positions .tab-filter {
    margin-bottom: 0.875rem; }
    @media (min-width: 48em) {
      .block-positions .form-type-select, .block-positions .block-event .tab-filter, .block-event .block-positions .tab-filter {
        width: 48.46626%;
        float: left;
        margin-right: 3.06748%; }
        .block-positions .form-type-select:nth-child(2n), .block-positions .block-event .tab-filter:nth-child(2n), .block-event .block-positions .tab-filter:nth-child(2n) {
          margin-right: 0; } }
    @media (min-width: 73.75em) {
      .block-positions .form-type-select, .block-positions .block-event .tab-filter, .block-event .block-positions .tab-filter {
        width: 48.71795%;
        float: left;
        margin-right: 2.5641%; } }
    @media (min-width: 48em) {
      .block-positions .form-type-select:last-of-type, .block-positions .block-event .tab-filter:last-of-type, .block-event .block-positions .tab-filter:last-of-type {
        float: right;
        margin-right: 0; } }

.block-two-images {
  position: relative; }
  .block-two-images__content {
    bottom: 0;
    left: 50%;
    margin-left: -10.3125rem;
    margin-top: -6.75rem;
    max-width: 20.625rem;
    padding: 1.25rem;
    position: absolute;
    top: 50%; }
    @media (min-width: 48em) {
      .block-two-images__content {
        left: 0;
        margin: 0;
        max-width: inherit;
        top: 0;
        padding: 1.0625rem 1.5625rem; } }
    @media (min-width: 73.75em) {
      .block-two-images__content.pull-left {
        right: 0;
        left: inherit;
        max-width: 36.875rem;
        text-align: right;
        padding: 3.9375rem 6.875rem 3.75rem 0.3125rem; } }
    @media (min-width: 73.75em) {
      .block-two-images__content.pull-right {
        left: 0;
        max-width: 36.875rem;
        padding: 3.9375rem 0.3125rem 3.75rem 6.875rem; } }
    .block-two-images__content__title {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 1.4375rem;
      margin-bottom: 0.125rem; }
      @media (min-width: 48em) {
        .block-two-images__content__title {
          font-size: 1.75rem;
          margin-bottom: 0.3125rem; } }
      @media (min-width: 60em) {
        .block-two-images__content__title {
          font-size: 2.1875rem; } }
      @media (min-width: 73.75em) {
        .block-two-images__content__title {
          font-size: 2.5rem;
          margin-bottom: 1.0625rem; } }
    .block-two-images__content__body {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      display: inline-block;
      font-size: 0.9375rem;
      line-height: 1.0625rem; }
      @media screen and (max-width: 47.9375em) {
        .block-two-images__content__body p {
          margin-bottom: 0.75rem; } }
      @media (min-width: 48em) {
        .block-two-images__content__body {
          font-size: 0.9375rem;
          margin-bottom: 1.5rem;
          line-height: 1.5rem; } }
      @media (min-width: 60em) {
        .block-two-images__content__body {
          font-size: 1rem; } }
      @media (min-width: 73.75em) {
        .block-two-images__content__body {
          font-size: 1.125rem;
          margin-bottom: 1.4375rem;
          line-height: 1.5625rem; } }
    @media (min-width: 48em) {
      .block-two-images__content__link {
        position: absolute;
        bottom: 1.625rem; } }
    @media (min-width: 73.75em) {
      .block-two-images__content__link {
        bottom: 6.25rem; } }
  .block-two-images__image {
    line-height: 0;
    transition: background-color .5s ease-in;
    overflow: hidden;
    height: 13.5rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-two-images__image {
        height: 15.25rem; } }
    @media (min-width: 73.75em) {
      .block-two-images__image {
        height: 25.625rem; } }
  .block-two-images__half {
    position: relative; }
    @media screen and (max-width: 47.9375em) {
      .block-two-images__half {
        text-align: center; } }
    @media (min-width: 48em) {
      .block-two-images__half {
        width: 50%;
        float: left; } }
    .block-two-images__half:hover .block-two-images__image, .block-two-images__half:focus .block-two-images__image {
      background-color: transparent; }
  @media screen and (max-width: 47.9375em) {
    .block-two-images__left {
      margin-bottom: 0.1875rem; } }
  @media (min-width: 48em) {
    .block-two-images__left {
      padding: 0.4375rem 0.3125rem 0.4375rem 0rem;
      text-align: right; } }
  .block-two-images__left .block-two-images__image {
    background-color: rgba(177, 0, 44, 0.9); }
  @media (min-width: 48em) {
    .block-two-images__left .block-two-images__content__link {
      right: 1.625rem; } }
  @media (min-width: 73.75em) {
    .block-two-images__left .block-two-images__content__link {
      right: 6.8125rem; } }
  @media (min-width: 48em) {
    .block-two-images__right {
      padding: 0.4375rem 0rem 0.4375rem 0.3125rem; } }
  .block-two-images__right .block-two-images__image {
    background-color: rgba(0, 84, 124, 0.8); }
  .block-two-images--dark {
    color: #333; }
  .block-two-images--light {
    color: #fff; }

.block-info {
  padding: 2.0625rem 0.625rem 0.25rem;
  text-align: center; }
  @media (min-width: 48em) {
    .block-info {
      margin: 0 auto;
      padding: 4.25rem 3.4375rem 3.75rem;
      width: 88.58696%; } }
  @media (min-width: 73.75em) {
    .block-info {
      padding: 4.875rem 3.4375rem 6.625rem;
      width: 66.10169%; } }
  @media screen and (max-width: 47.9375em) {
    .block-info .section-title {
      font-size: 1.875rem;
      margin-bottom: 0.25rem; } }
  @media (min-width: 48em) {
    .block-info .section-title {
      margin-bottom: 1.25rem; } }
  .block-info__image {
    margin-bottom: 3rem; }
    @media screen and (max-width: 47.9375em) {
      .block-info__image {
        margin-bottom: 1.1875rem; }
        .block-info__image img {
          width: 3.9375rem; } }
  .block-info__link {
    font-size: 0.8125rem; }
  .block-info--has-image {
    padding: 2.1875rem 0.625rem 0.3125rem; }
    @media (min-width: 48em) {
      .block-info--has-image {
        padding-left: 11.41304%;
        padding-right: 11.41304%;
        padding-bottom: 2.125rem;
        padding-top: 4.4375rem; } }
    @media (min-width: 73.75em) {
      .block-info--has-image {
        padding: 6.875rem 0rem 3.8125rem; } }
    .block-info--has-image .block-info__image {
      margin-bottom: 1.0625rem; }
      @media (min-width: 48em) {
        .block-info--has-image .block-info__image {
          margin-bottom: 2.5625rem; } }
      .block-info--has-image .block-info__image img {
        width: 9.125rem; }
        @media (min-width: 48em) {
          .block-info--has-image .block-info__image img {
            width: auto; } }

.block-intro {
  padding: 2.0625rem 0rem 0rem 0rem; }
  @media (min-width: 48em) {
    .block-intro {
      padding: 3.9375rem 0rem 0rem 0rem; } }
  @media (min-width: 73.75em) {
    .block-intro {
      padding: 5.1875rem 0rem 0rem 0rem; } }
  @media (min-width: 48em) {
    .block-intro .container-narrow {
      border-bottom: 1px solid #e4e5e6;
      padding-bottom: 2.6875rem; } }
  @media (min-width: 73.75em) {
    .block-intro .container-narrow {
      padding-bottom: 5.125rem; } }
  .block-intro .section-title {
    font-size: 1.875rem;
    line-height: 1.875rem;
    margin-bottom: 0.625rem;
    text-align: left; }
    @media (min-width: 48em) {
      .block-intro .section-title {
        line-height: 2.5rem;
        margin-bottom: 1.375rem; } }
  .block-intro .section-body {
    font-size: 0.9375rem;
    line-height: 1.125rem;
    margin-bottom: 1.625rem; }
    @media (min-width: 48em) {
      .block-intro .section-body {
        line-height: 1.5625rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-intro__link {
      display: block;
      font-size: 0.875rem;
      font-weight: bold;
      line-height: 0.9375rem;
      word-wrap: break-word; } }

.block-job {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  margin-bottom: 1.3125rem;
  margin-top: 1.4375rem; }
  @media (min-width: 48em) {
    .block-job {
      margin-bottom: 2.75rem;
      margin-top: 2.5rem; } }
  @media (min-width: 73.75em) {
    .block-job {
      margin-bottom: 6.875rem;
      margin-top: 4.75rem; } }
  .block-job__title {
    border-bottom: 0.0625rem solid #e4e5e6;
    font-size: 1.875rem;
    line-height: 2rem;
    margin-bottom: 1.125rem;
    padding-bottom: 0.4375rem; }
    @media (min-width: 48em) {
      .block-job__title {
        font-size: 2.1875rem;
        line-height: 3.0625rem;
        margin-bottom: 2.6875rem;
        padding-bottom: 1.625rem; } }
    @media (min-width: 73.75em) {
      .block-job__title {
        margin-bottom: 3.25rem; } }
  .block-job__link {
    font-size: 0.9375rem;
    line-height: 1.125rem;
    margin-bottom: 1.75rem;
    padding-left: 1rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-job__link {
        line-height: 1.5625rem;
        margin-bottom: 2.5rem;
        padding-left: 1.375rem;
        width: 41.32311%; } }
    @media (min-width: 73.75em) {
      .block-job__link {
        margin-bottom: 2.9375rem;
        width: 48.42697%; } }
    .block-job__link:before {
      color: #0082c0;
      font-size: 0.8125rem;
      left: 0;
      padding-top: 0.1875rem;
      position: absolute; }
      @media (min-width: 48em) {
        .block-job__link:before {
          padding-top: 0.375rem; } }
  .block-job__body {
    font-size: 0.9375rem; }
    .block-job__body h3 {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 0.9375rem;
      margin-bottom: 1.0625rem; }
      @media (min-width: 48em) {
        .block-job__body h3 {
          font-size: 1.25rem;
          margin-bottom: 1.5625rem; } }
  .block-job__action {
    margin-bottom: 1.5625rem; }
    @media (min-width: 48em) {
      .block-job__action {
        margin-bottom: 2.625rem;
        padding-left: 1.9375rem; }
        .block-job__action .btn {
          padding-bottom: 0.5rem;
          padding-top: 0.75rem; } }
  .block-job__node {
    font-size: 0.8125rem; }
    @media screen and (max-width: 47.9375em) {
      .block-job__node {
        line-height: 0.8125rem; } }
    @media (min-width: 48em) {
      .block-job__node {
        padding-left: 2.125rem; } }
    .block-job__node h4 {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      font-size: 0.75rem;
      margin-bottom: 0.125rem; }
      @media (min-width: 48em) {
        .block-job__node h4 {
          font-size: 0.8125rem; } }
    .block-job__node p {
      color: #aab4bd; }
  @media screen and (max-width: 47.9375em) {
    .block-job__content .container-narrow {
      margin: 0; } }

.block-more-careers {
  padding-bottom: 0.625rem;
  padding-top: 1.5rem; }
  @media (min-width: 48em) {
    .block-more-careers {
      padding-bottom: 2.9375rem;
      padding-top: 4.3125rem; } }
  @media (min-width: 73.75em) {
    .block-more-careers {
      padding-bottom: 6.375rem;
      padding-top: 6.375rem; } }
  .block-more-careers__content {
    font-family: 'gotham-book', Helvetica, Arial, sans-serif;
    font-size: 0.9375rem;
    line-height: 1.125rem; }
    @media (min-width: 48em) {
      .block-more-careers__content {
        line-height: 1.25rem; } }
    .block-more-careers__content h3 {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 0.9375rem;
      margin-bottom: 0.6875rem; }
      @media (min-width: 48em) {
        .block-more-careers__content h3 {
          font-size: 1.125rem; } }
    .block-more-careers__content p {
      margin-bottom: 0.625rem; }
      @media (min-width: 48em) {
        .block-more-careers__content p {
          margin-bottom: 1.25rem; } }
    .block-more-careers__content a i {
      font-size: 1.0625rem;
      margin-right: 0.375rem;
      position: relative;
      top: 0.1875rem; }
      @media (min-width: 48em) {
        .block-more-careers__content a i {
          font-size: 1.1875rem;
          margin-right: 1.25rem; } }

.box-grid__one-by-one, .box-grid__one-by-two, .box-grid__two-by-two, .box-grid__two-by-one {
  overflow: hidden; }
  @media (min-width: 48em) {
    .box-grid__one-by-one, .box-grid__one-by-two, .box-grid__two-by-two, .box-grid__two-by-one {
      float: left;
      padding: 0.25rem; } }

@media screen and (max-width: 47.9375em) {
  .box-grid--media-small .box-grid__item:nth-child(1), .box-grid--full-type-1 .box-grid__item:nth-child(2), .box-grid--full-type-2 .box-grid__item:nth-child(1), .box-grid--full-type-3 .box-grid__item:nth-child(1), .box-grid--full-type-4 .box-grid__item:nth-child(1) {
    left: 0.125rem;
    position: absolute;
    top: 0; } }

@media screen and (max-width: 47.9375em) {
  .box-grid--media-small .box-grid__item:nth-child(2), .box-grid--full-type-1 .box-grid__item:nth-child(3), .box-grid--full-type-2 .box-grid__item:nth-child(3), .box-grid--full-type-3 .box-grid__item:nth-child(2), .box-grid--full-type-4 .box-grid__item:nth-child(2) {
    position: absolute;
    right: 0.125rem;
    top: 0; } }

@media screen and (max-width: 47.9375em) {
  .box-grid--media-small .box-grid__item:nth-child(3), .box-grid--full-type-1 .box-grid__item:nth-child(4), .box-grid--full-type-2 .box-grid__item:nth-child(4), .box-grid--full-type-3 .box-grid__item:nth-child(4), .box-grid--full-type-4 .box-grid__item:nth-child(3) {
    bottom: 0;
    left: 0.125rem;
    position: absolute; } }

@media screen and (max-width: 47.9375em) {
  .box-grid--full-type-1 .box-grid__item:nth-child(5), .box-grid--full-type-2 .box-grid__item:nth-child(5), .box-grid--full-type-3 .box-grid__item:nth-child(5), .box-grid--full-type-4 .box-grid__item:nth-child(5), .box-grid--small-type-2 .box-grid__item:nth-child(3), .box-grid--small-type-3 .box-grid__item:nth-child(2) {
    bottom: 0;
    position: absolute;
    right: 0.125rem; } }

@media screen and (max-width: 47.9375em) {
  .box-grid .box-content__title-link, .grid-media-event .box-content__title-link, .box-grid .box-content__date, .grid-media-event .box-content__date, .box-grid .box-content__categories, .grid-media-event .box-content__categories {
    font-size: 0.6875rem;
    line-height: 1rem; }
  .box-grid .box-content__title-link, .grid-media-event .box-content__title-link {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif; }
  .box-grid .box-content__categories, .grid-media-event .box-content__categories {
    margin-bottom: 0.1875rem;
    margin-top: -0.0625rem; }
  .box-grid .box-content__group, .grid-media-event .box-content__group {
    -ms-flex-pack: center;
        justify-content: center;
    padding: 0.4375rem 0.625rem; }
  .box-grid .box-content.title-link-small .box-content__title-link, .grid-media-event .box-content.title-link-small .box-content__title-link {
    font-size: 0.6875rem;
    line-height: 1rem; } }

@media screen and (max-width: 47.9375em) {
  .box-grid__two-by-two .box-content__title-link, .grid-media-event__item:first-child .box-content__title-link {
    font-size: 1.0625rem;
    line-height: 1.25rem; }
  .box-grid__two-by-two .box-content__categories, .grid-media-event__item:first-child .box-content__categories {
    margin-bottom: 0.5625rem; }
  .box-grid__two-by-two .box-content__group, .grid-media-event__item:first-child .box-content__group {
    -ms-flex-pack: end;
        justify-content: flex-end;
    padding: 0.8125rem 0.625rem; } }

.box-grid {
  position: relative; }
  @media (min-width: 48em) {
    .box-grid {
      overflow: hidden;
      width: 45.375rem; } }
  @media (min-width: 73.75em) {
    .box-grid {
      width: 47.25rem; } }
  .box-grid__one-by-one {
    height: 9.875rem;
    width: 9.875rem; }
    @media (min-width: 48em) {
      .box-grid__one-by-one {
        height: 15.125rem;
        width: 15.125rem; } }
    @media (min-width: 73.75em) {
      .box-grid__one-by-one {
        height: 15.75rem;
        width: 15.75rem; } }
  .box-grid__one-by-two {
    height: 9.875rem;
    width: 9.875rem; }
    @media (min-width: 48em) {
      .box-grid__one-by-two {
        height: 30.25rem;
        width: 15.125rem; } }
    @media (min-width: 73.75em) {
      .box-grid__one-by-two {
        height: 31.5rem;
        width: 15.75rem; } }
  .box-grid__two-by-two {
    height: 20rem;
    margin: 10.125rem 0.125rem;
    width: 20rem; }
    @media (min-width: 48em) {
      .box-grid__two-by-two {
        height: 30.25rem;
        margin: 0;
        width: 30.25rem; } }
    @media (min-width: 73.75em) {
      .box-grid__two-by-two {
        height: 31.5rem;
        margin: 0;
        width: 31.5rem; } }
  .box-grid__two-by-one {
    height: 9.875rem;
    width: 9.875rem; }
    @media (min-width: 48em) {
      .box-grid__two-by-one {
        height: 15.125rem;
        width: 30.25rem; } }
    @media (min-width: 73.75em) {
      .box-grid__two-by-one {
        height: 15.75rem;
        width: 31.5rem; } }
  .box-grid--media-small {
    height: 20rem;
    width: 20.25rem; }
    @media (min-width: 48em) {
      .box-grid--media-small {
        height: auto;
        width: 30.25rem; } }
    @media (min-width: 73.75em) {
      .box-grid--media-small {
        width: 31.5rem; } }
    @media screen and (max-width: 47.9375em) {
      .box-grid--media-small .box-grid__one-by-two {
        height: 20rem; } }
    @media screen and (max-width: 47.9375em) {
      .box-grid--media-small .box-grid__two-by-one {
        width: 20rem; } }
    @media screen and (max-width: 47.9375em) {
      .box-grid--media-small .box-grid__two-by-two {
        margin: 0; } }
  @media screen and (max-width: 47.9375em) {
    .box-grid--small-type-2 .box-grid__item:nth-child(3) {
      left: auto; } }
  @media screen and (max-width: 47.9375em) {
    .box-grid--small-type-3 .box-grid__item:nth-child(2) {
      left: auto;
      top: auto; } }

.box-content__group, .box-social {
  -ms-flex-line-pack: start;
      align-content: flex-start;
  -ms-flex-align: stretch;
      align-items: stretch;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column nowrap;
      flex-flow: column nowrap;
  height: 9.875rem;
  -ms-flex-pack: end;
      justify-content: flex-end;
  padding: 0.4375rem 0.9375rem; }
  @media (min-width: 48em) {
    .box-content__group, .box-social {
      height: 14.625rem;
      padding: 1.5625rem 1.875rem; } }
  @media (min-width: 73.75em) {
    .box-content__group, .box-social {
      height: 15.25rem;
      padding: 2.125rem 2.0625rem; } }

.box-content {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  background-color: #000;
  height: 100%;
  overflow: hidden;
  position: relative;
  width: 100%; }
  .box-content__link {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 3; }
  .box-content__image {
    line-height: 0;
    position: relative; }
    .box-content__image:before {
      background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0) 0%, rgba(0, 0, 0, 0.9) 100%);
      bottom: 0;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      width: 100%;
      z-index: 1; }
    .box-content__image img {
      transition: opacity .3s ease-in;
      width: 100%; }
  .box-content__date {
    color: #fff;
    display: block;
    font-size: 0.75rem;
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .box-content__date {
        margin-bottom: 0.125rem; } }
  .box-content__categories {
    font-size: 0.75rem;
    margin-bottom: 0.8125rem;
    text-transform: uppercase; }
    .box-content__categories.red a {
      color: #f00; }
      .box-content__categories.red a:hover {
        color: #cc0000; }
    .box-content__categories.yellow a {
      color: #c6d92d; }
      .box-content__categories.yellow a:hover {
        color: #0093da; }
    .box-content__categories.yellow-ff a {
      color: #ffea00; }
      .box-content__categories.yellow-ff a:hover {
        color: #0093da; }
    .box-content__categories.green a {
      color: #5cc151; }
      .box-content__categories.green a:hover {
        color: #0093da; }
  .box-content__title-link {
    font-family: 'gotham-book', Helvetica, Arial, sans-serif;
    font-size: 1.5625rem;
    font-weight: 400;
    line-height: 1.875rem;
    margin-bottom: 0;
    text-transform: capitalize; }
    @media (min-width: 73.75em) {
      .box-content__title-link {
        font-family: 'gotham-bold', Helvetica, Arial, sans-serif; } }
    .box-content__title-link a {
      color: #fff; }
      .box-content__title-link a:hover {
        color: #0093da; }
  .box-content--has-image .box-content__group {
    bottom: 0rem;
    left: 0rem;
    position: absolute;
    right: 0rem;
    z-index: 2; }
  .box-content--has-image:hover .box-content__image img, .box-content--has-image:focus .box-content__image img {
    opacity: .7; }
  .box-content.content-center .box-content__group {
    -ms-flex-pack: center;
        justify-content: center; }
  .box-content.title-link-small .box-content__title-link {
    font-size: 0.9375rem;
    line-height: 1.25rem; }

.box-social {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  color: #fff;
  -ms-flex-pack: center;
      justify-content: center;
  position: relative;
  padding-top: 0; }
  .box-social__date {
    color: #92a0be;
    font-size: 0.6875rem;
    margin-bottom: 0.5rem; }
    @media (min-width: 48em) {
      .box-social__date {
        margin-bottom: 0.8125rem; } }
    .box-social__date:before {
      bottom: -0.125rem;
      color: #fff;
      font-size: 1.125rem;
      margin-right: 0.4375rem;
      position: relative; }
      @media (min-width: 48em) {
        .box-social__date:before {
          font-size: 1.25rem; } }
  .box-social__body {
    font-size: 0.6875rem;
    line-height: 1rem;
    margin-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .box-social__body {
        font-size: 0.9375rem;
        line-height: 1.125rem;
        margin-bottom: 0.8125rem; } }
    .box-social__body p {
      margin-bottom: 0; }
  @media screen and (max-width: 47.9375em) {
    .box-social__group {
      padding: 0.4375rem 0.625rem; } }
  .box-social__link {
    font-size: 0.625rem; }
    @media (min-width: 48em) {
      .box-social__link {
        font-size: 0.8125rem; } }
  .box-social__link-main {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 3; }
  .box-social--facebook {
    background: #3b5998; }
  .box-social--twitter {
    background: #6dc4e1; }
    .box-social--twitter .box-social__date {
      color: #c0ecfb; }

.block-stream {
  background: #fff;
  overflow: hidden;
  padding-top: 2rem;
  width: 100%; }
  @media (min-width: 48em) {
    .block-stream {
      padding-top: 4.75rem; } }
  @media (min-width: 73.75em) {
    .block-stream {
      padding-top: 6.375rem; } }
  @media (min-width: 48em) {
    .block-stream .section-description {
      margin-bottom: 2.3125rem; } }
  @media (min-width: 73.75em) {
    .block-stream .section-description {
      margin-bottom: 3.625rem; } }
  .block-stream__carousel {
    margin: 0;
    position: relative; }
    @media (min-width: 48em) {
      .block-stream__carousel .slick-list {
        overflow: inherit; } }
    @media (min-width: 73.75em) {
      .block-stream__carousel .slick-list {
        left: 15.625rem; } }
    @media screen and (max-width: 47.9375em) {
      .block-stream__carousel .slick-arrow {
        display: none !important; } }
    .block-stream__carousel .box-social:hover .box-social__link-main {
      background: rgba(0, 0, 0, 0.2); }
    .block-stream__carousel .box-social:hover:after {
      opacity: 0; }
  @media (min-width: 73.75em) {
    .block-stream--media-small .block-stream__carousel .slick-list {
      left: 10rem; } }

.block-warning {
  padding: 2.8125rem 0rem; }
  @media (min-width: 48em) {
    .block-warning {
      padding: 4.6875rem 0rem; } }
  @media (min-width: 73.75em) {
    .block-warning {
      padding-bottom: 3.9375rem; } }
  .block-warning__content {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    background-image: url("../images/warning.svg");
    background-position: 0 50%;
    background-repeat: no-repeat;
    background-size: 1.75rem 1.625rem;
    color: #2f3436;
    font-size: 0.75rem;
    line-height: 0.9375rem;
    padding-left: 2.5rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-warning__content {
        background-position: 3.6875rem 50%;
        background-size: 5rem 4.875rem;
        min-height: 5rem;
        font-size: 1rem;
        line-height: 1.25rem;
        padding: 0rem 0rem 0rem 13.4375rem; } }
    @media (min-width: 73.75em) {
      .block-warning__content {
        background-position: 0 50%;
        padding: 0rem 0rem 0rem 9.75rem; } }
    .block-warning__content h3 {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      color: #d6083b;
      font-size: 0.9375rem;
      margin-bottom: 0.3125rem;
      text-transform: uppercase; }
      @media (min-width: 48em) {
        .block-warning__content h3 {
          font-size: 1.125rem;
          margin-bottom: 0.625rem; } }
    .block-warning__content p {
      margin-bottom: 0; }

.tab-filter {
  border-bottom: 0.0625rem solid #e4e5e6;
  margin-bottom: 1.5rem;
  position: relative; }
  @media (min-width: 48em) {
    .tab-filter {
      margin-bottom: 3.125rem; } }
  @media (min-width: 73.75em) {
    .tab-filter {
      margin-bottom: 2.4375rem; } }
  .tab-filter li {
    display: inline-block;
    margin-bottom: 0.375rem;
    margin-right: 0.6875rem; }
    @media (min-width: 48em) {
      .tab-filter li {
        margin-bottom: 0; } }
    .tab-filter li:last-of-type {
      margin-right: 0; }
    .tab-filter li a {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      color: #585d62;
      display: block;
      font-size: 0.9375rem;
      padding: 0.6875rem 0rem;
      text-decoration: none; }
      @media (min-width: 48em) {
        .tab-filter li a {
          border-bottom: 0.1875rem solid transparent;
          font-size: 0.8125rem;
          padding: 0.6875rem 0.8125rem; } }
      .tab-filter li a:hover, .tab-filter li a.is-active {
        color: #d6083b; }
        @media (min-width: 48em) {
          .tab-filter li a:hover, .tab-filter li a.is-active {
            border-color: #e4e5e6; } }
  .tab-filter__wrap {
    padding-top: 3.75rem;
    position: relative; }
    @media (min-width: 48em) {
      .tab-filter__wrap {
        padding-top: 2.25rem;
        -ms-flex-align: end;
            align-items: flex-end;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: justify;
            justify-content: space-between; } }
    @media (min-width: 73.75em) {
      .tab-filter__wrap {
        bottom: 0;
        -ms-flex-pack: end;
            justify-content: flex-end;
        padding: 0;
        position: absolute;
        right: 0;
        width: 66.10169%; } }
  @media screen and (max-width: 47.9375em) {
    .tab-filter__nav {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  .tab-filter__title {
    font-size: 1.5625rem;
    margin: 0rem 0rem 0.625rem 0rem;
    text-align: center; }
    @media (min-width: 48em) {
      .tab-filter__title {
        margin-bottom: 0.1875rem;
        font-size: 2.5rem; } }
    @media (min-width: 73.75em) {
      .tab-filter__title {
        width: 32.20339%;
        text-align: left; } }
  .tab-filter__form {
    display: -ms-flexbox;
    display: flex; }
    @media screen and (max-width: 47.9375em) {
      .tab-filter__form {
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0; } }
    .tab-filter__form__item {
      width: 100%; }
      @media (min-width: 48em) {
        .tab-filter__form__item {
          -ms-flex-align: center;
              align-items: center;
          display: -ms-flexbox;
          display: flex;
          -ms-flex-pack: end;
              justify-content: flex-end;
          width: auto; } }
      @media (min-width: 73.75em) {
        .tab-filter__form__item {
          margin-left: 3.625rem; } }
    .tab-filter__form label {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      font-size: 0.8125rem;
      font-weight: normal;
      margin: 0; }
      @media screen and (max-width: 47.9375em) {
        .tab-filter__form label {
          display: none; } }
    .tab-filter__form .chosen-single {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      background: none;
      border: 0;
      color: #d6083b;
      font-size: 0.8125rem;
      padding: 0.8125rem 0.9375rem 0.8125rem 0.625rem; }
      .tab-filter__form .chosen-single div {
        width: inherit; }
      .tab-filter__form .chosen-single b {
        color: #d6083b;
        padding-top: 0.75rem; }
  @media (min-width: 73.75em) {
    .tab-filter--has-select {
      -ms-flex-align: end;
          align-items: flex-end;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  .tab-filter--has-select .tab-filter__nav {
    position: relative; }
  @media screen and (max-width: 47.9375em) {
    .tab-filter--more-select .tab-filter__wrap {
      padding-top: 0; } }
  @media screen and (max-width: 47.9375em) {
    .tab-filter--more-select .tab-filter__form {
      position: relative; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .tab-filter--more-select .tab-filter__form {
      width: 100%;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  @media screen and (max-width: 47.9375em) {
    .tab-filter--more-select .tab-filter__form__item {
      margin-bottom: 0.625rem; } }

.js-tabs__content__item {
  display: none; }

.block-brochures-filter {
  padding-top: 1.8125rem;
  padding-bottom: 1.25rem; }
  @media (min-width: 48em) {
    .block-brochures-filter {
      padding-top: 2.375rem;
      padding-bottom: 0; } }
  @media (min-width: 73.75em) {
    .block-brochures-filter {
      padding-top: 3.8125rem; } }
  .block-brochures-filter .tab-filter {
    border: 0;
    margin-bottom: 1.5rem; }
    @media (min-width: 48em) {
      .block-brochures-filter .tab-filter {
        border-bottom: 0.0625rem solid #e4e5e6;
        margin-bottom: 2.4375rem; } }
    .block-brochures-filter .tab-filter__title {
      text-align: left; }
    .block-brochures-filter .tab-filter__wrap {
      display: none; }
      @media (min-width: 73.75em) {
        .block-brochures-filter .tab-filter__wrap {
          display: -ms-flexbox;
          display: flex; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-brochures-filter__content {
      margin: 0rem -0.1875rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-brochures-filter__item {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      margin-bottom: 0.5625rem; } }
  @media (min-width: 48em) {
    .block-brochures-filter__item {
      width: 20.1087%;
      float: left;
      margin-right: 2.71739%;
      margin-right: 6.5%;
      margin-bottom: 4.625rem; }
      .block-brochures-filter__item:nth-child(4n) {
        margin-right: 0; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-brochures-filter__item:nth-child(4n +1) {
      clear: both; } }
  @media (min-width: 73.75em) {
    .block-brochures-filter__item {
      width: 15.25424%;
      float: left;
      margin-bottom: 4.625rem; }
      .block-brochures-filter__item:nth-child(6n + 1) {
        margin-left: 0;
        margin-right: -100%;
        clear: both;
        margin-left: 0; }
      .block-brochures-filter__item:nth-child(6n + 2) {
        margin-left: 16.94915%;
        margin-right: -100%;
        clear: none; }
      .block-brochures-filter__item:nth-child(6n + 3) {
        margin-left: 33.89831%;
        margin-right: -100%;
        clear: none; }
      .block-brochures-filter__item:nth-child(6n + 4) {
        margin-left: 50.84746%;
        margin-right: -100%;
        clear: none; }
      .block-brochures-filter__item:nth-child(6n + 5) {
        margin-left: 67.79661%;
        margin-right: -100%;
        clear: none; }
      .block-brochures-filter__item:nth-child(6n + 6) {
        margin-left: 84.74576%;
        margin-right: -100%;
        clear: none; } }
  @media screen and (max-width: 47.9375em) {
    .block-brochures-filter__image {
      width: 21.40411%;
      float: left;
      margin-right: 4.79452%; } }
  @media (min-width: 48em) {
    .block-brochures-filter__image {
      margin-bottom: 1.1875rem;
      text-align: center; } }
  .block-brochures-filter__title {
    line-height: 1.25rem; }
    @media screen and (max-width: 47.9375em) {
      .block-brochures-filter__title {
        font-size: 0.9375rem;
        font-weight: bold;
        line-height: 1.125rem; } }
    .block-brochures-filter__title a {
      color: #585d62; }
      .block-brochures-filter__title a:hover {
        color: #00aeef; }

.tabs-header {
  border-bottom: 0.0625rem solid #0082c0;
  margin-bottom: 1.875rem;
  padding-left: 0; }
  @media (min-width: 48em) {
    .tabs-header {
      margin-bottom: 2.75rem; } }
  .tabs-header li {
    display: inline-block;
    margin-bottom: 0;
    margin-right: 1.25rem; }
  .tabs-header a {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    border-bottom: 0.25rem solid transparent;
    color: #474b4f;
    display: block;
    font-size: 0.9375rem;
    padding: 1.1875rem 1.4375rem;
    text-decoration: none;
    text-transform: uppercase; }
    .tabs-header a:hover, .tabs-header a.is-active {
      border-color: #0082c0;
      color: #0082c0; }

.block-tabs {
  margin-bottom: 1.75rem;
  margin-top: 2.1875rem; }
  @media (min-width: 48em) {
    .block-tabs {
      margin-top: 1.75rem;
      margin-bottom: 2.75rem; } }
  @media (min-width: 73.75em) {
    .block-tabs {
      margin-top: 5rem;
      margin-bottom: 7.5625rem; } }
  @media (min-width: 48em) {
    .block-tabs__inner-wrapper {
      padding-left: 11.41304%;
      padding-right: 11.41304%; } }
  @media (min-width: 73.75em) {
    .block-tabs__inner-wrapper {
      padding-left: 16.94915%;
      padding-right: 16.94915%; } }
  .block-tabs .form-type-select, .block-tabs .block-event .tab-filter, .block-event .block-tabs .tab-filter {
    margin-bottom: 1.9375rem; }
  @media (min-width: 48em) {
    .block-abx-product .block-tabs .block-drivers p {
      width: 32.30088%;
      float: left;
      margin-right: 1.54867%; } }
  .block-abx-product .block-tabs .block-drivers p:nth-child(3n) {
    margin-right: 0; }
  .block-abx-product .block-tabs .block-drivers p a {
    width: 15.625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-abx-product .block-tabs .block-drivers p a {
        display: block;
        margin: auto; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-abx-product .block-tabs .block-drivers p a {
        width: 11.25rem; } }

.block-support span {
  display: block;
  margin-bottom: 1.25rem; }

.block-news-list {
  padding-top: 0.9375rem; }
  @media (min-width: 48em) {
    .block-news-list {
      padding-top: 3.6875rem;
      padding-left: 11.41304%;
      padding-right: 11.41304%; } }
  @media (min-width: 73.75em) {
    .block-news-list {
      padding: 6.9375rem 0rem 0rem 0rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-news-list .tab-filter__form {
      margin-bottom: 0.1875rem; } }
  .block-news-list__contents__item {
    -ms-flex-align: center;
        align-items: center;
    border-bottom: 1px solid #e4e5e6;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 1.5rem;
    padding-bottom: 0.3125rem; }
    @media (min-width: 48em) {
      .block-news-list__contents__item {
        border: none;
        margin-bottom: 0.8125rem;
        padding-top: 0; } }
    .block-news-list__contents__item:last-of-type {
      margin-bottom: 0;
      border: 0; }
  @media screen and (max-width: 47.9375em) {
    .block-news-list__image {
      display: none; } }
  @media (min-width: 48em) {
    .block-news-list__image {
      width: 26.65388%;
      margin-right: 6.52174%; } }
  @media (min-width: 73.75em) {
    .block-news-list__image {
      width: 15.25424%;
      margin-right: 3.6875rem; } }
  .block-news-list__image img {
    height: auto;
    width: 100%; }
  @media (min-width: 48em) {
    .block-news-list__group {
      width: 70.66155%; } }
  @media (min-width: 73.75em) {
    .block-news-list__group {
      width: 57.62712%;
      padding-top: 0.5rem;
      padding-right: 3.125rem; } }
  .block-news-list__meta {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    display: -ms-flexbox;
    display: flex;
    font-size: 0.8125rem;
    margin-right: 0.625rem;
    margin-bottom: 0.375rem; }
    .block-news-list__meta time {
      margin-right: 1.125rem; }
    .block-news-list__meta a {
      text-transform: uppercase;
      color: #abaeb0; }
      .block-news-list__meta a:hover {
        color: #0082c0; }
  .block-news-list__title {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    font-size: 0.875rem;
    line-height: 1.125rem; }
    @media (min-width: 48em) {
      .block-news-list__title {
        font-size: 1.125rem;
        line-height: 1.5625rem;
        margin-bottom: 0; } }
  .block-news-list--corporate {
    padding-bottom: 1.75rem;
    padding-top: 1.875rem; }
    @media (min-width: 48em) {
      .block-news-list--corporate {
        padding-bottom: 3.75rem;
        padding-top: 3.6875rem; } }
    @media (min-width: 73.75em) {
      .block-news-list--corporate {
        padding-bottom: 6.5625rem;
        padding-top: 4.9375rem; } }
  @media (min-width: 48em) {
    .block-news-list .more-info {
      margin-top: 2.375rem; } }
  @media (min-width: 73.75em) {
    .block-news-list .more-info {
      margin-top: 1.25rem; } }

.block-accordion {
  margin-top: -0.3125rem; }
  @media (min-width: 48em) {
    .block-accordion {
      border-bottom: 1px solid #eaeff2;
      margin-bottom: 1.875rem;
      margin-top: 0.4375rem;
      padding-bottom: 3rem; } }
  @media (min-width: 60em) {
    .block-accordion {
      padding-left: 7.98913%;
      padding-right: 7.98913%; } }
  @media (min-width: 73.75em) {
    .block-accordion {
      padding: 0;
      margin-bottom: 0;
      border: 0; } }
  .block-accordion__header {
    font-family: 'gotham-light', Helvetica, Arial, sans-serif;
    display: block;
    font-size: 1.25rem;
    margin-bottom: 0.9375rem;
    padding: 0rem 1.875rem 0.625rem 0.4375rem;
    position: relative;
    border-bottom: 1px solid #eaeff2; }
    @media (min-width: 48em) {
      .block-accordion__header {
        padding: 0rem 1.875rem 1.1875rem 0rem;
        margin-bottom: 1.375rem; } }
    .block-accordion__header:before {
      color: #585d62;
      font-size: 1.375rem;
      font-weight: bold;
      margin-top: -0.9375rem;
      position: absolute;
      right: 0.625rem;
      top: 50%; }
      @media (min-width: 48em) {
        .block-accordion__header:before {
          font-size: 0.8125rem;
          right: 0.875rem; } }
      @media (min-width: 73.75em) {
        .block-accordion__header:before {
          right: 0; } }
  .block-accordion__content {
    visibility: hidden;
    margin-bottom: 0.9375rem;
    padding-bottom: 4.375rem;
    transition: all .2s;
    display: none;
    border-bottom: 1px solid #eaeff2; }
    @media (min-width: 48em) {
      .block-accordion__content {
        margin-bottom: 1.375rem; } }
    .block-accordion__content > div {
      padding: 0; }
  .block-accordion__item.is-active .block-accordion__header {
    padding: 0rem 1.875rem 0.4375rem 0.4375rem;
    margin-bottom: 1.4375rem; }
    @media (min-width: 48em) {
      .block-accordion__item.is-active .block-accordion__header {
        padding: 0rem 0rem 1.375rem 0rem;
        margin-bottom: 1.875rem; } }
  .block-accordion__item.is-active .block-accordion__content {
    display: block;
    visibility: visible; }
  .block-accordion__item:last-of-type .block-accordion__content {
    border: 0;
    padding-bottom: 0; }

.pager {
  border-top: 0.0625rem solid #e4e5e6;
  font-size: 0.9375rem;
  margin-bottom: 1.5625rem;
  margin-top: 0.3125rem;
  padding-top: 0.75rem; }
  @media (min-width: 48em) {
    .pager {
      font-size: 1.125rem;
      margin-bottom: 3.6875rem;
      margin-top: 3.9375rem;
      padding-top: 2.375rem; } }
  @media (min-width: 73.75em) {
    .pager {
      margin-bottom: 5.6875rem; } }
  .pager a {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    color: #808080;
    cursor: pointer;
    transition: .3s; }
    @media (min-width: 48em) {
      .pager a {
        -ms-flex-align: center;
            align-items: center;
        border: 1px solid #d2e9f4;
        border-radius: 100%;
        display: -ms-flexbox;
        display: flex;
        font-size: 0.9375rem;
        height: 2.375rem;
        -ms-flex-pack: center;
            justify-content: center;
        width: 2.375rem; } }
    @media screen and (max-width: 47.9375em) {
      .pager a {
        text-transform: uppercase; }
        .pager a i {
          font-size: 1.875rem;
          position: relative;
          top: 0.375rem; } }
    .pager a:hover {
      color: #0082c0;
      transition: .3s; }
      @media (min-width: 48em) {
        .pager a:hover {
          background-color: #00aeef;
          border-color: #00aeef;
          color: #fff; } }
  .pager__items {
    list-style: none;
    position: relative;
    padding-left: 0; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .pager__items {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: center;
            justify-content: center; } }
  .pager__item {
    float: left;
    margin-right: 0.75rem; }
    @media screen and (max-width: 47.9375em) {
      .pager__item {
        visibility: hidden; }
        .pager__item--previous, .pager__item--next {
          visibility: visible; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .pager__item {
        margin-right: 1.875rem; } }
    @media (min-width: 48em) {
      .pager__item--previous, .pager__item--next {
        text-indent: -624.9375rem; }
        .pager__item--previous a, .pager__item--next a {
          border: 0;
          font-size: 0; }
        .pager__item--previous i, .pager__item--next i {
          text-indent: 0; } }
    @media screen and (max-width: 73.6875em) {
      .pager__item--previous, .pager__item--next {
        position: absolute; } }
    .pager__item--previous {
      left: 0; }
      @media screen and (max-width: 47.9375em) {
        .pager__item--previous i {
          margin-right: 0.625rem; } }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .pager__item--previous {
          left: -0.9375rem; } }
    .pager__item--next {
      right: 0;
      margin: 0; }
      @media screen and (max-width: 47.9375em) {
        .pager__item--next i {
          margin-left: 0.625rem; } }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .pager__item--next {
          right: -0.9375rem; } }
    .pager__item i {
      font-size: 1.375rem;
      line-height: 0; }
    .pager__item.is-active a {
      background-color: #00aeef;
      border-color: #00aeef;
      color: #fff; }

.block-links {
  padding-bottom: 2.1875rem;
  padding-top: 1.8125rem; }
  @media (min-width: 48em) {
    .block-links {
      padding-bottom: 4.25rem;
      padding-top: 5.625rem; } }
  @media (min-width: 73.75em) {
    .block-links {
      padding: 5.625rem 0rem 4.25rem; } }
  .block-links__list {
    list-style: none;
    margin-bottom: 2.125rem; }
    @media (min-width: 48em) {
      .block-links__list {
        margin-bottom: 0; } }
    .block-links__list li {
      border: 1px solid transparent;
      margin-bottom: 0.9375rem; }
      @media (min-width: 48em) {
        .block-links__list li {
          width: 49.15254%;
          float: left;
          margin-bottom: 0.4375rem;
          transition: .5s; }
          .block-links__list li:nth-child(2n + 1) {
            margin-left: 0;
            margin-right: -100%;
            clear: both;
            margin-left: 0; }
          .block-links__list li:nth-child(2n + 2) {
            margin-left: 50.84746%;
            margin-right: -100%;
            clear: none; } }
      @media (min-width: 73.75em) {
        .block-links__list li {
          width: 32.20339%;
          float: left; }
          .block-links__list li:nth-child(3n + 1) {
            margin-left: 0;
            margin-right: -100%;
            clear: both;
            margin-left: 0; }
          .block-links__list li:nth-child(3n + 2) {
            margin-left: 33.89831%;
            margin-right: -100%;
            clear: none; }
          .block-links__list li:nth-child(3n + 3) {
            margin-left: 67.79661%;
            margin-right: -100%;
            clear: none; } }
      .block-links__list li:hover {
        border: 1px solid #56d1ff; }
    .block-links__list a {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-direction: column;
          flex-direction: column; }
    .block-links__list .inner {
      background-color: #fbfcfc;
      display: -ms-flexbox;
      display: flex;
      font-size: 0.875rem;
      min-height: 3.75rem; }
      @media (min-width: 48em) {
        .block-links__list .inner {
          min-height: 4.375rem; } }
      .block-links__list .inner .files, .block-links__list .inner .block-vetcom__left a .files-pdf, .block-vetcom__left a .block-links__list .inner .files-pdf {
        min-height: 1.8125rem;
        padding-left: 3.8125rem;
        width: 1.75rem; }
        @media (min-width: 48em) {
          .block-links__list .inner .files, .block-links__list .inner .block-vetcom__left a .files-pdf, .block-vetcom__left a .block-links__list .inner .files-pdf {
            padding-left: 4.9375rem; } }
      .block-links__list .inner .text {
        -ms-flex-align: center;
            align-items: center;
        background-color: #fff;
        display: -ms-flexbox;
        display: flex;
        font-size: 0.75rem;
        line-height: 0.9375rem;
        padding-left: 0.625rem;
        padding-right: 0.3125rem;
        width: 100%; }
        @media (min-width: 48em) {
          .block-links__list .inner .text {
            font-size: 14px;
            line-height: 1.25rem;
            padding-left: 1.25rem; } }
  .block-links .view-more {
    text-align: center; }
    @media (min-width: 48em) {
      .block-links .view-more {
        display: none; } }
  .block-links--large-height {
    -ms-flex-pack: center;
        justify-content: center; }
    .block-links--large-height .block-links__list .inner {
      min-height: 3.625rem; }
      @media (min-width: 48em) {
        .block-links--large-height .block-links__list .inner {
          min-height: 5.6875rem; } }
      @media (min-width: 73.75em) {
        .block-links--large-height .block-links__list .inner {
          min-height: 5.5rem; } }
  .block-links--bg-gray .block-links__list a {
    background-color: #f8f8f8; }
  .block-links--bg-gray .block-links__list .text {
    background-color: #fbfcfc; }
  .block-links--event-single {
    padding-top: 1.875rem;
    padding-bottom: 0.1875rem; }
    @media (min-width: 48em) {
      .block-links--event-single {
        padding-top: 3.6875rem; } }
    @media (min-width: 73.75em) {
      .block-links--event-single {
        padding-top: 5.0625rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-links--event-single .block-links__list li {
        width: 31.52174%;
        float: left;
        margin-right: 2.71739%;
        clear: none; }
        .block-links--event-single .block-links__list li:nth-child(3) {
          float: right;
          margin-right: 0; }
        .block-links--event-single .block-links__list li:nth-child(2n + 2) {
          margin-left: 0; } }

.block-subscribe {
  background-color: #0082c0;
  color: #fff;
  padding: 7.125rem 0.875rem 1.75rem 0.875rem;
  text-align: center; }
  @media (min-width: 48em) {
    .block-subscribe {
      padding: 10.25rem 0.625rem 5.375rem 0.625rem; } }
  @media (min-width: 73.75em) {
    .block-subscribe {
      padding: 10.25rem 0.625rem 4.1875rem 0.625rem; } }
  .block-subscribe__form {
    position: relative; }
    @media (min-width: 48em) {
      .block-subscribe__form {
        display: inline-block; } }
    @media (min-width: 80em) {
      .block-subscribe__form {
        max-width: 49.15254%; } }
    .block-subscribe__form:before {
      background: url("../images/vetcom.svg") no-repeat scroll 0 0;
      content: '';
      height: 5.3125rem;
      left: 50%;
      margin-left: -2.75rem;
      position: absolute;
      top: -5.25rem;
      width: 5.5625rem; }
      @media (min-width: 48em) {
        .block-subscribe__form:before {
          width: 7.875rem;
          margin-left: -3.9375rem;
          top: -6.5625rem; } }
      @media (min-width: 73.75em) {
        .block-subscribe__form:before {
          width: 8.75rem;
          margin-left: -4.375rem;
          top: -6.9375rem; } }
    .block-subscribe__form__inner {
      margin-bottom: 1.4375rem; }
    .block-subscribe__form .form-submit,
    .block-subscribe__form .form-text {
      height: 3.25rem;
      width: 100%; }
      @media (min-width: 48em) {
        .block-subscribe__form .form-submit,
        .block-subscribe__form .form-text {
          height: 2.75rem;
          width: auto; } }
    .block-subscribe__form .form-text {
      color: #808080;
      margin-bottom: 0; }
      @media (min-width: 48em) {
        .block-subscribe__form .form-text {
          float: left;
          min-width: 28.875rem; } }
    .block-subscribe__form .form-submit {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      float: left;
      font-size: 0.9375rem;
      padding: 0.625rem 1.25rem; }
      @media (min-width: 48em) {
        .block-subscribe__form .form-submit {
          padding: 0.625rem 2.9375rem; } }
    .block-subscribe__form ::-webkit-input-placeholder {
      color: #808080; }
    .block-subscribe__form ::-moz-placeholder {
      color: #808080; }
    .block-subscribe__form :-ms-input-placeholder {
      color: #808080; }
  .block-subscribe .suffix {
    font-size: 0.9375rem; }
    @media screen and (max-width: 47.9375em) {
      .block-subscribe .suffix {
        font-weight: bold;
        line-height: 1.125rem;
        padding: 0rem 1.25rem; } }

.block-product {
  padding-bottom: 1.8125rem;
  padding-top: 1.9375rem; }
  @media (min-width: 48em) {
    .block-product {
      padding-bottom: 3.125rem;
      padding-top: 4.25rem; } }
  @media (min-width: 73.75em) {
    .block-product {
      margin-bottom: 6.25rem;
      padding-bottom: 6.625rem;
      padding-top: 8.75rem; } }
  .block-product .section-title {
    margin-bottom: 1.3125rem; }
  .block-product .section-description {
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .block-product .section-description {
        padding: 0rem 4.0625rem;
        margin-bottom: 1.5rem; } }
    @media (min-width: 73.75em) {
      .block-product .section-description {
        margin-bottom: 2.3125rem;
        padding-left: 16.94915%;
        padding-right: 16.94915%; } }
  .block-product__logo {
    line-height: 0;
    margin: -1.1875rem 0rem 0.8125rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-product__logo {
        margin: -2.5rem 0rem 1.25rem; } }
    .block-product__logo img {
      height: auto;
      width: 5rem; }
      @media (min-width: 48em) {
        .block-product__logo img {
          width: 10rem; } }
  .block-product__body {
    font-size: 0.9375rem;
    line-height: 1.25rem;
    padding: 0rem 0.625rem;
    position: relative;
    text-align: center;
    z-index: 2; }
    @media (min-width: 48em) {
      .block-product__body {
        padding: 0rem 2.4375rem;
        -ms-flex-line-pack: center;
            align-content: center;
        -ms-flex-flow: column nowrap;
            flex-flow: column nowrap;
        -ms-flex-pack: center;
            justify-content: center;
        height: 12.5rem;
        line-height: 1.5625rem;
        -ms-flex-align: stretch;
            align-items: stretch;
        display: -ms-flexbox;
        display: flex; } }
    @media (min-width: 60em) {
      .block-product__body {
        height: 9.25rem; } }
  .block-product__link {
    background: #f8f8f8;
    padding: 1.25rem 0.625rem;
    text-align: right;
    margin-top: -5.9375rem; }
    @media (min-width: 48em) {
      .block-product__link {
        padding: 2.5rem 0.625rem 2.5rem 0.625rem;
        margin-top: -11.125rem; } }
    @media (min-width: 60em) {
      .block-product__link {
        padding: 2.5rem 2.1875rem 2.375rem 0.625rem; } }
    @media (min-width: 73.75em) {
      .block-product__link {
        margin-top: -11.6875rem;
        padding: 2.5rem 2.75rem 2.375rem 0.625rem; } }
    .block-product__link a {
      position: relative;
      z-index: 2; }
  .block-product__image {
    width: 6.25rem; }
    @media (min-width: 48em) {
      .block-product__image {
        min-height: 14.75rem;
        margin-bottom: 1.25rem;
        margin-top: -1.0625rem;
        text-align: center;
        width: 53%; } }
  .block-product__content {
    background: #fff;
    width: 100%; }
    @media (min-width: 48em) {
      .block-product__content {
        max-width: 23.75rem; } }
  @media (min-width: 48em) {
    .block-product__grid-2col {
      padding: 0 8.69565%; } }
  @media (min-width: 73.75em) {
    .block-product__grid-2col {
      padding: 0 12.3%; } }
  .block-product__grid-2col__item {
    float: left;
    margin-bottom: -0.3125rem;
    margin-top: 3.0625rem; }
    @media (min-width: 48em) {
      .block-product__grid-2col__item {
        margin-bottom: 3.3125rem;
        margin-top: 4.75rem;
        width: 47.5%; } }
    @media (min-width: 73.75em) {
      .block-product__grid-2col__item {
        margin-bottom: 4.5625rem;
        width: 50%; } }
    .block-product__grid-2col__item:nth-child(2n + 2) {
      float: right; }
    .block-product__grid-2col__item:nth-child(2n + 1) {
      clear: both; }
  .block-product__grid-3col {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: center;
        justify-content: center; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-product__grid-3col {
        padding-left: 7.98913%;
        padding-right: 7.98913%; } }
    .block-product__grid-3col__item {
      margin-bottom: 2.8125rem; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-product__grid-3col__item:nth-child(2n) {
          float: right;
          margin-right: 0; } }
      @media (min-width: 48em) {
        .block-product__grid-3col__item {
          width: 46.45733%;
          float: left;
          margin-right: 2.68456%;
          margin-bottom: 4.125rem;
          margin-right: 5.5%;
          margin-top: 4rem; } }
      @media (min-width: 73.75em) {
        .block-product__grid-3col__item {
          width: 32.11864%;
          float: left;
          margin-right: 1.69492%;
          margin-bottom: 4.125rem;
          margin-top: 4rem; }
          .block-product__grid-3col__item:last-child, .block-product__grid-3col__item:nth-child(3n) {
            float: right;
            margin-right: 0; } }
  .block-product--veterinary {
    margin-bottom: 0;
    padding-bottom: 0;
    padding-top: 1.5625rem; }
    @media (min-width: 48em) {
      .block-product--veterinary {
        padding-bottom: 2.375rem;
        padding-top: 4.25rem; } }
    @media (min-width: 73.75em) {
      .block-product--veterinary {
        padding-bottom: 4.625rem;
        padding-top: 8.125rem; } }
    .block-product--veterinary .section-title {
      margin-bottom: 0.625rem; }
    .block-product--veterinary .section-description {
      margin-bottom: 3.125rem; }
      @media (min-width: 48em) {
        .block-product--veterinary .section-description {
          margin-bottom: 2.25rem; } }
      @media (min-width: 73.75em) {
        .block-product--veterinary .section-description {
          margin-bottom: 3.75rem; } }
    @media (min-width: 60em) {
      .block-product--veterinary .block-product__link {
        margin-top: -11rem;
        padding-right: 2rem; } }
    @media (min-width: 73.75em) {
      .block-product--veterinary .block-product__link {
        margin-top: -11.6875rem;
        padding-right: 2.75rem; } }

.block-video_hero {
  margin-bottom: 0.1875rem; }
  @media (min-width: 48em) {
    .block-video_hero {
      margin-bottom: 0; } }
  .block-video_hero .vidyard-video {
    padding-bottom: 0; }
    .block-video_hero .vidyard-video .vidyard_player > span {
      position: relative !important;
      height: 18.75rem !important;
      width: 100% !important;
      transform: translate(-50%, 0px);
      min-width: 64.3125rem;
      left: 50%; }
      @media (min-width: 48em) {
        .block-video_hero .vidyard-video .vidyard_player > span {
          min-height: 25rem;
          min-width: 85.75rem; } }
      @media (min-width: 73.75em) {
        .block-video_hero .vidyard-video .vidyard_player > span {
          min-height: 35rem;
          min-width: 120.0625rem; } }
  .block-video_hero .vidyard-banner {
    position: relative;
    overflow: hidden; }
    .block-video_hero .vidyard-banner:before {
      background-color: rgba(0, 0, 0, 0.2);
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: 2; }

.vidyard-video {
  height: auto;
  padding-bottom: 56.25%;
  position: relative; }
  .vidyard-video .vidyard_player > span {
    position: static !important;
    height: auto !important;
    width: auto !important; }

@media (min-width: 73.75em) {
  .vidyard-banner {
    height: 35rem;
    padding-bottom: 0; } }

.vidyard-banner:before {
  background-color: rgba(0, 0, 0, 0.7);
  content: '';
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
  z-index: 2; }

.vidyard-banner .overlay-text {
  color: #fff;
  left: 50%;
  position: absolute;
  text-align: center;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 90%;
  z-index: 3; }
  @media (min-width: 48em) {
    .vidyard-banner .overlay-text {
      width: 70%; } }
  .vidyard-banner .overlay-text h2 {
    font-size: 1.25rem;
    margin-bottom: 0.3125rem; }
    @media (min-width: 48em) {
      .vidyard-banner .overlay-text h2 {
        font-size: 2.5rem;
        line-height: 2.8125rem;
        margin-bottom: 0.9375rem; } }
    @media (min-width: 73.75em) {
      .vidyard-banner .overlay-text h2 {
        font-size: 3.75rem;
        line-height: 4.0625rem;
        margin-bottom: 1.5625rem; } }
  @media (min-width: 48em) {
    .vidyard-banner .overlay-text h3 {
      font-size: 1.25rem;
      margin-bottom: 1.5625rem; } }
  @media (min-width: 73.75em) {
    .vidyard-banner .overlay-text h3 {
      font-size: 1.4375rem; } }
  @media screen and (max-width: 47.9375em) {
    .vidyard-banner .overlay-text .btn--medium {
      font-size: 0.625rem;
      max-width: 60%;
      padding-top: 0.5rem;
      padding-bottom: 0.3125rem; } }

.block-description {
  background-image: url("../images/bg-descriptionx1.png");
  background-repeat: no-repeat; }
  @media (min--moz-device-pixel-ratio: 1.3), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    .block-description {
      background-image: url("../images/bg-descriptionx2.png");
      background-size: 40.5rem 32.4375rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-description {
      background-size: 22.5rem;
      background-position: -4rem 1.5625rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-description {
      background-size: 29.375rem;
      background-position: -4.625rem 3.4375rem; } }
  @media (min-width: 73.75em) {
    .block-description {
      background-position: -4.5rem 2.625rem; } }
  .block-entity-viewcommerce-product .block-description {
    background-position: 0 0; }
  .block-description__image {
    padding: 5.0625rem 2.25rem 1.6875rem; }
    @media (min-width: 48em) {
      .block-description__image {
        width: 42.93478%;
        float: left;
        margin-right: 2.71739%;
        padding-left: 3.5rem;
        padding-top: 8.125rem; } }
    @media (min-width: 73.75em) {
      .block-description__image {
        width: 49.15254%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: -19.1875rem;
        padding-left: 2.5625rem;
        padding-top: 9.0625rem; } }
  .block-description img {
    width: 10.0625rem; }
    @media (min-width: 48em) {
      .block-description img {
        width: 13.6875rem; } }
    @media (min-width: 73.75em) {
      .block-description img {
        width: auto; } }
  @media (min-width: 48em) {
    .block-description__content {
      width: 54.34783%;
      float: right;
      margin-right: 0;
      font-size: 1.125rem;
      line-height: 1.875rem;
      margin-bottom: 2.25rem;
      padding-top: 5.625rem; } }
  @media (min-width: 73.75em) {
    .block-description__content {
      width: 49.15254%;
      float: right;
      margin-right: 0;
      padding-right: 6.77966%; } }
  .block-description__content__text {
    margin-bottom: 2.25rem; }
    @media screen and (max-width: 47.9375em) {
      .block-description__content__text {
        font-size: 0.9375rem;
        line-height: 1.25rem;
        margin-bottom: 1.8125rem; } }
  @media (min-width: 73.75em) {
    .block-description--sub-product .block-description__image {
      padding-top: 5.4375rem;
      padding-left: 0; }
    .block-description--sub-product .block-description__content {
      padding-top: 6.875rem;
      margin-bottom: 4.5rem; } }
  .block-description--medical-product {
    background: none; }

.block-introduction {
  background-image: url("../images/bg-block-introduction.jpg");
  background-position: top center;
  background-size: cover;
  padding-bottom: 0;
  padding-top: 1.4375rem; }
  @media (min-width: 48em) {
    .block-introduction {
      padding-bottom: 4.375rem;
      padding-top: 5.6875rem; }
      .block-introduction .section-description {
        margin-bottom: 3.8125rem;
        margin-top: -0.0625rem; } }
  .block-introduction--supporting-service {
    background-image: url("../images/bg-block-introduction-supporting-services.jpg"); }
    @media (min-width: 48em) {
      .block-introduction--supporting-service {
        padding-bottom: 7.125rem;
        padding-top: 6.3125rem; }
        .block-introduction--supporting-service .section-description {
          margin-bottom: 4.4375rem; } }
  .block-introduction--invest {
    background-image: url("../images/bg-block-introduction-invest.jpg"); }
    @media (min-width: 48em) {
      .block-introduction--invest {
        padding-bottom: 7.125rem;
        padding-top: 7.75rem; }
        .block-introduction--invest .section-title {
          margin-bottom: 1.3125rem; } }
    @media (min-width: 73.75em) {
      .block-introduction--invest .section-description {
        margin-bottom: 3.8125rem; } }
  @media (min-width: 48em) {
    .block-introduction--invest .block-introduction__wrap, .block-introduction--supporting-service .block-introduction__wrap {
      padding-left: 11.41304%;
      padding-right: 11.41304%; } }
  @media (min-width: 73.75em) {
    .block-introduction--invest .block-introduction__wrap, .block-introduction--supporting-service .block-introduction__wrap {
      padding-left: 16.94915%;
      padding-right: 16.94915%; } }

.block-inspired {
  padding-bottom: 0.9375rem;
  padding-top: 1.875rem;
  position: relative; }
  @media screen and (max-width: 47.9375em) {
    .block-inspired {
      display: none;
      margin: 0rem 1.25rem 3.75rem;
      padding-bottom: 0; } }
  @media (min-width: 48em) {
    .block-inspired {
      padding-top: 6.4375rem;
      padding-bottom: 3.9375rem;
      margin-bottom: 0; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-inspired .grid-video--3-video {
      width: 100%;
      padding: 0rem 0.5625rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-inspired .grid-video--3-video .grid-video--3-video__large,
    .block-inspired .grid-video--3-video .grid-video--3-video__small {
      margin-top: 1.25rem; } }
  .block-inspired .container {
    position: relative;
    z-index: 50; }
    @media screen and (max-width: 47.9375em) {
      .block-inspired .container {
        margin: 0; } }
  .block-inspired--background-image {
    height: 100%;
    left: 0;
    overflow: hidden;
    position: absolute;
    top: 0;
    width: 100%; }
    .block-inspired--background-image img {
      height: 100%;
      max-width: none;
      width: 100%; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-inspired--background-image img {
          height: auto;
          width: auto; } }
      @media screen and (max-width: 47.9375em) {
        .block-inspired--background-image img {
          height: auto; } }
  @media screen and (max-width: 47.9375em) {
    .block-inspired .slick-dots {
      bottom: -3.125rem;
      margin-top: 0;
      position: absolute;
      width: 100%; } }
  .block-inspired .section-description {
    margin-bottom: 3.1875rem;
    margin-top: -0.0625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-inspired .section-description {
        margin-bottom: 1.875rem;
        padding: 0rem 0.625rem; } }
  .block-inspired .section-title {
    margin-bottom: 1.3125rem; }
    @media screen and (max-width: 47.9375em) {
      .block-inspired .section-title {
        font-size: 1.875rem;
        margin-bottom: 0.375rem;
        padding: 0rem 0.625rem; } }

.grid-video {
  margin: 0 -0.875rem; }
  @media (min-width: 48em) {
    .grid-video {
      margin: 0 auto;
      width: 65.76087%; } }
  @media (min-width: 73.75em) {
    .grid-video {
      width: 50.84746%; } }
  .grid-video--3-video {
    margin: 0; }
    @media (min-width: 48em) {
      .grid-video--3-video {
        margin: 0 auto;
        padding: 0 3.25%;
        width: 83.05085%; }
        .grid-video--3-video:before, .grid-video--3-video:after {
          content: '';
          display: table; }
        .grid-video--3-video:after {
          clear: both; }
        .grid-video--3-video__large {
          float: left;
          padding-right: 1.25rem;
          width: 68.7%; }
        .grid-video--3-video__small {
          float: right;
          margin-bottom: 1.1875rem;
          width: 31.3%; } }

.block-vetcom-archive {
  color: #fff;
  position: relative;
  background: #0082c0; }
  @media (min-width: 73.75em) {
    .block-vetcom-archive {
      background-color: transparent; }
      .block-vetcom-archive:after, .block-vetcom-archive:before {
        content: '';
        display: block;
        height: 100%;
        position: absolute;
        top: 0;
        width: 50%;
        z-index: -1; }
      .block-vetcom-archive:before {
        background-color: #0082c0;
        left: 0; }
      .block-vetcom-archive:after {
        background-color: #1375a4;
        right: 0; } }

.block-vetcom {
  background-color: #0082c0;
  float: left;
  padding-bottom: 0.75rem;
  padding-top: 1.6875rem; }
  @media screen and (max-width: 47.9375em) {
    .block-vetcom .title-border-bottom {
      border-bottom: 1px solid #ddd;
      line-height: 2.0625rem; } }
  @media (min-width: 48em) {
    .block-vetcom {
      padding-top: 3.875rem;
      padding-bottom: 2.5rem; } }
  @media (min-width: 73.75em) {
    .block-vetcom {
      padding-right: 2.54237%;
      padding-top: 3.875rem;
      width: 71.33898%; } }
  @media screen and (max-width: 47.9375em) {
    .block-vetcom__left {
      text-align: center;
      margin-bottom: 1.4375rem; }
      .block-vetcom__left img {
        width: 8.75rem;
        margin-bottom: 0.5rem; } }
  @media (min-width: 48em) {
    .block-vetcom__left {
      width: 31.52174%;
      float: left;
      margin-right: 2.71739%;
      position: relative; } }
  @media (min-width: 73.75em) {
    .block-vetcom__left {
      width: 36.03679%;
      float: left;
      margin-right: 2.34114%; } }
  .block-vetcom__left a {
    -ms-flex-align: center;
        align-items: center;
    background-color: #f8f8f8;
    display: -ms-flexbox;
    display: flex;
    font-size: 0.875rem;
    margin: 0 auto;
    max-width: 17.5rem; }
    @media (min-width: 48em) {
      .block-vetcom__left a {
        bottom: 2.5rem;
        left: -1.3125rem;
        margin-left: 0;
        position: absolute;
        width: 15.125rem; } }
    .block-vetcom__left a .files-pdf {
      height: 1.8125rem;
      padding-left: 3.6875rem;
      width: 1.75rem; }
    .block-vetcom__left a .text {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      -ms-flex-align: center;
          align-items: center;
      background-color: #303234;
      color: #fff;
      display: -ms-flexbox;
      display: flex;
      font-size: 0.9375rem;
      min-height: 3.75rem;
      padding: 0rem 1.625rem;
      width: 73.80137%; }
      @media (min-width: 48em) {
        .block-vetcom__left a .text {
          width: 15.125rem; } }
  @media (min-width: 48em) {
    .block-vetcom__right {
      width: 65.76087%;
      float: right;
      margin-right: 0;
      padding-left: 1.125rem;
      padding-top: 0.5rem; } }
  @media (min-width: 73.75em) {
    .block-vetcom__right {
      width: 61.62207%;
      float: right;
      margin-right: 0;
      padding-left: 1.5rem;
      padding-top: 0.4375rem; } }
  .block-vetcom__right p {
    font-size: 0.9375rem;
    line-height: 1.125rem;
    margin-bottom: 1rem; }
    @media (min-width: 48em) {
      .block-vetcom__right p {
        font-size: 1.125rem;
        line-height: 1.4;
        margin-bottom: 1.875rem; } }
    @media (min-width: 73.75em) {
      .block-vetcom__right p {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif; } }
  .block-vetcom__right span {
    display: block;
    margin-bottom: 1rem;
    font-size: 0.9375rem; }
    @media (min-width: 48em) {
      .block-vetcom__right span {
        font-size: 1rem; } }
  .block-vetcom .subscribe-form__inner {
    margin-bottom: 1.4375rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-vetcom .subscribe-form__inner {
        width: 25rem; } }
  .block-vetcom .subscribe-form label {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    color: #50b8ea;
    text-transform: uppercase;
    font-size: 0.9375rem;
    margin-bottom: 0.5625rem; }
  .block-vetcom .subscribe-form .form-submit,
  .block-vetcom .subscribe-form .form-text {
    height: 3.25rem; }
    @media (min-width: 48em) {
      .block-vetcom .subscribe-form .form-submit,
      .block-vetcom .subscribe-form .form-text {
        height: 2.75rem; } }
  .block-vetcom .subscribe-form .form-text {
    margin-bottom: 0;
    width: 100%; }
  .block-vetcom .subscribe-form .form-submit {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 0.9375rem;
    padding: 0.625rem 1.25rem;
    position: absolute;
    right: -0.125rem;
    top: 0; }
    @media (min-width: 48em) {
      .block-vetcom .subscribe-form .form-submit {
        padding: 0.625rem 2.125rem; } }

.block-archive {
  padding-bottom: 2.5rem;
  padding-top: 5.5rem;
  display: none; }
  @media (min-width: 73.75em) {
    .block-archive {
      display: block;
      background-color: #1375a4;
      width: 27.9661%;
      padding-left: 3.75rem;
      float: left; } }
  .block-archive .title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 0.9375rem;
    margin-bottom: 1.125rem;
    color: #00aeef; }

.block-video {
  padding-top: 1.8125rem;
  padding-bottom: 2.3125rem; }
  @media (min-width: 48em) {
    .block-video {
      padding-top: 2.375rem;
      padding-bottom: 3.125rem; } }
  @media (min-width: 73.75em) {
    .block-video {
      padding-top: 3.875rem;
      padding-bottom: 3.8125rem; } }
  .block-video .title-border-bottom {
    margin-bottom: 1.5625rem; }
    @media (min-width: 48em) {
      .block-video .title-border-bottom {
        margin-bottom: 2.4375rem; } }
  .block-video__wrap {
    padding-bottom: 0.6875rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-video__wrap {
        margin: 0 -7px; } }
  .block-video__item {
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-video__item {
        width: 31.52174%;
        float: left;
        margin-bottom: 2.4375rem;
        padding: 0rem 0.4375rem; }
        .block-video__item:nth-child(3n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .block-video__item:nth-child(3n + 2) {
          margin-left: 34.23913%;
          margin-right: -100%;
          clear: none; }
        .block-video__item:nth-child(3n + 3) {
          margin-left: 68.47826%;
          margin-right: -100%;
          clear: none; } }
    @media (min-width: 73.75em) {
      .block-video__item {
        width: 23.72881%;
        float: left;
        margin-bottom: 2.4375rem;
        padding: 0; }
        .block-video__item:nth-child(4n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .block-video__item:nth-child(4n + 2) {
          margin-left: 25.42373%;
          margin-right: -100%;
          clear: none; }
        .block-video__item:nth-child(4n + 3) {
          margin-left: 50.84746%;
          margin-right: -100%;
          clear: none; }
        .block-video__item:nth-child(4n + 4) {
          margin-left: 76.27119%;
          margin-right: -100%;
          clear: none; } }
  .block-video__title {
    font-size: 0.9375rem;
    line-height: 1.125rem; }
    @media (min-width: 48em) {
      .block-video__title {
        line-height: 1.25rem; } }
    .block-video__title a {
      color: #585d62; }
      .block-video__title a:hover {
        color: #00aeef; }
  @media (min-width: 48em) {
    .block-video .vidyard-thumbnail {
      margin-bottom: 0.9375rem;
      height: 9.4375rem;
      overflow: hidden; } }
  .block-video .vidyard-thumbnail img {
    width: 100%; }
  .block-video .more-video {
    text-align: center; }

.style-percent {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  font-size: 0.71875rem; }
  @media (min-width: 48em) {
    .style-percent {
      font-size: 0.8125rem; } }
  .style-percent__number {
    font-size: 1.65625rem;
    margin-right: 0.3125rem; }
    @media (min-width: 48em) {
      .style-percent__number {
        font-size: 1.875rem; } }

@media (min-width: 73.75em) {
  .rotors-content {
    -ms-flex-line-pack: stretch;
        align-content: stretch;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row nowrap;
        flex-flow: row nowrap;
    -ms-flex-pack: start;
        justify-content: flex-start; } }

@media (min-width: 73.75em) {
  .rotors-content__left {
    min-height: 28.75rem;
    padding: 2.5rem 2.5rem 17.8125rem;
    position: relative;
    width: 28.5%; } }

.rotors-content__right {
  padding: 4.625rem 0.875rem 0.875rem; }
  @media (min-width: 48em) {
    .rotors-content__right {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      padding-bottom: 1.6875rem;
      padding-top: 4.875rem; } }
  @media (min-width: 73.75em) {
    .rotors-content__right {
      padding: 2.6875rem 3rem 2.375rem 6.125rem;
      width: 71.5%; } }
  .rotors-content__right__title {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    display: block;
    font-size: 0.9375rem;
    margin-bottom: 1.25rem; }
    @media screen and (max-width: 73.6875em) {
      .rotors-content__right__title {
        margin-bottom: 2.1875rem;
        text-align: center; } }
    @media screen and (max-width: 47.9375em) {
      .rotors-content__right__title {
        margin-bottom: 1.5625rem; } }
  .rotors-content__right .not-available {
    font-family: 'gotham-light', Helvetica, Arial, sans-serif;
    color: #d6083b;
    font-size: 0.8125rem; }

.rotors-content__title {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  font-size: 1.25rem;
  line-height: 1.5625rem;
  margin-bottom: 0.3125rem;
  padding: 1.5625rem 0.875rem 0rem;
  text-align: center; }
  @media (min-width: 48em) {
    .rotors-content__title {
      margin-bottom: 2.25rem;
      padding: 2.625rem 0.875rem 0rem; } }
  @media (min-width: 73.75em) {
    .rotors-content__title {
      line-height: 1.875rem;
      padding: 0;
      text-align: left; } }

@media screen and (max-width: 73.6875em) {
  .rotors-content__image {
    margin-bottom: -3.125rem;
    text-align: center; }
    .rotors-content__image img {
      display: inline;
      width: 14.125rem; } }

@media screen and (max-width: 47.9375em) {
  .rotors-content__image {
    margin-bottom: -3.5625rem; }
    .rotors-content__image img {
      width: 7.0625rem; } }

@media (min-width: 73.75em) {
  .rotors-content__image {
    bottom: 2.6875rem;
    position: absolute;
    right: -3.9375rem; } }

.rotors-content__body {
  font-size: 1.125rem;
  margin-bottom: 1.625rem; }
  @media screen and (max-width: 47.9375em) {
    .rotors-content__body {
      font-size: 0.9375rem;
      line-height: 1.25rem;
      margin-bottom: 0.875rem;
      text-align: center; } }
  @media screen and (max-width: 73.6875em) {
    .rotors-content__body {
      text-align: center; } }

@media screen and (max-width: 47.9375em) {
  .rotors-content__boxs {
    margin: 0 auto 0.5625rem;
    max-width: 18.25rem; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .rotors-content__boxs {
    margin: 0 auto 1.4375rem;
    max-width: 35rem; } }

@media (min-width: 73.75em) {
  .rotors-content__boxs {
    margin: 0 0 1.375rem; } }

@media screen and (max-width: 73.6875em) {
  .rotors-content__percents {
    text-align: center; } }

.rotors-content__percents .style-percent {
  margin-right: 0.9375rem; }
  @media (min-width: 48em) {
    .rotors-content__percents .style-percent {
      margin-right: 1.75rem; } }
  .rotors-content__percents .style-percent:last-of-type {
    margin-right: 0; }

.block-rotors {
  padding-bottom: 2.125rem;
  padding-top: 1.75rem; }
  @media (min-width: 48em) {
    .block-rotors {
      padding-bottom: 3.125rem;
      padding-top: 6.6875rem; } }
  @media (min-width: 73.75em) {
    .block-rotors {
      padding-bottom: 6.25rem;
      padding-top: 6.6875rem; } }
  @media (min-width: 48em) {
    .block-rotors .section-title {
      margin-bottom: 1.25rem; } }
  .block-rotors .section-description {
    margin-bottom: 1.875rem; }
    @media (min-width: 48em) {
      .block-rotors .section-description {
        margin-bottom: 3.6875rem; } }
  @media (min-width: 73.75em) {
    .block-rotors__slides-wrap {
      max-width: 73.75rem;
      margin-left: auto;
      margin-right: auto; }
      .block-rotors__slides-wrap:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 73.75em) {
    .block-rotors__slides {
      padding-left: 8.47458%;
      padding-right: 8.47458%; } }
  .block-rotors__link {
    margin-top: 0.625rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-rotors__link {
        margin-top: 2.5625rem; } }
    @media (min-width: 73.75em) {
      .block-rotors__link {
        margin-top: 3.5625rem; } }

.rotor-row {
  background-color: #fff;
  margin-bottom: 0.625rem;
  padding: 1.3125rem 0rem 0.6875rem;
  text-align: center; }
  @media (min-width: 48em) {
    .rotor-row {
      -ms-flex-align: center;
          align-items: center;
      display: -ms-flexbox;
      display: flex;
      text-align: left; } }
  .rotor-row__image {
    margin-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .rotor-row__image {
        width: 6.77966%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: 0;
        margin-left: -1.25rem; } }
  .rotor-row__title {
    margin-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .rotor-row__title {
        width: 15.25424%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: 0; } }
    .rotor-row__title h3 {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      color: #585d62;
      margin-bottom: 0; }
      @media (min-width: 48em) {
        .rotor-row__title h3 {
          font-size: 0.9375rem; } }
      @media (min-width: 73.75em) {
        .rotor-row__title h3 {
          font-size: 1.125rem; } }
    .rotor-row__title h4 {
      color: #d6083b;
      font-size: 0.8125rem; }
  .rotor-row__attr {
    color: #77b800;
    font-size: 0.9375rem;
    margin-bottom: 1.25rem;
    margin-left: 1.25rem; }
    @media (min-width: 48em) {
      .rotor-row__attr {
        width: 15.25424%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: 0; } }
  @media screen and (max-width: 47.9375em) {
    .rotor-row .rotor-row__attr span {
      padding-left: 0; } }
  @media (min-width: 48em) {
    .rotor-row__prop {
      width: 57.62712%;
      float: right;
      margin-right: 0;
      margin-left: auto; } }
  .rotor-row .clia-waived {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    background: url("../images/clia-icon.png") 0 0 no-repeat;
    color: #00547c;
    display: inline-block;
    line-height: 2.0625rem;
    padding-left: 2.8125rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .rotor-row .clia-waived {
        background-position: center 0;
        line-height: normal;
        padding-left: 0;
        padding-top: 2.8125rem; } }
  @media screen and (max-width: 47.9375em) {
    .rotor-row .tag-box {
      display: inline-block;
      float: none;
      margin-right: 0.625rem; } }
  .rotor-row .not-available {
    font-family: 'gotham-light', Helvetica, Arial, sans-serif;
    color: #d6083b;
    font-size: 0.8125rem; }

.style-percent {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  font-size: 0.71875rem; }
  @media (min-width: 48em) {
    .style-percent {
      font-size: 0.8125rem; } }
  .style-percent__number {
    font-size: 1.65625rem;
    margin-right: 0.3125rem; }
    @media (min-width: 48em) {
      .style-percent__number {
        font-size: 1.875rem; } }

.block-faqs {
  font-size: 0.9375rem; }
  .block-faqs__item {
    margin-bottom: 1.125rem;
    padding-left: 2.375rem;
    position: relative; }
    @media (min-width: 48em) {
      .block-faqs__item {
        margin-bottom: 1.625rem;
        padding-left: 6.125rem; } }
    .block-faqs__item:before {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      border-radius: 100%;
      border: 1px solid #e8e8e8;
      color: #999;
      content: '?';
      display: inline-block;
      font-size: 0.625rem;
      height: 1.375rem;
      left: 0;
      line-height: 2.2;
      position: absolute;
      text-align: center;
      top: 0;
      width: 1.375rem; }
      @media (min-width: 48em) {
        .block-faqs__item:before {
          font-size: 0.9375rem;
          height: 1.75rem;
          left: 1.625rem;
          line-height: 1.8;
          top: -0.25rem;
          width: 1.75rem; } }
    .block-faqs__item__title {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 0.9375rem;
      margin-bottom: 0.1875rem; }
      @media screen and (max-width: 47.9375em) {
        .block-faqs__item__title {
          line-height: 1.125rem;
          margin-bottom: 0; } }
      .block-faqs__item__title:hover {
        cursor: pointer; }
    .block-faqs__item__body {
      line-height: 1.125rem;
      padding-left: 1.125rem; }
      @media (min-width: 48em) {
        .block-faqs__item__body {
          line-height: 1.5625rem; } }
  .block-faqs .more-question {
    padding-left: 2.375rem; }
    @media (min-width: 48em) {
      .block-faqs .more-question {
        padding-left: 6.125rem; } }
  @media (min-width: 48em) {
    .block-faqs--consumbales .block-faqs__item {
      padding-left: 3.6875rem; }
      .block-faqs--consumbales .block-faqs__item:before {
        left: 0; } }
  @media (min-width: 48em) {
    .block-faqs--consumbales .more-question {
      padding-left: 3.6875rem; } }

.consumbales-faq {
  padding-bottom: 1.125rem;
  padding-top: 1.75rem; }
  @media (min-width: 48em) {
    .consumbales-faq {
      padding-bottom: 2.875rem;
      padding-top: 4.25rem; } }
  @media (min-width: 73.75em) {
    .consumbales-faq {
      padding-bottom: 6.9375rem;
      padding-top: 6.5rem; } }
  .consumbales-faq .section-title {
    margin-bottom: 1rem; }
    @media (min-width: 48em) {
      .consumbales-faq .section-title {
        margin-bottom: 2.9375rem; } }
    @media (min-width: 73.75em) {
      .consumbales-faq .section-title {
        margin-bottom: 3.125rem; } }
  .consumbales-faq__options {
    margin-bottom: 1.9375rem; }
    @media (min-width: 48em) {
      .consumbales-faq__options {
        margin-bottom: 3.6875rem; } }

.block-filter {
  padding: 1.1875rem 0rem 1rem; }
  @media (min-width: 48em) {
    .block-filter {
      padding: 1.75rem 0rem; } }
  @media (min-width: 48em) {
    .block-filter .form-filter {
      -ms-flex-align: center;
          align-items: center;
      display: -ms-flexbox;
      display: flex; } }
  .block-filter .form-filter label {
    font-size: 0.9375rem;
    font-weight: normal;
    margin-bottom: 1.125rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-filter .form-filter label {
        text-align: left;
        padding-right: 2.25rem;
        margin-bottom: 0; } }
  @media (min-width: 48em) {
    .block-filter .form-filter__product {
      width: 33.89831%;
      float: left;
      margin-right: 1.69492%; } }
  @media (min-width: 48em) {
    .block-filter .form-filter__language {
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%; } }
  .block-filter .form-filter .form-type-select, .block-filter .form-filter .block-event .tab-filter, .block-event .block-filter .form-filter .tab-filter {
    margin-bottom: 0.5625rem;
    height: 3.125rem; }
    @media (min-width: 48em) {
      .block-filter .form-filter .form-type-select, .block-filter .form-filter .block-event .tab-filter, .block-event .block-filter .form-filter .tab-filter {
        height: auto;
        margin-bottom: 0; } }
  @media screen and (max-width: 47.9375em) {
    .block-filter .form-filter .chosen-single {
      height: 50px;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      padding: 0.625rem 0.5rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-filter .form-filter .chosen-single {
      height: 2.6875rem; } }
  .block-filter--bg-blue {
    background-color: #eaeff2; }
    @media screen and (max-width: 47.9375em) {
      .block-filter--bg-blue .form-type-select, .block-filter--bg-blue .block-event .tab-filter, .block-event .block-filter--bg-blue .tab-filter {
        border: none; } }
    @media screen and (max-width: 47.9375em) {
      .block-filter--bg-blue .form-type-select:before, .block-filter--bg-blue .block-event .tab-filter:before, .block-event .block-filter--bg-blue .tab-filter:before {
        content: ''; } }
    @media screen and (max-width: 47.9375em) {
      .block-filter--bg-blue .form-type-select .form-type-select:before, .block-filter--bg-blue .block-event .tab-filter .form-type-select:before, .block-event .block-filter--bg-blue .tab-filter .form-type-select:before, .block-filter--bg-blue .form-type-select .block-event .tab-filter:before, .block-event .block-filter--bg-blue .form-type-select .tab-filter:before, .block-filter--bg-blue .block-event .tab-filter .tab-filter:before, .block-event .block-filter--bg-blue .tab-filter .tab-filter:before {
        content: '\f107'; } }
  .block-filter--text-large {
    padding: 2.375rem 0.625rem; }
    .block-filter--text-large .form-filter {
      -ms-flex-pack: center;
          justify-content: center; }
      .block-filter--text-large .form-filter label {
        font-family: 'gotham-light', Helvetica, Arial, sans-serif;
        font-size: 1.25rem;
        margin-bottom: 0;
        padding-right: 2.8125rem; }
      .block-filter--text-large .form-filter__product {
        width: 32.20339%;
        float: left;
        margin-right: 1.69492%; }
  .block-filter--with-medimum {
    padding: 0; }
    .block-filter--with-medimum .form-type-select, .block-filter--with-medimum .block-event .tab-filter, .block-event .block-filter--with-medimum .tab-filter {
      min-width: 23.8125rem;
      margin-right: 1.1875rem; }

.block-category {
  background-color: #f8f8f8;
  padding: 2.4375rem 0rem;
  display: none; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-category {
      padding: 0; } }
  @media (min-width: 48em) {
    .block-category {
      display: block; } }
  @media (min-width: 73.75em) {
    .block-category__wrap {
      display: -ms-flexbox;
      display: flex;
      -ms-flex-pack: justify;
          justify-content: space-between; } }
  .block-category a {
    color: #585d62;
    font-size: 0.875rem;
    text-transform: capitalize; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-category a {
        -ms-flex-align: center;
            align-items: center;
        border-bottom: 1px solid #fff;
        border-right: 1px solid #fff;
        display: -ms-flexbox !important;
        display: flex !important;
        float: left;
        -ms-flex-pack: center;
            justify-content: center;
        min-height: 6.25rem;
        width: 25%; }
        .block-category a:nth-child(4n) {
          border-right: 0; } }
    .block-category a.is-active, .block-category a:hover {
      color: #00aeef; }

.grid-media-event {
  overflow: hidden;
  padding-bottom: 0.6875rem;
  padding-top: 0.9375rem; }
  @media (min-width: 48em) {
    .grid-media-event {
      padding-bottom: 4.1875rem;
      padding-top: 4.375rem; } }
  @media (min-width: 73.75em) {
    .grid-media-event {
      padding-top: 3.75rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .grid-media-event .box-content__group {
      padding: 1.3125rem 1.4375rem; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .grid-media-event .box-content__group {
      padding: 1.0625rem 1.1875rem; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .grid-media-event .box-content__title-link {
      font-size: 1.1875rem;
      line-height: 1.5rem; } }
  @media (min-width: 73.75em) {
    .grid-media-event .box-content__title-link {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .grid-media-event .box-content__categories, .grid-media-event .box-content__date {
      font-size: 0.625rem; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .grid-media-event .box-content__categories {
      margin-bottom: 0.5rem; } }
  @media screen and (min-width: 48em) and (max-width: 59.9375em) {
    .grid-media-event .box-content.title-link-small .box-content__title-link {
      font-size: 0.6875rem;
      line-height: 1rem; } }
  .grid-media-event__half-left {
    float: left;
    width: 50%;
    padding-bottom: 0.125rem;
    padding-right: 0.125rem; }
    @media (min-width: 48em) {
      .grid-media-event__half-left {
        padding-bottom: 0.25rem;
        padding-right: 0.25rem; } }
  .grid-media-event__half-right {
    float: right;
    width: 50%;
    padding-bottom: 0.125rem;
    padding-left: 0.125rem; }
    @media (min-width: 48em) {
      .grid-media-event__half-right {
        padding-bottom: 0.25rem;
        padding-left: 0.25rem; } }
  .grid-media-event__bottom-full {
    clear: both;
    padding-top: 0.125rem; }
    @media (min-width: 48em) {
      .grid-media-event__bottom-full {
        padding-top: 0.25rem; } }
  @media screen and (max-width: 47.9375em) {
    .grid-media-event__item {
      float: none;
      padding: 0 0 0.25rem;
      width: 100%; } }

.map-iframe {
  height: 30.125rem;
  overflow: hidden;
  position: relative; }
  .map-iframe iframe {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%; }

.block-headquaters {
  background-color: #e7e7e7;
  color: #fff;
  padding: 3.0625rem 0rem; }
  .block-headquaters__item {
    -ms-flex-align: center;
        align-items: center;
    background-color: #585d62;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between; }
  .block-headquaters__grid {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%; }
    .block-headquaters__grid:last-child {
      float: right;
      margin-right: 0; }
  .block-headquaters__image {
    width: 48.42697%; }
    .block-headquaters__image img {
      margin-bottom: -0.375rem; }
  .block-headquaters__content {
    padding: 0.375rem 3.125rem 0rem 0.6875rem;
    width: 48.42697%; }
    .block-headquaters__content__title {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      color: #00aeef;
      font-size: 0.75rem;
      margin-bottom: 0.1875rem;
      text-transform: uppercase; }
    .block-headquaters__content__local {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      color: #fff;
      font-size: 0.9375rem;
      margin-bottom: 1.25rem;
      text-transform: uppercase; }
    .block-headquaters__content__address {
      color: #e7e7e7;
      font-size: 0.9375rem;
      line-height: 1.25rem; }

.block-time-location {
  font-size: 0.9375rem;
  padding-top: 2.75rem; }
  @media (min-width: 48em) {
    .block-time-location {
      padding-top: 2.9375rem; } }
  @media (min-width: 73.75em) {
    .block-time-location {
      padding-top: 3.1875rem; } }
  .block-time-location__meta {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    margin-bottom: 0.375rem; }
    @media (min-width: 48em) {
      .block-time-location__meta {
        display: -ms-flexbox;
        display: flex;
        margin-bottom: 1.1875rem; } }
    @media (min-width: 48em) {
      .block-time-location__meta .date {
        margin-right: 1.375rem; } }
    .block-time-location__meta time {
      color: #abaeb0; }
      @media screen and (max-width: 47.9375em) {
        .block-time-location__meta time {
          font-size: 0.9375rem; } }
      @media (min-width: 48em) {
        .block-time-location__meta time {
          padding-left: 1.3125rem; } }
  .block-time-location__location {
    margin-bottom: 0.375rem; }
    @media (min-width: 48em) {
      .block-time-location__location {
        margin-bottom: 1.1875rem; } }
    .block-time-location__location:before {
      color: #d6083b; }
    @media (min-width: 48em) {
      .block-time-location__location .link-red {
        margin-bottom: 0.25rem; } }
    @media screen and (max-width: 47.9375em) {
      .block-time-location__location .info {
        line-height: 1.0625rem; } }

.block-presenter {
  padding-bottom: 0.3125rem;
  padding-top: 1.4375rem; }
  @media (min-width: 48em) {
    .block-presenter {
      padding-bottom: 4.5rem;
      padding-top: 4.875rem; } }
  @media (min-width: 73.75em) {
    .block-presenter {
      padding-bottom: 3.9375rem; } }
  .block-presenter__image {
    display: none; }
    @media (min-width: 48em) {
      .block-presenter__image {
        width: 26.65388%;
        float: left;
        margin-right: 2.68456%;
        display: block; } }
    @media (min-width: 73.75em) {
      .block-presenter__image {
        width: 31.23596%;
        float: left;
        margin-right: 3.14607%;
        display: block; } }
  @media (min-width: 48em) {
    .block-presenter__body {
      width: 70.66155%;
      float: right;
      margin-right: 0; } }
  @media (min-width: 73.75em) {
    .block-presenter__body {
      width: 65.61798%;
      float: right;
      margin-right: 0; } }
  .block-presenter__name {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    color: #474b4f;
    font-size: 1.125rem;
    line-height: 1.25rem;
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .block-presenter__name {
        font-size: 1.25rem;
        margin-bottom: 0.3125rem;
        line-height: 1.4; } }
  .block-presenter__position {
    color: #9a9a9a;
    font-size: 0.8125rem;
    margin-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .block-presenter__position {
        margin-bottom: 0.75rem; } }
  .block-presenter__description {
    line-height: 1.125rem; }
    @media (min-width: 48em) {
      .block-presenter__description {
        line-height: 1.5625rem; } }

.block-related {
  padding-bottom: 1.25rem;
  padding-top: 1.5625rem; }
  @media (min-width: 48em) {
    .block-related {
      padding-bottom: 4.375rem;
      padding-top: 3.625rem; } }
  @media (min-width: 73.75em) {
    .block-related {
      padding-bottom: 8.625rem;
      padding-top: 7.5rem; } }
  @media (min-width: 48em) {
    .block-related .title-border-bottom {
      margin-bottom: 3rem; } }
  @media (min-width: 73.75em) {
    .block-related .title-border-bottom {
      margin-bottom: 4.3125rem; } }
  .block-related__grid__item {
    margin-bottom: 0.9375rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-related__grid__item {
        width: 31.52174%;
        float: left;
        margin-right: 2.71739%;
        margin-bottom: 0; }
        .block-related__grid__item:nth-child(3n) {
          float: right;
          margin-right: 0; }
        .block-related__grid__item:nth-child(3n + 1) {
          clear: both; } }
    @media (min-width: 73.75em) {
      .block-related__grid__item {
        width: 23.72881%;
        float: left;
        margin-right: 1.69492%;
        margin-bottom: 0; }
        .block-related__grid__item:nth-child(4n) {
          float: right;
          margin-right: 0; }
        .block-related__grid__item:nth-child(4n + 1) {
          clear: both; } }

.block-registration {
  padding-bottom: 2.1875rem;
  padding-top: 2rem;
  text-align: center; }
  @media (min-width: 48em) {
    .block-registration {
      padding-bottom: 4.375rem;
      padding-top: 4.0625rem; } }
  @media (min-width: 73.75em) {
    .block-registration {
      padding-bottom: 3.625rem;
      padding-top: 3.75rem; } }
  .block-registration__text {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    color: #fff;
    font-size: 0.875rem;
    line-height: 1.1875rem;
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-registration__text {
        font-size: 1.25rem;
        line-height: 1.875rem;
        margin-bottom: 2.4375rem; } }
    .block-registration__text p {
      margin-bottom: 0; }
  @media (min-width: 48em) {
    .block-registration .btn {
      font-size: 0.9375rem;
      min-width: 13.875rem;
      padding: 0.6875rem 0.3125rem; } }

.block-detail {
  line-height: 1.5625rem;
  padding-bottom: 3.6875rem;
  padding-top: 4.375rem; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-detail {
      padding-bottom: 2.625rem;
      padding-top: 3.875rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-detail {
      font-size: 0.9375rem;
      line-height: 1.125rem;
      padding-bottom: 1.25rem;
      padding-top: 2rem; } }
  .block-detail h3 {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 0.9375rem;
    margin-bottom: 0.375rem; }
    @media (min-width: 48em) {
      .block-detail h3 {
        margin-bottom: 0.6875rem; } }
  .block-detail p {
    margin-bottom: 0.6875rem; }
    @media (min-width: 48em) {
      .block-detail p {
        margin-bottom: 1.25rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-detail--single-news {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      padding-bottom: 1rem;
      padding-top: 3.125rem; } }
  @media (min-width: 73.75em) {
    .block-detail--single-news {
      margin-left: 8.47458%;
      padding-bottom: 5.375rem;
      padding-top: 5.125rem;
      width: 49.15254%; } }
  .block-detail--single-news h3 {
    margin-bottom: 0.625rem; }
    @media (min-width: 48em) {
      .block-detail--single-news h3 {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
        font-size: 1.25rem;
        margin-bottom: 1.375rem; } }
  .block-detail--single-news p {
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-detail--single-news p {
        margin-bottom: 1.5625rem; } }

.block-event {
  padding: 0; }
  @media screen and (max-width: 47.9375em) {
    .block-event {
      background-color: transparent; } }
  @media (min-width: 48em) {
    .block-event {
      padding-bottom: 2.4375rem;
      padding-top: 4.25rem; } }
  @media (min-width: 60em) {
    .block-event {
      padding-left: 11.41304%;
      padding-right: 11.41304%; } }
  @media (min-width: 73.75em) {
    .block-event {
      padding: 6.125rem 0rem 4.8125rem 0rem; } }
  .block-event .tab-filter {
    margin-bottom: 2.5625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-event .tab-filter {
        border: 1px solid #e4e5e6;
        margin-bottom: 0.625rem; }
        .block-event .tab-filter:before {
          color: #f00; }
        .block-event .tab-filter.active {
          margin-bottom: 0.875rem;
          color: #f00;
          background-color: #f1f7fA; }
          .block-event .tab-filter.active:before {
            transform: rotate(180deg); } }
    @media (min-width: 73.75em) {
      .block-event .tab-filter {
        margin-bottom: 0.6875rem; } }
    @media screen and (max-width: 47.9375em) {
      .block-event .tab-filter__title {
        font-size: 0.9375rem;
        font-weight: bold;
        margin: 0;
        padding: 1.0625rem 0.5rem;
        text-align: left; } }
    @media (min-width: 73.75em) {
      .block-event .tab-filter__form__item {
        margin-left: 2.0625rem; } }
    @media screen and (max-width: 47.9375em) {
      .block-event .tab-filter__wrap {
        display: none; } }
    @media (min-width: 73.75em) {
      .block-event .tab-filter__wrap {
        bottom: 0.1875rem; } }
  .block-event__content {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    font-size: 0.8125rem; }
    @media screen and (max-width: 47.9375em) {
      .block-event__content {
        margin-bottom: 2.5rem; } }
    .block-event__content__item {
      padding: 1.0625rem 0rem 0rem 0.25rem; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-event__content__item {
          width: 41.32311%;
          float: left;
          margin-right: 2.68456%; }
          .block-event__content__item:nth-child(2n) {
            width: 46.69223%;
            float: right;
            margin-right: 0; }
          .block-event__content__item:nth-child(2n + 1) {
            clear: left; } }
      @media (min-width: 48em) {
        .block-event__content__item {
          margin-bottom: 1.5625rem; } }
      @media (min-width: 73.75em) {
        .block-event__content__item {
          width: 49.15254%;
          float: left;
          margin-bottom: 2.125rem; }
          .block-event__content__item:nth-child(2n + 1) {
            margin-left: 0;
            margin-right: -100%;
            clear: both;
            margin-left: 0; }
          .block-event__content__item:nth-child(2n + 2) {
            margin-left: 50.84746%;
            margin-right: -100%;
            clear: none; } }
    .block-event__content__meta {
      margin-bottom: 0.3125rem; }
      @media (min-width: 48em) {
        .block-event__content__meta {
          margin-bottom: 0.375rem; } }
      .block-event__content__meta .date {
        font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
        margin-right: 1.375rem; }
        @media screen and (max-width: 47.9375em) {
          .block-event__content__meta .date {
            font-size: 0.75rem;
            margin-right: 1.0625rem; } }
      .block-event__content__meta .time {
        color: #abaeb0;
        padding-left: 0.9375rem; }
        @media screen and (max-width: 47.9375em) {
          .block-event__content__meta .time {
            font-size: 0.6875rem; } }
        .block-event__content__meta .time:before {
          font-size: 0.875rem;
          top: -0.125rem; }
          @media screen and (max-width: 47.9375em) {
            .block-event__content__meta .time:before {
              font-size: 0.8125rem; } }
    .block-event__content__title {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      font-size: 1.125rem;
      margin-bottom: 0.375rem; }
      @media screen and (max-width: 47.9375em) {
        .block-event__content__title {
          font-size: 0.875rem;
          line-height: 1.125rem; } }
    .block-event__content__location {
      color: #676767;
      padding-left: 1.1875rem; }
      .block-event__content__location:before {
        font-size: 0.875rem;
        top: -0.125rem; }
  .block-event .pager {
    margin-bottom: 0;
    margin-top: 1.3125rem;
    padding-top: 3.125rem; }
    @media screen and (max-width: 47.9375em) {
      .block-event .pager {
        display: none; } }
    @media (min-width: 73.75em) {
      .block-event .pager {
        margin-top: 3.125rem; } }
  .block-event .view-more {
    text-align: center; }
    .block-event .view-more a {
      margin-top: 1.5rem; }
  @media screen and (max-width: 47.9375em) {
    .block-event--veterinary {
      margin-bottom: 1.875rem; } }

@media screen and (max-width: 47.9375em) {
  .block-event__content--careers-item {
    margin-bottom: 0; } }

@media screen and (max-width: 47.9375em) {
  .block-event__content--careers-item + p {
    margin-bottom: 0; } }

.tabs-support-header {
  background-color: #eaeff2;
  list-style: none;
  padding-top: 0.9375rem;
  position: relative; }
  @media (min-width: 48em) {
    .tabs-support-header {
      margin-bottom: 1.4375rem;
      padding-top: 6rem; } }
  @media (min-width: 73.75em) {
    .tabs-support-header {
      margin-bottom: 4.75rem; } }
  .tabs-support-header li {
    display: inline-block;
    margin-bottom: 0.9375rem;
    width: 100%; }
    @media (min-width: 48em) {
      .tabs-support-header li {
        margin-bottom: 0;
        width: 50%;
        float: left; } }
    @media (min-width: 73.75em) {
      .tabs-support-header li {
        width: auto;
        float: none; } }
  .tabs-support-header a {
    background-color: #fff;
    color: #585d62;
    display: block;
    font-size: 1.25rem;
    padding: 0.75rem 0.625rem;
    text-align: center;
    transition: .5s; }
    @media (min-width: 48em) {
      .tabs-support-header a {
        padding: 1.5rem 2.0625rem 1.375rem 2.0625rem;
        background-color: transparent; } }
    .tabs-support-header a:hover, .tabs-support-header a.is-active {
      background-color: #fff;
      color: #d6083b; }

.block-contact-support__item {
  margin-bottom: 1.75rem;
  padding-top: 2.1875rem; }
  @media screen and (max-width: 47.9375em) {
    .block-contact-support__item .container {
      margin: 0; } }
  @media (min-width: 48em) {
    .block-contact-support__item {
      margin-bottom: 0; } }
  @media (min-width: 73.75em) {
    .block-contact-support__item {
      width: 69.44075%;
      float: left;
      margin-right: 1.86418%;
      margin-bottom: 12.0625rem;
      padding-bottom: 3.75rem;
      padding-top: 2.125rem; }
      .block-contact-support__item.right-side {
        width: 28.69507%;
        float: right;
        margin-right: 0; } }
  .block-contact-support__item > div {
    padding-top: 0; }

@media (min-width: 73.75em) {
  .border-right {
    border-right: 1px solid #eaeff2;
    padding-right: 10.18642%; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .block-contact-form {
    padding-left: 9.47283%;
    padding-right: 9.47283%;
    border-bottom: 1px solid #eaeff2;
    margin-bottom: 1.875rem;
    padding-bottom: 4.375rem; } }

.block-contact-form .form-type-select, .block-contact-form .block-event .tab-filter, .block-event .block-contact-form .tab-filter {
  margin-bottom: 0.9375rem; }
  @media (min-width: 48em) {
    .block-contact-form .form-type-select, .block-contact-form .block-event .tab-filter, .block-event .block-contact-form .tab-filter {
      margin-bottom: 1rem; } }
  .block-contact-form .form-type-select:nth-child(3), .block-contact-form .block-event .tab-filter:nth-child(3), .block-event .block-contact-form .tab-filter:nth-child(3) {
    margin-bottom: 1.3125rem; }
    @media (min-width: 48em) {
      .block-contact-form .form-type-select:nth-child(3), .block-contact-form .block-event .tab-filter:nth-child(3), .block-event .block-contact-form .tab-filter:nth-child(3) {
        margin-bottom: 2.6875rem; } }
  .block-contact-form .form-type-select select, .block-contact-form .block-event .tab-filter select, .block-event .block-contact-form .tab-filter select {
    background-color: #f8f8f8;
    padding: 1rem 2.1875rem 0.875rem 0.3125rem; }

.block-contact-form .form-wrap {
  margin-bottom: 1.375rem; }
  .block-contact-form .form-wrap label {
    font-family: 'gotham-light', Helvetica, Arial, sans-serif;
    font-size: 0.8125rem;
    font-weight: normal;
    margin-bottom: 0.25rem; }
    @media (min-width: 48em) {
      .block-contact-form .form-wrap label {
        margin-bottom: 0.375rem; } }
  .block-contact-form .form-wrap .form-text {
    height: 3.25rem;
    margin-bottom: 0;
    width: 100%; }
    @media (min-width: 48em) {
      .block-contact-form .form-wrap .form-text {
        height: 2.75rem; } }
    .block-contact-form .form-wrap .form-text.form-zip-code {
      max-width: 12.5rem; }
  .block-contact-form .form-wrap .form-textarea {
    box-sizing: border-box;
    margin-bottom: -0.25rem;
    min-height: 6.375rem;
    width: 100%; }
    @media (min-width: 48em) {
      .block-contact-form .form-wrap .form-textarea {
        margin-bottom: 0.125rem;
        min-height: 19.25rem; } }

.block-contact-form .btn {
  display: block;
  margin: 0 auto;
  padding: 1.125rem 1.0625rem 0.9375rem; }
  @media (min-width: 48em) {
    .block-contact-form .btn {
      margin: 0;
      padding: 0.875rem 1.0625rem 0.75rem; } }

.content-sidebar__date {
  font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
  font-size: 0.9375rem;
  margin-bottom: 1.3125rem; }
  .content-sidebar__date i {
    margin-right: 0.4375rem;
    position: relative;
    top: 0.125rem; }
    @media (min-width: 48em) {
      .content-sidebar__date i {
        margin-right: 0.875rem; } }

.content-sidebar__detail {
  line-height: 1.5625rem; }
  @media screen and (max-width: 47.9375em) {
    .content-sidebar__detail {
      font-size: 0.9375rem;
      line-height: 1.125rem; } }
  .content-sidebar__detail p {
    margin-bottom: 1.375rem; }
    @media (min-width: 48em) {
      .content-sidebar__detail p {
        margin-bottom: 1.4375rem; } }
  .content-sidebar__detail h3 {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 0.9375rem;
    margin-bottom: 0.6875rem; }

@media screen and (max-width: 47.9375em) {
  .content-sidebar__sidebar__links {
    margin-bottom: 1.375rem; } }

@media screen and (max-width: 47.9375em) {
  .content-sidebar__sidebar__links .form-type-select, .content-sidebar__sidebar__links .block-event .tab-filter, .block-event .content-sidebar__sidebar__links .tab-filter {
    margin-bottom: 0;
    margin-top: 0; } }

@media screen and (max-width: 47.9375em) {
  .content-sidebar__sidebar__links .form-type-select .chosen-drop, .content-sidebar__sidebar__links .block-event .tab-filter .chosen-drop, .block-event .content-sidebar__sidebar__links .tab-filter .chosen-drop,
  .content-sidebar__sidebar__links .form-type-select .chosen-single,
  .content-sidebar__sidebar__links .block-event .tab-filter .chosen-single, .block-event
  .content-sidebar__sidebar__links .tab-filter .chosen-single {
    background: #f8f8f8;
    border: 0.0625rem solid #eaeff2; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .content-sidebar__list {
    font-size: 0.9375rem;
    margin: 0rem 0rem 1.5625rem; } }

@media (min-width: 73.75em) {
  .content-sidebar__list {
    margin-left: 0; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .content-sidebar__list li {
    width: 32.30088%;
    float: left;
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    margin-bottom: 0.625rem; }
    .content-sidebar__list li:nth-child(3n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .content-sidebar__list li:nth-child(3n + 2) {
      margin-left: 33.84956%;
      margin-right: -100%;
      clear: none; }
    .content-sidebar__list li:nth-child(3n + 3) {
      margin-left: 67.69912%;
      margin-right: -100%;
      clear: none; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .content-sidebar__list a:before {
    display: none; } }

.content-sidebar--sidebar-right {
  padding-bottom: 0.4375rem;
  padding-top: 1.5625rem; }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-right {
      padding-bottom: 4.3125rem;
      padding-top: 3.9375rem; } }
  @media (min-width: 48em) {
    .content-sidebar--sidebar-right .node-title {
      margin-bottom: 2.1875rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .content-sidebar--sidebar-right .content-sidebar__content {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      padding-bottom: 1.125rem;
      padding-top: 2.6875rem; } }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-right .content-sidebar__content {
      margin-left: 8.47458%;
      width: 57.62712%;
      float: left;
      margin-right: 1.69492%;
      padding-right: 8.47458%;
      border-right: 0.0625rem solid #eaeff2;
      padding-top: 1.25rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .content-sidebar--sidebar-right .content-sidebar__sidebar {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      padding-bottom: 1.5rem; } }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-right .content-sidebar__sidebar {
      padding-left: 8.47458%;
      width: 32.20339%;
      float: right;
      margin-right: 0;
      padding-top: 1.25rem; } }

.content-sidebar--sidebar-left {
  padding-bottom: 0.5625rem;
  padding-top: 0.875rem; }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-left {
      padding-bottom: 6.25rem;
      padding-top: 4.375rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .content-sidebar--sidebar-left .content-sidebar__sidebar {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      border-bottom: 0.0625rem solid #eaeff2;
      margin-bottom: 3.375rem;
      padding-top: 0.5rem; } }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-left .content-sidebar__sidebar {
      margin-left: 8.47458%;
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%;
      padding-top: 0.75rem; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .content-sidebar--sidebar-left .content-sidebar__content {
      padding-left: 11.41304%;
      padding-right: 11.41304%;
      padding-bottom: 1.75rem; } }
  @media (min-width: 73.75em) {
    .content-sidebar--sidebar-left .content-sidebar__content {
      width: 57.62712%;
      float: left;
      margin-right: 1.69492%;
      border-left: 0.0625rem solid #eaeff2;
      padding-bottom: 3.125rem;
      padding-left: 8.30508%;
      padding-top: 0.75rem; } }

.block-sort-content {
  font-size: 0.75rem; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .block-sort-content__item {
      width: 31.52174%;
      float: left;
      margin-right: 2.71739%; }
      .block-sort-content__item:nth-child(3n) {
        float: right;
        margin-right: 0; } }
  @media (min-width: 73.75em) {
    .block-sort-content__item {
      margin-bottom: 3.5rem; } }
  .block-sort-content__image {
    margin-bottom: 1.8125rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-sort-content__image {
        margin-bottom: 1.0625rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-sort-content__image img {
        width: 100%; } }
  .block-sort-content__date {
    margin-right: 0.75rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-sort-content__date {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif; } }
  .block-sort-content__category {
    color: #abaeb0;
    text-transform: uppercase; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-sort-content__category {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif; } }
  .block-sort-content__title {
    font-size: 0.9375rem;
    line-height: 1.5625rem;
    margin-top: 0.25rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .block-sort-content__title {
        font-family: 'gotham-book', Helvetica, Arial, sans-serif;
        line-height: 1.125rem;
        margin-top: 0.375rem; } }

.block-catalog {
  padding-bottom: 8rem;
  padding-top: 3.8125rem; }
  .block-catalog__item {
    background-color: #fff;
    margin-bottom: 1.9375rem;
    padding-bottom: 4.25rem;
    position: relative; }
    .block-catalog__item__wrap {
      padding: 0rem 1.5625rem 0rem 2.3125rem; }
    .block-catalog__item__image {
      -ms-flex-align: center;
          align-items: center;
      background-color: #eaeff2;
      display: -ms-flexbox;
      display: flex;
      height: 11.25rem;
      -ms-flex-pack: center;
          justify-content: center;
      margin-bottom: 2.0625rem; }
    .block-catalog__item__title {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      font-size: 1.25rem;
      line-height: 1.5625rem;
      margin-bottom: 0.875rem; }
      .block-catalog__item__title a {
        color: #585d62; }
        .block-catalog__item__title a:hover {
          color: #00aeef; }
    .block-catalog__item__body {
      font-size: 0.8125rem;
      line-height: 1.25rem;
      margin-bottom: 2.75rem; }
    .block-catalog__item__description {
      font-size: 0.8125rem;
      line-height: 1.25rem;
      margin-bottom: 2.125rem;
      min-height: 3.75rem; }
    .block-catalog__item .btn {
      bottom: 1.75rem;
      left: 50%;
      margin-left: -5.625rem;
      position: absolute; }
  .block-catalog__4-cols .block-catalog__item {
    width: 23.72881%;
    float: left;
    min-height: 28.75rem; }
    .block-catalog__4-cols .block-catalog__item:nth-child(4n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    .block-catalog__4-cols .block-catalog__item:nth-child(4n + 2) {
      margin-left: 25.42373%;
      margin-right: -100%;
      clear: none; }
    .block-catalog__4-cols .block-catalog__item:nth-child(4n + 3) {
      margin-left: 50.84746%;
      margin-right: -100%;
      clear: none; }
    .block-catalog__4-cols .block-catalog__item:nth-child(4n + 4) {
      margin-left: 76.27119%;
      margin-right: -100%;
      clear: none; }
  .block-catalog--list .block-catalog__item {
    display: -ms-flexbox;
    display: flex;
    padding: 0;
    margin-bottom: 1.25rem; }
    .block-catalog--list .block-catalog__item__image {
      width: 23.72881%;
      margin-bottom: 0;
      -ms-flex-align: start;
          -ms-grid-row-align: flex-start;
          align-items: flex-start;
      padding: 3.125rem 0rem; }
    .block-catalog--list .block-catalog__item__wrap {
      width: 74.57627%;
      float: right;
      margin-right: 0;
      padding-top: 2.1875rem;
      padding-left: 4.0625rem; }

.block-type-switch-type {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: justify;
      justify-content: space-between;
  padding: 2.375rem 0rem; }
  .block-type-switch-type .block-filter {
    width: 83.05085%; }

.block-switch-type {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: end;
      justify-content: flex-end;
  width: 15.25424%; }
  .block-switch-type span {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    font-size: 0.875rem; }
  .block-switch-type ul {
    list-style: none; }
    .block-switch-type ul li {
      float: left;
      margin-bottom: 0;
      margin-left: 0.875rem; }
      .block-switch-type ul li i {
        font-size: 0.9375rem;
        height: 100%; }
      .block-switch-type ul li a {
        border-radius: 100%;
        height: 2.75rem;
        width: 2.75rem; }
        .block-switch-type ul li a.is-active, .block-switch-type ul li a:hover {
          background-color: #f8f8f8;
          color: #b6b6b6; }

.block-exchange {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  background: #eaeff2;
  padding-bottom: 2.25rem;
  padding-top: 1.9375rem;
  position: relative; }
  @media (min-width: 48em) {
    .block-exchange {
      padding-bottom: 3.5rem;
      padding-top: 3.8125rem; } }
  .block-exchange__title {
    font-size: 1.5625rem;
    margin-bottom: 0.9375rem; }
    @media (min-width: 48em) {
      .block-exchange__title {
        font-size: 1.875rem;
        margin-bottom: 1.8125rem; } }
  .block-exchange__rate {
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
    background: #fff;
    font-size: 1.5625rem;
    margin-bottom: 1.3125rem;
    padding: 1.4375rem 0.9375rem 0.9375rem; }
    @media (min-width: 48em) {
      .block-exchange__rate {
        font-size: 3.125rem;
        margin-bottom: 1.375rem;
        padding: 0.9375rem 1.25rem 0.3125rem; } }
    @media (min-width: 60em) {
      .block-exchange__rate {
        padding-left: 1.875rem;
        padding-right: 1.875rem; } }
    .block-exchange__rate span {
      color: #77b800;
      float: right;
      font-size: 1.5rem;
      margin-top: 0; }
      @media (min-width: 48em) {
        .block-exchange__rate span {
          font-size: 1.875rem;
          margin-top: 0.9375rem; } }
    .block-exchange__rate i {
      font-size: 1.125rem;
      margin-right: 0.3125rem;
      position: relative;
      top: -0.125rem; }
      @media (min-width: 48em) {
        .block-exchange__rate i {
          top: -0.3125rem; } }
  .block-exchange__volume {
    font-size: 1.25rem;
    margin-bottom: 0.25rem; }
    @media (min-width: 48em) {
      .block-exchange__volume {
        margin-bottom: 0.8125rem; } }
  .block-exchange__time {
    font-size: 0.8125rem; }
    @media (min-width: 48em) {
      .block-exchange__time {
        font-size: 0.75rem; } }
    .block-exchange__time span {
      margin-right: 0.875rem; }
      @media (min-width: 48em) {
        .block-exchange__time span {
          margin-right: 1.75rem; } }
      .block-exchange__time span:last-of-type {
        margin-right: 0; }
  .block-exchange__link-left {
    margin-top: 1.125rem; }
    @media (min-width: 48em) {
      .block-exchange__link-left {
        margin-top: 3.75rem; } }
  .block-exchange__link-right {
    margin-top: 1.5625rem; }
    @media (min-width: 48em) {
      .block-exchange__link-right {
        margin-top: 2.4375rem; } }
  @media screen and (max-width: 47.9375em) {
    .block-exchange__left {
      border-bottom: 0.0625rem solid #ccc;
      margin-bottom: 2rem;
      padding-bottom: 2.25rem; } }
  @media (min-width: 48em) {
    .block-exchange__left {
      padding-right: 1.875rem; } }
  @media (min-width: 60em) {
    .block-exchange__left {
      padding-left: 1.25rem;
      padding-right: 3.125rem; } }
  @media (min-width: 48em) {
    .block-exchange__right {
      border-left: 0.0625rem solid #ccc;
      padding-left: 1.875rem; } }
  @media (min-width: 60em) {
    .block-exchange__right {
      padding-left: 3.125rem;
      padding-right: 1.25rem; } }
  @media (min-width: 48em) {
    .block-exchange__left, .block-exchange__right {
      float: left;
      padding-bottom: 2.6875rem;
      padding-top: 1.25rem;
      width: 49.15254%; } }
  @media (min-width: 73.75em) {
    .block-exchange__left, .block-exchange__right {
      padding-left: 8.47458%;
      padding-right: 8.47458%;
      padding-bottom: 2.8125rem; } }

.timeline-block {
  padding-top: 3.125rem; }
  @media (min-width: 48em) {
    .timeline-block {
      padding-top: 6.25rem; } }
  .timeline-block .heading-block {
    margin-bottom: 2rem;
    text-align: center; }
    .timeline-block .heading-block h4 {
      color: #00aeef;
      font-size: 1.25rem;
      margin-bottom: 0.5rem; }
    .timeline-block .heading-block h5 {
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      color: #585d62;
      font-size: 0.9375rem; }
  .timeline-block__inner {
    overflow: hidden;
    position: relative; }
    .timeline-block__inner:before {
      background-color: #fff;
      content: '';
      height: 100%;
      left: 50%;
      margin-left: -0.125rem;
      position: absolute;
      top: 0;
      width: 0.25rem; }
  .timeline-block__year {
    position: relative; }
    @media (min-width: 48em) {
      .timeline-block__year {
        -ms-flex-align: center;
            align-items: center;
        display: -ms-flexbox;
        display: flex;
        margin-bottom: 1.875rem; } }
    .timeline-block__year__circle {
      background: #fff;
      border-radius: 50%;
      display: block;
      height: 3.875rem;
      line-height: 3.875rem;
      position: relative;
      text-align: center;
      width: 3.875rem;
      font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
      color: #585d62;
      font-size: 0.9375rem;
      line-height: 3.875rem;
      margin: 0 auto 1.875rem;
      position: static; }
      @media (min-width: 48em) {
        .timeline-block__year__circle {
          left: 50%;
          margin-bottom: 0;
          margin-left: -1.9375rem;
          position: absolute; } }
    .timeline-block__year:not(.year-single) + .year-single {
      margin-top: 0 !important; }
    @media (min-width: 48em) {
      .timeline-block__year:not(.year-single) .timeline-block__event:nth-child(even) .timeline-block__event__text:before {
        border-right-color: transparent;
        border-left-color: #fff;
        left: 100%;
        right: inherit; } }
    .timeline-block__year.year-single {
      color: #fff; }
      @media (min-width: 48em) {
        .timeline-block__year.year-single:not(:first-of-type) {
          margin-top: -8.4375rem; } }
      @media tabletLandscape {
        .timeline-block__year.year-single:not(:first-of-type) {
          margin-top: -10rem; } }
      @media (min-width: 48em) {
        .timeline-block__year.year-single:nth-of-type(odd) .timeline-block__event {
          float: right;
          margin-left: auto; } }
      @media (min-width: 48em) {
        .timeline-block__year.year-single:nth-of-type(even) .timeline-block__event__text:before {
          border-right-color: transparent;
          border-left-color: #fff;
          left: 100%;
          right: inherit; } }
  .timeline-block__event {
    background: #fff;
    margin-bottom: 1.875rem;
    text-align: center; }
    @media (min-width: 48em) {
      .timeline-block__event {
        float: left;
        margin-bottom: 0;
        max-width: 40%;
        text-align: left; } }
    @media tabletLandscape {
      .timeline-block__event {
        max-width: 23.125rem; } }
    @media (min-width: 73.75em) {
      .timeline-block__event {
        max-width: 27.5rem; } }
    @media (min-width: 48em) {
      .timeline-block__event:nth-of-type(2n) {
        float: right;
        margin-left: auto; } }
    .timeline-block__event time {
      color: #585d62;
      display: block;
      font-size: 0.8125rem;
      margin-bottom: 0.3125rem; }
    .timeline-block__event a {
      font-size: 0.9375rem; }
    .timeline-block__event__image img {
      display: none; }
      @media (min-width: 48em) {
        .timeline-block__event__image img {
          display: block; } }
    .timeline-block__event__text {
      padding: 1.875rem 1.6875rem 1.5625rem;
      position: relative;
      z-index: 1; }
      .timeline-block__event__text:before {
        border: solid transparent;
        border-right-color: #fff;
        border-width: 1.25rem;
        content: '';
        height: 0;
        margin-top: -1.25rem;
        position: absolute;
        right: 100%;
        top: 50%;
        width: 0; }
  .timeline-block__start {
    background: #fff;
    border-radius: 50%;
    display: block;
    height: 3.875rem;
    line-height: 3.875rem;
    position: relative;
    text-align: center;
    width: 3.875rem;
    display: none;
    margin: 0 auto;
    padding-top: 1.5625rem; }
    @media (min-width: 48em) {
      .timeline-block__start {
        display: block;
        margin-bottom: -0.625rem; } }
    .timeline-block__start:before {
      background-color: #00aeef;
      border-radius: 50%;
      content: '';
      display: block;
      height: 0.75rem;
      margin: 0 auto;
      position: relative;
      width: 0.75rem; }
  .timeline-block__load-more {
    background: #fff;
    border-radius: 50%;
    display: block;
    height: 3.875rem;
    line-height: 3.875rem;
    position: relative;
    text-align: center;
    width: 3.875rem;
    color: #00aeef;
    margin: 3.75rem auto 0; }
  .timeline-block__dot {
    background-color: #fff;
    border-radius: 50%;
    height: 0.75rem;
    left: 50%;
    margin-left: -0.375rem;
    margin-top: -0.375rem;
    position: absolute;
    width: 0.75rem; }

.bg-affair {
  background-color: #6C3A77; }

.bg-sun {
  background-color: #FFB60F; }

.bg-mantis {
  background-color: #5CC151; }

.bg-blaze-orange {
  background-color: #FF7000; }

.bg-viola {
  background-color: #C386A6; }

.bg-limeade {
  background-color: #77B800; }

.bg-persian-green {
  background-color: #00A29B; }

.bg-pacific-blue {
  background-color: #0098CD; }

.bg-razzmatazz {
  background-color: #D1005D; }

.bg-java {
  background-color: #1DC0DC; }

.bg-cerulean {
  background-color: #00AEEF; }

.bg-pear {
  background-color: #0098CD; }

.bg-hollywood-cerise {
  background-color: #E40090; }

.bg-lochmara {
  background-color: #0082C0; }

.bg-red-ribbon {
  background-color: #D6083B; }

.bg-seance {
  background-color: #6b1687; }

.bg-jordy-blue {
  background-color: #85bced; }

.bg-cinnamon {
  background-color: #6f4400; }

.bg-cerise {
  background-color: #da3899; }

.bg-cinnabar {
  background-color: #e2373c; }

.bg-tory-blue {
  background-color: #0e519f; }

.bg-olive-haze {
  background-color: #867f6d; }

.bg-cerulean-v2 {
  background-color: #0d94dc; }

.bg-persian-green-v2 {
  background-color: #00a88e; }

.bg-razzmatazz-v2 {
  background-color: #e0004c; }

.block-abx-google-search {
  margin-top: 3.125rem; }

.grid-two-cols {
  overflow: hidden;
  position: relative; }
  @media (min-width: 73.75em) {
    .grid-two-cols:after, .grid-two-cols:before {
      content: '';
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      z-index: -1;
      width: 50%; }
    .grid-two-cols:before {
      background-color: #f8f8f8;
      left: 0; }
    .grid-two-cols:after {
      background-color: #eaeff2;
      right: 0; } }
  @media (min-width: 73.75em) {
    .grid-two-cols__content {
      padding-left: 8.47458%;
      padding-right: 8.47458%; } }
  .grid-two-cols__left {
    background-color: #f8f8f8;
    margin: 0 -0.875rem;
    padding: 0 0.875rem; }
    @media (min-width: 48em) {
      .grid-two-cols__left {
        padding: 0 1.25rem 1.4375rem 1.25rem;
        margin: 0 -1.25rem; } }
    @media (min-width: 73.75em) {
      .grid-two-cols__left {
        width: 66.15044%;
        float: left;
        margin-right: 1.54867%;
        padding: 0 0 6.6875rem 0;
        margin: 0; } }
  .grid-two-cols__right {
    padding: 2rem 0.875rem 0rem 0.875rem;
    background-color: #eaeff2;
    margin: 0 -0.875rem; }
    @media (min-width: 48em) {
      .grid-two-cols__right {
        padding: 0 1.25rem;
        margin: 0 -1.25rem; } }
    @media (min-width: 73.75em) {
      .grid-two-cols__right {
        width: 32.30088%;
        float: right;
        margin-right: 0;
        padding: 0 0 0 4.875rem;
        margin: 0; } }
  .grid-two-cols .block-tabs {
    margin-bottom: 0;
    padding-bottom: 4rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .grid-two-cols .block-tabs {
        margin-top: 0;
        padding-top: 1.875rem;
        padding-left: 1.875rem;
        padding-right: 1.875rem; } }
    @media (min-width: 73.75em) {
      .grid-two-cols .block-tabs {
        padding-right: 6.6875rem;
        margin-bottom: 0;
        margin-top: 3.4375rem; } }
    .grid-two-cols .block-tabs__inner-wrapper {
      padding-top: 3.125rem; }
      @media (min-width: 48em) {
        .grid-two-cols .block-tabs__inner-wrapper {
          padding: 1.875rem 0 0; } }
      @media (min-width: 73.75em) {
        .grid-two-cols .block-tabs__inner-wrapper {
          padding: 0; } }
  .grid-two-cols .block-contact-info {
    padding-top: 1.25rem;
    padding-bottom: 3.125rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .grid-two-cols .block-contact-info {
        padding-top: 2.5rem;
        padding-left: 1.875rem;
        padding-right: 1.875rem; } }
    @media (min-width: 73.75em) {
      .grid-two-cols .block-contact-info {
        padding-top: 4.8125rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .grid-two-cols .block-contact-info__wrap > .block-contact-info__item {
        width: 48.82943%;
        float: left;
        margin-right: 2.34114%; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .grid-two-cols .block-contact-info__wrap > .block-contact-info__item__wrap {
        width: 48.82943%;
        float: right;
        margin-right: 0; } }
    @media screen and (max-width: 47.9375em) {
      .grid-two-cols .block-contact-info__item__wrap {
        margin-top: 4.375rem; } }
    @media (min-width: 73.75em) {
      .grid-two-cols .block-contact-info__item__wrap {
        margin-top: 7.5rem; } }
    .grid-two-cols .block-contact-info__body {
      line-height: 1.25rem; }
  .grid-two-cols .block-faqs__item__body {
    display: none; }
  .grid-two-cols .block-faqs__item.is-active .block-faqs__item__body {
    display: block; }

.block-counter {
  margin-bottom: 1.3125rem;
  overflow: hidden; }
  @media screen and (max-width: 47.9375em) {
    .block-counter {
      border-bottom: 1px solid #dadee0; } }
  @media (min-width: 48em) {
    .block-counter {
      margin-bottom: 1.875rem; } }
  .block-counter__item {
    margin-bottom: 2.5rem; }
  .block-counter__title {
    font-size: 0.9375rem;
    margin-bottom: 0.9375rem; }
    @media (min-width: 48em) {
      .block-counter__title {
        font-size: 1.25rem; } }
    .block-counter__title span {
      color: #d6083b; }
  .block-counter__numbers {
    font-size: 1.125rem; }
    @media (min-width: 48em) {
      .block-counter__numbers {
        font-size: 1.5625rem; } }
    .block-counter__numbers span {
      background-color: #f5f7f9;
      float: left;
      height: 2.1875rem;
      line-height: 2.1;
      margin-right: 0.0625rem;
      margin-right: 0.125rem;
      text-align: center;
      width: 1.75rem; }
      @media (min-width: 48em) {
        .block-counter__numbers span {
          height: 2.8125rem;
          line-height: 1.9;
          margin-bottom: 0.0625rem;
          width: 2rem; } }
      .block-counter__numbers span.block-counter__numbers--bold {
        font-family: 'gotham-medium', Helvetica, Arial, sans-serif; }
    .block-counter__numbers .space-right {
      margin-right: 0.5rem; }

.block-panels-menu {
  padding-top: 2.5rem;
  padding-bottom: 1.25rem; }
  @media (min-width: 48em) {
    .block-panels-menu {
      padding-top: 4.1875rem;
      padding-bottom: 4.6875rem; } }
  .block-panels-menu__item {
    position: relative;
    margin-bottom: 1.875rem; }
  .block-panels-menu__title {
    color: #d6083b;
    margin-bottom: 0.625rem;
    text-align: center; }
    @media (min-width: 48em) {
      .block-panels-menu__title {
        font-size: 1.125rem;
        margin-bottom: 0.25rem;
        text-align: left; } }
  .block-panels-menu__body ul {
    list-style: none;
    padding: 0.6875rem 0.5625rem;
    background-color: #f7f7f7;
    -ms-flex-align: stretch;
        align-items: stretch;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: row wrap;
        flex-flow: row wrap; }
    .block-panels-menu__body ul li {
      float: left;
      margin-bottom: 0;
      padding: 0.4375rem;
      text-align: center;
      color: #999;
      position: relative; }
      .block-panels-menu__body ul li:before {
        content: '';
        background-color: #eef1f3;
        width: 0.0625rem;
        height: 0.875rem;
        position: absolute;
        top: 0.6875rem;
        right: 0; }
      .block-panels-menu__body ul li:last-child:before {
        background-color: transparent;
        width: 0;
        height: 0; }
      @media screen and (max-width: 29.9375em) {
        .block-panels-menu__body ul li {
          width: 25%; }
          .block-panels-menu__body ul li:nth-child(4n):before {
            background-color: transparent;
            width: 0;
            height: 0; } }
      @media screen and (min-width: 30em) and (max-width: 47.9375em) {
        .block-panels-menu__body ul li {
          width: 20%; }
          .block-panels-menu__body ul li:nth-child(5n):before {
            background-color: transparent;
            width: 0;
            height: 0; } }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .block-panels-menu__body ul li {
          width: 10%; }
          .block-panels-menu__body ul li:nth-child(10n):before {
            background-color: transparent;
            width: 0;
            height: 0; } }
      @media (min-width: 73.75em) {
        .block-panels-menu__body ul li {
          width: 6.1%; } }
  .block-panels-menu__link {
    overflow: hidden; }
    @media (min-width: 48em) {
      .block-panels-menu__link {
        position: absolute;
        top: -0.125rem;
        right: 0; } }
  .block-panels-menu--status, .block-panels-menu--package-insert, .block-panels-menu--msds {
    font-size: 0.75rem;
    margin-left: 0.0625rem;
    margin-top: 0.625rem;
    font-family: 'gotham-bold', Helvetica, Arial, sans-serif; }
    @media (min-width: 48em) {
      .block-panels-menu--status, .block-panels-menu--package-insert, .block-panels-menu--msds {
        float: left;
        margin-top: 0;
        font-size: 0.625rem;
        height: 1.9375rem; } }
    .block-panels-menu--status a, .block-panels-menu--package-insert a, .block-panels-menu--msds a {
      display: block;
      padding: 0.4375rem 1.25rem;
      color: #fff;
      background-color: #585d62;
      height: 2.5rem;
      line-height: 2.5; }
      @media (min-width: 48em) {
        .block-panels-menu--status a, .block-panels-menu--package-insert a, .block-panels-menu--msds a {
          height: 1.9375rem;
          line-height: 1.75; } }
    .block-panels-menu--status i, .block-panels-menu--package-insert i, .block-panels-menu--msds i {
      font-size: 0.6875rem;
      color: #adadad;
      padding-right: 0.5rem; }
  .block-panels-menu--status {
    background-color: #77b800;
    padding: 0.375rem 1.25rem;
    color: #fff;
    margin-top: 0;
    line-height: 1.75; }
    .block-panels-menu--status i {
      color: #fff;
      font-size: 0.8125rem; }

@viewport {
  zoom: 1;
  width: extend-to-zoom; }

@-ms-viewport {
  width: extend-to-zoom;
  zoom: 1; }

html {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  line-height: 1.4;
  color: #585d62; }

body {
  -webkit-text-size-adjust: none; }

.nav ul {
  margin-bottom: 0.625rem; }

.expanded-menu-icon {
  cursor: pointer; }
  @media screen and (max-width: 47.9375em) {
    .expanded-menu-icon {
      display: block;
      font-size: 1rem;
      height: 4.25rem;
      margin-left: 0;
      margin-top: -4.25rem;
      position: absolute;
      right: 0;
      text-align: center;
      transition: all 0.3s ease;
      width: 3rem;
      z-index: 3; }
      .expanded-menu-icon:before {
        height: 100%;
        line-height: 4.375rem;
        width: 100%; } }
  @media screen and (max-width: 47.9375em) {
    .expanded-menu-icon.open {
      transform: rotateX(180deg) rotateY(0deg) rotateZ(0deg); } }

.main-menu {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  font-size: 0.875rem;
  padding: 0; }
  @media (min-width: 48em) {
    .main-menu .expanded-menu-icon {
      display: none; } }
  .main-menu ul {
    display: none; }
    @media (min-width: 48em) {
      .main-menu ul {
        left: 0;
        position: absolute;
        right: 0; } }
  .main-menu li {
    display: block;
    margin-bottom: 0; }
    @media (min-width: 48em) {
      .main-menu li {
        float: left; } }
    @media screen and (max-width: 47.9375em) {
      .main-menu li {
        border-bottom: 0.0625rem solid #e2e7ea;
        position: relative; }
        .main-menu li:last-of-type {
          border-bottom: 0; } }
  .main-menu a {
    color: #585d62;
    display: block;
    padding: 1.6875rem 3.125rem 1.4375rem 1.875rem;
    text-decoration: none; }
    @media (min-width: 48em) {
      .main-menu a {
        padding: 1.6875rem 3.125rem 1.4375rem 2.25rem; } }
    @media (min-width: 73.75em) {
      .main-menu a {
        display: inline-block;
        padding: 1.4375rem 1.4375rem 1.0625rem; } }
    .main-menu a:hover {
      color: #0093da; }
  .main-menu > li > a {
    line-height: 1.25rem;
    transition: .3s; }
    @media (min-width: 48em) {
      .main-menu > li > a {
        padding: 1.9375rem 0.9375rem 1.75rem; } }
  .main-menu > li ul {
    padding-left: 0; }
    @media screen and (max-width: 47.9375em) {
      .main-menu > li ul {
        background: #eaeff2;
        border-top: 0.0625rem solid #e2e7ea; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .main-menu > li ul {
        background: #f2f7fa;
        height: 55rem;
        width: 20.625rem; } }
    @media (min-width: 73.75em) {
      .main-menu > li ul {
        background: #eaeff2; } }
    @media screen and (max-width: 47.9375em) {
      .main-menu > li ul a {
        font-family: 'gotham-bold', Helvetica, Arial, sans-serif;
        padding-left: 3.125rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .main-menu > li ul > li {
        font-family: 'gotham-book', Helvetica, Arial, sans-serif;
        border-bottom: 0.0625rem solid #e2e7ea;
        border-right: 0.0625rem solid #e2e7ea;
        float: none; } }
    .main-menu > li ul > li.expanded > a {
      position: relative; }
      @media screen and (max-width: 73.6875em) {
        .main-menu > li ul > li.expanded > a {
          font-family: 'gotham-medium', Helvetica, Arial, sans-serif; } }
      .main-menu > li ul > li.expanded > a:after, .main-menu > li ul > li.expanded > a:before {
        display: none;
        font-size: 0.75rem;
        margin-left: 0.1875rem;
        margin-top: 0.125rem;
        position: absolute;
        right: 0.5625rem; }
      @media (min-width: 73.75em) {
        .main-menu > li ul > li.expanded > a:before {
          display: block; } }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .main-menu > li ul > li.expanded > a:after {
          display: block;
          margin-top: -1rem;
          right: 1.375rem; } }
    @media screen and (max-width: 47.9375em) {
      .main-menu > li ul > li > ul {
        background: #e2e7ea;
        padding-bottom: 0.5625rem;
        padding-top: 1.3125rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .main-menu > li ul > li > ul {
        background: #eaeff2;
        left: 20.625rem;
        top: 0; } }
    @media (min-width: 73.75em) {
      .main-menu > li ul > li > ul {
        left: auto;
        right: auto;
        width: 13.375rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .main-menu > li ul > li > ul > li {
        border-bottom: 0; } }
    @media (min-width: 73.75em) {
      .main-menu > li ul > li > ul > li {
        border-top: 1px solid #f2f7fa;
        width: 100%; } }
    @media screen and (max-width: 47.9375em) {
      .main-menu > li ul > li > ul a {
        font-family: 'gotham-book', Helvetica, Arial, sans-serif;
        padding: 1rem 3.125rem 0.9375rem 5rem; } }
    @media screen and (max-width: 47.9375em) {
      .main-menu > li ul > li > ul li {
        border-bottom: 0;
        border-right: 0; } }
    @media (min-width: 48em) {
      .main-menu > li ul > li:hover > .expanded-menu-icon,
      .main-menu > li ul > li:hover > a {
        color: #0093da; }
      .main-menu > li ul > li:hover > ul {
        display: block;
        z-index: 3; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .main-menu > li ul > li:hover {
        background: #eaeff2;
        border-right: 0.0625rem solid #eaeff2; } }
  @media (min-width: 48em) {
    .main-menu > li:hover > a {
      background: #eaeff2;
      color: #0093da; }
    .main-menu > li:hover > ul {
      display: block;
      z-index: 4; } }
  @media (min-width: 73.75em) {
    .active-trail .main-menu > li > a {
      background: #eaeff2;
      color: #0093da; }
    .active-trail .main-menu > li > ul {
      display: block;
      z-index: 4; } }
  @media (min-width: 73.75em) {
    .veterinary-page .main-menu > li.veterinary-menu-item > a,
    .careers-page .main-menu > li.careers-menu-item > a,
    .med-page .main-menu > li.med-menu-item > a,
    .about-page .main-menu > li.about-menu-item > a {
      background: #eaeff2;
      color: #0093da; }
    .veterinary-page .main-menu > li.veterinary-menu-item > ul,
    .careers-page .main-menu > li.careers-menu-item > ul,
    .med-page .main-menu > li.med-menu-item > ul,
    .about-page .main-menu > li.about-menu-item > ul {
      display: block;
      z-index: 3; } }
  @media (min-width: 48em) {
    .main-menu li:hover > a {
      background: #eaeff2;
      color: #0093da; }
    .main-menu li:hover > ul {
      display: block;
      z-index: 5; } }
  @media (min-width: 73.75em) {
    .main-menu .active-trail {
      margin-bottom: 3.75rem; }
      .main-menu .active-trail > a {
        background: #eaeff2;
        color: #0093da; }
      .main-menu .active-trail > ul {
        display: block;
        z-index: 4; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .main-menu--right > li {
      border-bottom: 0.0625rem solid #e2e7ea;
      border-left: 0.0625rem solid #e2e7ea;
      float: none; }
      .main-menu--right > li > a {
        font-family: 'gotham-book', Helvetica, Arial, sans-serif;
        display: block;
        padding: 1.6875rem 3.125rem 1.4375rem 2.8125rem; }
      .main-menu--right > li:hover {
        border-left: 0.0625rem solid #eaeff2; }
      .main-menu--right > li > ul {
        background: #eaeff2;
        left: auto;
        right: 20.625rem;
        top: 0; }
        .main-menu--right > li > ul > li {
          border-bottom: 0;
          border-right: 0; } }
  .main-menu--right > li.expanded > a {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    position: relative; }
    .main-menu--right > li.expanded > a:before {
      display: none; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .main-menu--right > li.expanded > a:before {
          display: block;
          font-size: 0.75rem;
          margin-top: 0.1875rem;
          position: absolute;
          right: 1.375rem; } }

.navigation-dropdown {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  font-size: 0.8125rem;
  padding: 0; }
  .navigation-dropdown ul {
    background: #eaeff2;
    display: none;
    padding-bottom: 1.5625rem;
    padding-top: 1.5625rem;
    position: absolute; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .navigation-dropdown ul {
        width: 15.625rem; } }
  .navigation-dropdown li {
    display: block;
    float: left;
    margin-bottom: 0; }
    .navigation-dropdown li.active > a {
      color: #0093da; }
  .navigation-dropdown a {
    color: #585d62;
    display: block;
    padding: 0.8125rem 3.5625rem 0.6875rem;
    text-transform: capitalize;
    transition: .3s; }
    .navigation-dropdown a:focus, .navigation-dropdown a:hover {
      color: #0093da; }
  .navigation-dropdown > li > a {
    color: #0098aa;
    font-size: 0.625rem;
    line-height: 1.0625rem;
    padding: 1.875rem 0.625rem 1.75rem 1.125rem;
    position: relative;
    text-transform: uppercase; }
    .navigation-dropdown > li > a:after {
      font-size: 1rem;
      margin-left: 0.1875rem;
      position: relative;
      top: 0.125rem; }
    .navigation-dropdown > li > a:focus, .navigation-dropdown > li > a:hover {
      color: #0082c0; }
  .navigation-dropdown > li:hover > a {
    background: #eaeff2;
    color: #0082c0; }
  .navigation-dropdown > li:hover > ul {
    display: block;
    z-index: 5; }
  .touchevents .navigation-dropdown > li.toggled > a {
    background: #eaeff2;
    color: #0082c0; }
  .touchevents .navigation-dropdown > li.toggled > ul {
    display: block;
    z-index: 5; }
  .navigation-dropdown > li > ul {
    right: 0; }
    .navigation-dropdown > li > ul > li {
      float: none; }
  .navigation-dropdown__global ul {
    height: auto; }
  .navigation-dropdown__global > ul {
    background: #e4e5e6;
    width: 43.375rem; }
    .navigation-dropdown__global > ul > li {
      width: 33.5%; }
      .navigation-dropdown__global > ul > li.active, .navigation-dropdown__global > ul > li:hover {
        background: #eaeff2; }
        .navigation-dropdown__global > ul > li.active > a, .navigation-dropdown__global > ul > li:hover > a {
          color: #d6083b; }
        .navigation-dropdown__global > ul > li.active > ul, .navigation-dropdown__global > ul > li:hover > ul {
          display: block; }
        .navigation-dropdown__global > ul > li.active:active > ul, .navigation-dropdown__global > ul > li:hover:active > ul {
          z-index: 3; }
        .navigation-dropdown__global > ul > li.active:hover > ul, .navigation-dropdown__global > ul > li:hover:hover > ul {
          z-index: 4; }
      .navigation-dropdown__global > ul > li > ul {
        margin-left: 33.5%;
        top: 0;
        width: 66.5%;
        min-height: 100%; }
        .navigation-dropdown__global > ul > li > ul > li {
          width: 50%; }
          .navigation-dropdown__global > ul > li > ul > li > a {
            padding-left: 4rem; }

@media (min-width: 48em) {
  .navigation-selects {
    display: none; } }

.navigation-selects label {
  font-family: 'gotham-book', Helvetica, Arial, sans-serif;
  color: #585d62;
  display: block;
  font-size: 0.875rem;
  margin-bottom: 0.1875rem; }

@media screen and (max-width: 47.9375em) {
  .navigation-selects .form-type-select, .navigation-selects .block-event .tab-filter, .block-event .navigation-selects .tab-filter {
    background-color: #fff;
    border: 1px solid #eaeff2; }
    .navigation-selects .form-type-select:before, .navigation-selects .block-event .tab-filter:before, .block-event .navigation-selects .tab-filter:before {
      content: '\e901'; }
    .navigation-selects .form-type-select:before, .navigation-selects .block-event .tab-filter:before, .block-event .navigation-selects .tab-filter:before {
      color: #00a29b; }
    .navigation-selects .form-type-select select, .navigation-selects .block-event .tab-filter select, .block-event .navigation-selects .tab-filter select {
      font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
      color: #00a29b;
      font-size: 0.875rem;
      padding: 0.875rem 2.1875rem 0.625rem 0.625rem;
      text-transform: uppercase; } }

.navigation-selects__language, .navigation-selects__global {
  padding: 1.75rem; }

.navigation-selects__language {
  border-bottom: 0.0625rem solid #e2e7ea; }

.navigation-selects__global {
  padding-bottom: 1.125rem; }
  .navigation-selects__global .form-type-select, .navigation-selects__global .block-event .tab-filter, .block-event .navigation-selects__global .tab-filter {
    margin-bottom: 1.0625rem; }

.responsive-icons {
  display: none; }
  @media screen and (max-width: 73.6875em) {
    .responsive-icons {
      display: block;
      float: right; } }
  .responsive-icons a {
    color: #585d62;
    cursor: pointer;
    display: block;
    float: left;
    height: 3.875rem;
    text-align: center;
    transition: .3s;
    width: 3.75rem; }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .responsive-icons a {
        height: 4.9375rem;
        display: none; }
        .responsive-icons a:last-of-type {
          display: block; } }
    .responsive-icons a:before {
      height: 100%;
      line-height: 3.875rem;
      width: 100%;
      transition: .3s; }
      @media screen and (min-width: 48em) and (max-width: 73.6875em) {
        .responsive-icons a:before {
          line-height: 4.9375rem;
          transition: .3s; } }
    .responsive-icons a.active-icon {
      background: #f2f7fa; }

.footer ul {
  padding-left: 0; }

.footer-top {
  background-color: #eaeff2;
  color: #585d62;
  padding: 1.875rem 0rem 0.9375rem; }
  @media (min-width: 48em) {
    .footer-top {
      padding-top: 4.0625rem; } }
  @media (min-width: 60em) {
    .footer-top {
      padding: 4.0625rem 3.4375rem 0rem 3.4375rem; } }
  @media (min-width: 73.75em) {
    .footer-top {
      padding: 4.1875rem 0rem 4rem; } }
  @media (min-width: 48em) {
    .footer-top .one-column {
      width: 48.6413%;
      float: left;
      margin-right: 2.71739%; }
      .footer-top .one-column:nth-child(2n) {
        margin-right: 0; } }
  @media (min-width: 73.75em) {
    .footer-top .one-column {
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .footer-top .two-columns {
      width: 31.52174%;
      float: right;
      margin-right: 0;
      margin-bottom: 2.375rem; } }
  .footer-top .last {
    margin-top: 3.0625rem; }
    @media (min-width: 48em) {
      .footer-top .last {
        margin-top: 0; } }
  .footer-top__item .list--flat {
    display: none; }
  .footer-top__item.is-active .list--flat {
    display: block; }
  @media (min-width: 48em) {
    .footer-top__item {
      margin-bottom: 0.625rem; }
      .footer-top__item .list--flat {
        display: block; } }
  @media (min-width: 73.75em) {
    .footer-top__item {
      width: 23.72881%;
      float: left;
      margin-right: 1.69492%;
      margin-bottom: 2.5rem;
      padding-right: 2.3125rem; }
      .footer-top__item.last {
        float: right;
        margin-right: 0;
        padding-right: 0; } }
  .footer-top__title {
    border-bottom: 1px solid #dadee0;
    font-size: 1rem;
    margin-bottom: 1.5625rem;
    padding-bottom: 0.75rem; }
    @media (min-width: 48em) {
      .footer-top__title {
        font-size: 1.25rem;
        margin-bottom: 2.125rem;
        padding-bottom: 1.375rem; } }
    @media screen and (max-width: 47.9375em) {
      .footer-top__title {
        position: relative; }
        .footer-top__title:before {
          content: '\f107';
          font-family: 'abaxis';
          line-height: 1;
          position: absolute;
          right: 0.3125rem;
          top: 0; }
        .footer-top__title:hover {
          cursor: pointer; } }

.footer-bottom {
  font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
  background-color: #f8f8f8;
  color: #585d62;
  font-size: 0.75rem;
  padding: 1.875rem 0rem; }
  @media screen and (max-width: 47.9375em) {
    .footer-bottom {
      font-size: 0.625rem;
      text-align: center; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .footer-bottom {
      padding: 1.625rem 0rem; } }

@media screen and (max-width: 47.9375em) {
  .footer-logo {
    display: inline-block; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .footer-logo {
    float: left;
    overflow: hidden;
    padding-top: 0.625rem;
    width: 20.1087%; } }

@media (min-width: 73.75em) {
  .footer-logo {
    width: 15.25424%;
    float: left;
    margin-right: 1.69492%; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .copyright {
    line-height: 1.25rem;
    padding: 0rem 0.625rem; } }

@media (min-width: 73.75em) {
  .copyright {
    width: 49.15254%;
    float: left;
    margin-right: 1.69492%;
    line-height: 1.7; } }

.copyright p {
  margin-bottom: 0; }

.nav-footer {
  margin-top: 1.125rem; }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .nav-footer {
      margin-top: 0.625rem;
      padding-left: 20.1087%; } }
  @media (min-width: 73.75em) {
    .nav-footer {
      width: 32.20339%;
      float: right;
      margin-right: 0;
      text-align: right; } }
  .nav-footer__menu {
    display: inline-block;
    list-style: none; }
    .nav-footer__menu li {
      float: left;
      margin-left: 1.4375rem;
      position: relative; }
      .nav-footer__menu li.first {
        margin-left: 0; }
        .nav-footer__menu li.first:before {
          border-left: 0; }
      .nav-footer__menu li a {
        color: #0082c0;
        text-decoration: none; }
        .nav-footer__menu li a:hover {
          color: #0093da; }

.search-box {
  position: relative; }
  @media (min-width: 48em) {
    .search-box {
      width: 1.875rem;
      height: 2.5rem;
      position: absolute;
      right: 3.125rem;
      top: -0.125rem;
      transition: .5s; } }
  @media (min-width: 73.75em) {
    .search-box {
      right: 0; } }
  @media (min-width: 48em) {
    .search-box.show-search-box {
      display: block;
      width: 11.875rem; }
      .search-box.show-search-box .form-text {
        border-color: #ddd;
        padding-left: 1.875rem; }
      .search-box.show-search-box:before {
        background: transparent;
        bottom: -1.25rem;
        content: '';
        left: -1.25rem;
        position: absolute;
        right: -1.25rem;
        top: -1.25rem;
        z-index: 3; } }
  .search-box .form-type-textfield {
    margin: 0;
    position: relative;
    width: 100%;
    z-index: 4; }
  .search-box .form-text {
    font-family: 'gotham-book', Helvetica, Arial, sans-serif;
    color: #666;
    padding-top: 0.625rem;
    width: 100%; }
    @media screen and (max-width: 47.9375em) {
      .search-box .form-text {
        padding-left: 1.875rem; } }
    @media (min-width: 48em) {
      .search-box .form-text {
        border-color: transparent;
        margin: 0;
        transition: .8s; } }
  .search-box .form-actions {
    height: 2.5rem;
    margin: 0;
    overflow: hidden;
    position: absolute;
    top: 0;
    width: 1.875rem;
    z-index: 4; }
    .search-box .form-actions:before {
      color: #585d62;
      font-size: 0.875rem;
      position: absolute;
      text-align: center;
      top: 0;
      line-height: 2.5rem;
      width: 100%;
      height: 100%; }
    .search-box .form-actions .form-submit {
      height: 100%;
      opacity: 0;
      width: 100%; }

@media screen and (max-width: 47.9375em) {
  .header__navigation-dropdown, .header__navigation, .header__search {
    background: #f2f7fa;
    display: none;
    left: 0;
    overflow: hidden;
    position: absolute;
    right: 0;
    top: 3.875rem;
    z-index: 55; } }

.header {
  background: #fff;
  position: relative; }
  .header__logo {
    float: left;
    transition: .3s; }
    @media screen and (max-width: 47.9375em) {
      .header__logo {
        padding: 1rem 1.5rem 0.5rem; } }
    @media (min-width: 48em) {
      .header__logo {
        height: 4.9375rem;
        margin-right: 2.125rem;
        padding: 1.1875rem 0.625rem 0.625rem;
        text-align: center;
        width: 10.25rem; } }
    @media screen and (min-width: 48em) and (max-width: 73.6875em) {
      .header__logo {
        height: auto;
        line-height: 0;
        padding-bottom: 0;
        width: 9.875rem; } }
    .header__logo a {
      display: inline-block; }
      @media screen and (max-width: 47.9375em) {
        .header__logo a {
          width: 5.125rem; } }
  @media screen and (max-width: 47.9375em) {
    .header__navigation-dropdown {
      overflow: visible; } }
  @media (min-width: 48em) {
    .header__navigation-dropdown {
      float: right;
      margin-right: 3.4375rem; } }
  @media (min-width: 48em) {
    .header__navigation__left {
      float: left; } }
  @media screen and (max-width: 47.9375em) {
    .header__navigation__left .main-menu {
      border-bottom: 0.0625rem solid #e2e7ea; } }
  @media (min-width: 48em) {
    .header__navigation__left.contextual-region {
      position: inherit; } }
  @media (min-width: 73.75em) {
    .header__navigation__right {
      float: right; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .header__navigation__right {
      background: #f2f7fa;
      display: none;
      height: 55rem;
      position: absolute;
      right: 0;
      top: 4.9375rem;
      width: 20.625rem;
      z-index: 4; } }
  .header__search {
    transition: .3s; }
    @media (min-width: 48em) {
      .header__search {
        position: absolute;
        right: 1.5625rem;
        top: 1.375rem;
        width: 1.875rem; } }
    @media screen and (max-width: 47.9375em) {
      .header__search {
        padding: 1.75rem; } }

.sticky {
  box-shadow: 0 0 0.375rem -0.125rem #999;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 60; }
  .toolbar-fixed .sticky {
    margin-top: 2.4375rem; }
  .toolbar-horizontal.toolbar-tray-open .sticky {
    margin-top: 4.9375rem; }
  @media (min-width: 48em) {
    .sticky .main-menu > li > a,
    .sticky .navigation-dropdown > li > a {
      padding: 1.125rem 0.9375rem; } }
  .sticky .header__logo {
    height: 3.125rem;
    transition: .3s;
    padding: 0.5rem 1.5rem; }
    @media (min-width: 48em) {
      .sticky .header__logo {
        padding: 0.3125rem 1.5rem; } }
    @media (min-width: 73.75em) {
      .sticky .header__logo {
        height: 3.5rem;
        padding: 0.3125rem; } }
  @media (min-width: 48em) {
    .sticky .header__search {
      top: 0.5625rem;
      transition: .3s; } }
  @media screen and (max-width: 47.9375em) {
    .sticky .header__navigation, .sticky .header__search {
      top: 3.125rem;
      transition: .3s; } }
  @media screen and (min-width: 48em) and (max-width: 73.6875em) {
    .sticky .header__navigation__right {
      top: 3.5rem; } }
  @media screen and (max-width: 73.6875em) {
    .sticky .responsive-icons a {
      height: 3.5rem; }
      .sticky .responsive-icons a:before {
        line-height: 3.5rem; } }

.header-dropdown .chosen-single {
  background: transparent;
  border: 0;
  line-height: 1.4;
  padding: 0rem 0.9375rem 0rem 0rem; }
  .header-dropdown .chosen-single span {
    font-family: 'gotham-medium', Helvetica, Arial, sans-serif;
    color: #585d62;
    font-size: 0.625rem;
    font-weight: 400;
    margin: 0rem 0.1875rem 0rem 0rem; }
  .header-dropdown .chosen-single div {
    width: 0.9375rem; }
  .header-dropdown .chosen-single b {
    color: #585d62;
    font-size: 1rem;
    padding-top: 0;
    position: relative;
    top: -0.0625rem; }

.header-dropdown .chosen-container-active.chosen-with-drop .chosen-single {
  box-shadow: none; }

.header-dropdown .chosen-container .chosen-drop {
  border-top: 0.0625rem solid #ccc; }

.wrap-styleguide-section {
  padding: 1.875rem 0rem; }

.styleguide-section > h2 {
  border-bottom: 4px solid #0082c0;
  padding-bottom: 0.3125rem;
  margin-bottom: 0.9375rem; }

.styleguide-element {
  margin-bottom: 1.25rem; }
  @media (min-width: 48em) {
    .styleguide-element:before, .styleguide-element:after {
      content: '';
      display: table; }
    .styleguide-element:after {
      clear: both; } }

@media (min-width: 48em) {
  .styles-display {
    width: 43.29133%;
    float: left;
    margin-right: 2.07561%; } }

@media (min-width: 48em) {
  .styles-params {
    width: 43.29133%;
    float: right;
    margin-right: 0; } }

.icon-list {
  list-style: none; }
  .icon-list li {
    width: 60.70205%;
    float: left;
    border: 1px solid #0082c0;
    margin-bottom: 3.79919%;
    text-align: center;
    padding: 1.25rem 0.625rem; }
    .icon-list li:nth-child(1n + 1) {
      margin-left: 0;
      margin-right: -100%;
      clear: both;
      margin-left: 0; }
    @media (min-width: 48em) {
      .icon-list li {
        width: 31.94959%;
        float: left;
        margin-bottom: 2.07561%; }
        .icon-list li:nth-child(3n + 1) {
          margin-left: 0;
          margin-right: -100%;
          clear: both;
          margin-left: 0; }
        .icon-list li:nth-child(3n + 2) {
          margin-left: 34.0252%;
          margin-right: -100%;
          clear: none; }
        .icon-list li:nth-child(3n + 3) {
          margin-left: 68.05041%;
          margin-right: -100%;
          clear: none; } }

.icon-appearance {
  font-size: 1.5625rem; }

.icon-class-name {
  display: block; }

.block-worldwide {
  padding-top: 1.875rem;
  margin-bottom: 1.875rem; }
  @media (min-width: 48em) {
    .block-worldwide {
      padding-top: 6.4375rem;
      margin-bottom: 0; } }
  @media (min-width: 73.75em) {
    .block-worldwide {
      margin-bottom: 3.25rem; } }
  .block-worldwide .section-description {
    margin-bottom: 1.25rem; }
    @media (min-width: 48em) {
      .block-worldwide .section-description {
        margin-bottom: 4.25rem; } }

@media (min-width: 768px) {
  .page-node-type-event .block-intro {
    padding-top: 0; } }

@media (min-width: 1180px) {
  .page-node-type-event .block-intro .container-narrow {
    padding-bottom: 1.875rem; } }

.block-event-detail {
  line-height: 1.5625rem;
  padding-bottom: 0.375rem;
  padding-top: 1.4375rem; }
  @media (min-width: 48em) {
    .block-event-detail {
      padding-top: 2.6875rem; } }
  @media (min-width: 73.75em) {
    .block-event-detail {
      padding-top: 5.0625rem; } }
  .block-event-detail p {
    margin-bottom: 1.625rem; }
    @media screen and (max-width: 47.9375em) {
      .block-event-detail p {
        line-height: 1.125rem;
        margin-bottom: 1.125rem; } }

@media screen and (min-width: 48em) and (max-width: 73.6875em) {
  .veterinary-page .block-stream .section-description {
    margin-bottom: 4.0625rem; } }

.page-timeline .main-content {
  background-color: #eaeff2; }

.path-frontpage .block-stream {
  padding-top: 0; }

.contact-message-support-center-form .field--type-abxaddress summary {
  font-family: 'gotham-light', Helvetica, Arial, sans-serif;
  font-size: 0.8125rem;
  font-weight: normal;
  margin-bottom: 0.25rem;
  overflow: hidden;
  padding: 0;
  text-indent: -0.75rem; }
  @media (min-width: 48em) {
    .contact-message-support-center-form .field--type-abxaddress summary {
      margin-bottom: 0.375rem; } }
  .contact-message-support-center-form .field--type-abxaddress summary .details-title {
    background-color: #fff;
    color: #585d62; }

.contact-message-support-center-form .field--type-abxaddress .form-type-select, .contact-message-support-center-form .field--type-abxaddress .block-event .tab-filter, .block-event .contact-message-support-center-form .field--type-abxaddress .tab-filter {
  margin-top: 0; }

.contact-message-support-center-form .field--type-abxaddress .details-wrapper {
  padding: 0; }

.abx-reference-center-filter {
  -ms-flex-pack: center;
      justify-content: center; }

<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> ABXMED-37: Update js for FAQs, menu footer
